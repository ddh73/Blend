{
  "swagger": "2.0",
  "info": {
    "version": "4.3.0",
    "title": "Blend API",
    "contact": {}
  },
  "host": "api.beta.blendlabs.com",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "basic"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/authentication-status": {
      "get": {
        "description": "Checks to see if the current user is authenticated with Blend. Primarily for integration use cases to avoid retries downstream in the workflow.",
        "summary": "Check Authentication Status",
        "tags": [
          "Auth"
        ],
        "operationId": "CheckAuthenticationStatus",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User Auth Status Result",
            "schema": {
              "$ref": "#/definitions/AuthenticationStatusResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/file-export": {
      "get": {
        "description": "Return the entire MISMO 3.3.1 or Fannie 3.2 file for this application.",
        "summary": "Export Application Data",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "ExportApplicationData",
        "deprecated": false,
        "produces": [
          "text/plain; charset=utf-8",
          "application/xml; charset=utf-8",
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "enum": [
              "fannie",
              "mismo"
            ],
            "type": "string",
            "description": "The requested data format for the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Data Exported Successfully",
            "schema": {
              "type": "string",
              "default": ""
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications": {
      "post": {
        "description": "Create a new application in Blend with minimal borrower and application data. This endpoint is usually used to create applications in Blend from CRMs or other central borrower databases.",
        "summary": "Post Home Lending Application",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PostHomeLendingApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Application Creation Body",
            "schema": {
              "$ref": "#/definitions/ApplicationRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New Application",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsResponse"
            },
            "examples": {
              "application/json; charset=utf-8": {
                "id": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
                "solutionSubType": "MORTGAGE",
                "parties": [
                  {
                    "id": "18c3e52a-c7e7-4c6d-a36f-d5bca568613a",
                    "name": {
                      "firstName": "Tanya",
                      "middleName": "M",
                      "lastName": "Williams",
                      "suffixName": "III"
                    },
                    "type": "BORROWER",
                    "customFields": {},
                    "customMetadata": {}
                  }
                ],
                "customFields": {},
                "customMetadata": {}
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid Update",
            "schema": {
              "$ref": "#/definitions/InvalidUpdateErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get a paginated list of active applications sorted by creation date descending. This endpoint also supports a few filtering parameters.",
        "summary": "Get Home Lending Applications",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetHomeLendingApplications",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of applications to be returned for this call. Minimum is 1, maximum is 100, default is 50."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An opaque string used for pagination, pass the cursor back to start at this position"
          },
          {
            "name": "losId-exists",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "If losId-exists is true, then the response only contains applications that have losId set. If losId-exists is false, then the response only contains applications that do not have losId set. Otherwise, the response returns applications independent of the losId field."
          },
          {
            "name": "crmId-eq",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters the list of applications to applications that have the same crmId."
          },
          {
            "name": "party-email-eq",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters the list of applications to applications that have a party with the same email."
          },
          {
            "name": "losId-eq",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters the list of applications to applications that have the same losId."
          },
          {
            "name": "exportable",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If exportable is true, then the response contains the list of applications that can be exported (e.g. borrower submitted, lender clicks export, or trid is triggered). If exportable is false, then the response contains the list of applications that cannot be exported. If omitted, the response returns applications independent of exportable field."
          },
          {
            "name": "assigneeIds-eq",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filters the list of loans to loans that have at least one matching assignee. The assignee Ids are UUIDs of the lender users in Blend's system."
          },
          {
            "name": "solution-sub-type",
            "in": "query",
            "required": false,
            "enum": [
              "CANADA_MORTGAGE",
              "HELOAN",
              "HELOC",
              "MORTGAGE",
              "MORTGAGE_MODIFICATION",
              "OTHER"
            ],
            "type": "string",
            "description": "Filters the list of loans to loans with a matching solution subtype."
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated applications, with cursors to go the next or previous pages.s",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsResponse1"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid Update",
            "schema": {
              "$ref": "#/definitions/InvalidUpdateErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/los-milestones": {
      "post": {
        "description": "Bulk update a list of applications to specific LOS milestones. Only accepts LOS milestones that have been added to customer configuration. Does not allow applications to transition to previous milestones (e.g. APPROVED --> UNDERWRITING), unless parameter 'override' is set to true.",
        "summary": "Post LOS Milestones",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PostLOSMilestones",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "List of application ids and the milestones to update them to",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsLosMilestonesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Milestones Updated Successfully",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsLosMilestonesResponse"
            },
            "headers": {}
          },
          "207": {
            "description": "Some Milestones Not Successfully Updated",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsLosMilestonesResponse1"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/export-statuses": {
      "get": {
        "description": "A bulk endpoint to get the export statuses for a list of applications",
        "summary": "Get Export Statuses",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetExportStatuses",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Application IDs to query for"
          }
        ],
        "responses": {
          "200": {
            "description": "All Export Statuses Retrieved Successfully",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsExportStatusesResponse"
            },
            "headers": {}
          },
          "207": {
            "description": "Some Export Statuses Not Successfully Retrieved",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsExportStatusesResponse1"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/export-status": {
      "post": {
        "description": "Update export status on an application",
        "summary": "Post Export Status",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PostExportStatus",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostExportStatusSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export Status Updated Successfully",
            "schema": {
              "$ref": "#/definitions/PostExportStatusSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}": {
      "get": {
        "description": "Get application summary in JSON.",
        "summary": "Get Application Data",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetApplicationData",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Data Exported Successfully",
            "schema": {
              "$ref": "#/definitions/ApplicationSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an application",
        "summary": "Delete Application Data",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "DeleteApplicationData",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Application Deleted Successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update some properties on a specific application.",
        "summary": "Patch Application",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PatchApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Application Update Body",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application Updated Successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/documents": {
      "get": {
        "description": "Get a list of all the uploaded and signature complete documents on a specific application, ordered by document creation date.",
        "summary": "Get Application Documents",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetApplicationDocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "includeAllDocuments",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all the documents on the application, including signature pending documents."
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsDocumentsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/parties": {
      "get": {
        "description": "Get a list of all parties on the application (with their econsent status)",
        "summary": "Get Application Parties",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetApplicationParties",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "List of Parties",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsPartiesResponse"
            },
            "examples": {
              "application/json; charset=utf-8": {
                "parties": [
                  {
                    "id": "cc730ed3-0d46-493d-bd85-8cddc60e45d1",
                    "applicationId": "70e7df4a-29d8-4f0d-90cd-f4604e45e0b5",
                    "email": "twilliams@email.com",
                    "type": "BORROWER",
                    "name": {
                      "firstName": "Tanya",
                      "middleName": "M",
                      "lastName": "Williams",
                      "suffixName": "III"
                    },
                    "status": "INVITED",
                    "econsent": {
                      "status": "Pending"
                    },
                    "phoneNumbers": [
                      {
                        "phoneNumber": "11122223333",
                        "type": "HOME"
                      }
                    ],
                    "addresses": [
                      {
                        "type": "CURRENT",
                        "address": {
                          "streetAddressLine1": "100 main st",
                          "streetAddressLine2": "132",
                          "city": "Chicago",
                          "state": "IL",
                          "zipCode": "70007",
                          "zipCodePlusFour": "1000"
                        }
                      }
                    ],
                    "relationship": {},
                    "loginMethod": "EMAIL",
                    "dateOfBirth": "2000-10-03T20:07:27.000Z",
                    "taxpayerIdentifier": {
                      "type": "SOCIAL_SECURITY_NUMBER",
                      "value": "000113933"
                    },
                    "customFields": {},
                    "customMetadata": {}
                  },
                  {
                    "id": "7ee059cc-1815-4c6b-92d8-a650579102a6",
                    "applicationId": "70e7df4a-29d8-4f0d-90cd-f4604e45e0b5",
                    "losPartyId": "losParty2",
                    "email": "james@email.com",
                    "type": "SPOUSE",
                    "name": {
                      "firstName": "James",
                      "middleName": "William",
                      "lastName": "Horton",
                      "suffixName": "3rd"
                    },
                    "econsent": {
                      "status": "Pending"
                    },
                    "phoneNumbers": [],
                    "relationship": {},
                    "customFields": {},
                    "customMetadata": {}
                  }
                ]
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/underwriting-results": {
      "get": {
        "description": "Get a list of all underwriting results on the application",
        "summary": "Get Application Underwriting Results",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetApplicationUnderwritingResults",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "List of Underwriting Results",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/UnderwritingResultSchema"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/borrower-positions": {
      "get": {
        "description": "Get the list of borrower pairs on the application",
        "summary": "Get Borrower Positions",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetBorrowerPositions",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Application Borrower Positions",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsBorrowerPositionsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the location of borrowers on the application (by 1003/borrower pairing and location in the borrower pair)",
        "summary": "Put Borrower Positions",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PutBorrowerPositions",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "New Borrower Pair",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsBorrowerPositionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Upserted Borrower Positions",
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/los-milestones": {
      "get": {
        "description": "Get the current los milestone on the application",
        "summary": "Get Los Milestone",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetLosMilestone",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Current LOS Milestone",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsLosMilestonesResponse2"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found or no los milestone exists on the application",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update the los milestone on an application",
        "summary": "Patch Los Milestone",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PatchLosMilestone",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SingleLosMilestoneSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Updated LOS Milestone",
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "409": {
            "description": "Application already set to milestone from request body",
            "schema": {
              "$ref": "#/definitions/ConflictErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/assignees": {
      "get": {
        "description": "Gets the array of users currently assigned to the application",
        "summary": "List the Assigned Users on an Application",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "ListtheAssignedUsersonanApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Assignees Successfully Retrieved",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/UserAssignmentSchema"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Adds assignees to the specified application.",
        "summary": "Patch the Assigned Users on an Application",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PatchtheAssignedUsersonanApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserAssignmentRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Added Users to Application Assignees",
            "headers": {}
          },
          "400": {
            "description": "Assignee users must exist and have permissions to be assigned to the application",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application or User Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Completely overwrites current set of assigned users with provided users",
        "summary": "Override All Current Assignees on an Application",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "OverrideAllCurrentAssigneesonanApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "autoAssignLoanTeam",
            "in": "query",
            "required": false,
            "default": true,
            "type": "boolean",
            "description": "Automatically assign the primary assignee's loan team to the application."
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserAssignmentRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Overwrite of Application Assignees",
            "headers": {}
          },
          "400": {
            "description": "Assignee users must exist and have permissions to be assigned to the application",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application or User Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/{id}/itp": {
      "get": {
        "description": "Get Intent to Proceed (ITP) data. This endpoint will return information about the state of ITP on an application once the ITP workflow has been added or ITP has been given.",
        "summary": "Get Intent to Proceed",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "GetIntenttoProceed",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Blend Application that ITP data is being retrieved for"
          }
        ],
        "responses": {
          "200": {
            "description": "Intent to Proceed data",
            "schema": {
              "$ref": "#/definitions/GetITPResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Intent to Proceed Not Found",
            "schema": {
              "$ref": "#/definitions/ITPNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Post Intent to Proceed (ITP). This endpoint will add an ITP workflow to the specified borrower on an application, or mark ITP as complete if `givenAt` is supplied. Returns 409 Conflict if ITP workflow already exists for the specified `borrowerId`, or if ITP has already been given on the application `borrowerId` belongs to.",
        "summary": "Post Intent to Proceed",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PostIntenttoProceed",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Blend application `borrowerId` belongs to."
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Post Intent to Proceed Body",
            "schema": {
              "$ref": "#/definitions/HomeLendingApplicationsItpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Intent to Proceed data",
            "schema": {
              "$ref": "#/definitions/GetITPResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict. Returned if ITP workflow already exists for a borrower, or ITP has already been given on the application the borrower belongs to.",
            "schema": {
              "$ref": "#/definitions/ConflictErrorSchema"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/employers/verified": {
      "get": {
        "description": "Gets a summary of verified employers data for an Application",
        "summary": "Get verified employers",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "Getverifiedemployers",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The application to retrieve verified employers for."
          }
        ],
        "responses": {
          "200": {
            "description": "Verified EmployersSummary for Application was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/VerifiedEmployersSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/home-lending/applications/employers/reverify": {
      "post": {
        "description": "Initiates an asynchronous attempt to reverify employers for the specified application and employers.",
        "summary": "Post Employers Reverify",
        "tags": [
          "Home Lending - Applications"
        ],
        "operationId": "PostEmployersReverify",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmployersReverifyRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An attempt to reverify employers for a partyId on the application has been initiated.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/documents": {
      "get": {
        "description": "Get a paginated list of documents",
        "summary": "Get Documents",
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An opaque string used for pagination, pass the cursor back to start at this position. Note that if you change any of the query parameters you used in the initial request, the cursor will be invalid and will not return the next page of results."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "The number of documents to be returned for this call. Minimum is 1, maximum is 100, default is 50."
          },
          {
            "name": "exported",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If exported is true, then the response only contains documents that have already been exported. If exported is false, then the response only contains documents that have not already been exported. Otherwise, the response returns documents independent of the exported field."
          },
          {
            "name": "uploadedAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns only documents uploaded after this time (UTC ISO Timestamp)"
          },
          {
            "name": "uploadedBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns only documents uploaded before this time (UTC ISO Timestamp)"
          },
          {
            "name": "statusIncludes",
            "in": "query",
            "required": false,
            "enum": [
              "READY",
              "SIGNATURE_REQUESTED",
              "VOIDED"
            ],
            "type": "string",
            "description": "Comma delimited string of document statuses to filter for"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated documents, with cursors to go the next or previous pages.",
            "schema": {
              "$ref": "#/definitions/DocumentsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a document on a specific application with a file and related metadata.",
        "summary": "Post Document",
        "tags": [
          "Documents"
        ],
        "operationId": "PostDocument",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "multipart/form-data"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "the file to be attached to the application"
          },
          {
            "name": "applicationId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations."
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "enum": [
              "LOE_PUBLIC_RECORD:BANKRUPTCY",
              "LOE_PUBLIC_RECORD:TAX_LIEN",
              "LOE_PUBLIC_RECORD:JUDGMENT",
              "LOE_LARGE_DEPOSITS:TRANSFER",
              "LOE_LARGE_DEPOSITS:SALE_OF_ASSET",
              "LOE_LARGE_DEPOSITS:INCOME",
              "LOE_LARGE_DEPOSITS:GIFT",
              "LOE_LARGE_DEPOSITS:OTHER",
              "BANK_STATEMENT",
              "BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT",
              "BANK_STATEMENT:_STOCK_ACCOUNT",
              "FINANCIAL_STATEMENT:_BALANCE_SHEET",
              "FINANCIAL_STATEMENT:_INCOME",
              "IRS1040",
              "IRS1041",
              "IRS1120",
              "IRS1120_S",
              "LLC_BTR_DOC",
              "IRSW2",
              "CRAT4",
              "1003",
              "4506t",
              "TAX_TRANSCRIPT",
              "DOCUSIGN_CERT_OF_COMP",
              "PAY_STUB",
              "PROPERTY_INSURANCE_POLICY:_GENERAL",
              "PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE",
              "PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION",
              "PROPERTY_INSURANCE_POLICY:_HOMEOWNERS",
              "PROPERTY_INSURANCE_POLICY:_VOLCANO",
              "PROPERTY_INSURANCE_POLICY:_FLOOD",
              "PROPERTY_INSURANCE_POLICY:_HAZARD",
              "INSURANCE_AGENT_CONTACT_INFO",
              "PURCHASE_AGREEMENT",
              "OTHER_DISCLOSURES",
              "REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T",
              "RETIREMENT_ACCOUNT_STATEMENT",
              "SOCIAL_SECURITY_AWARD_LETTER",
              "TRUST_AGREEMENT",
              "VERIFICATION_OF_EMPLOYMENT",
              "VERIFICATION_OF_EMPLOYMENT_REVERIFY",
              "VERIFICATION_OF_EMPLOYMENT_RETRIEVED",
              "VERIFICATION_OF_INCOME",
              "PENSION_AWARD_LETTER",
              "ANNUITY_AWARD_LETTER",
              "DEFERRED_COMPENSATION_AWARD_LETTER",
              "VERIFICATION_OF_MORTGAGE_OR_RENT",
              "VERIFICATION_OF_RENT",
              "VERIFICATION_OF_MORTGAGE",
              "RETIREMENT_LIQUIDITY_TERMS",
              "LETTER_OF_EXPLANATION:_CREDIT_INQUIRY",
              "LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT",
              "LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION",
              "LETTER_OF_EXPLANATION:_JOB_GAP",
              "LETTER_OF_EXPLANATION:_LARGE_DEPOSITS",
              "LETTER_OF_EXPLANATION:SHORT_SALE",
              "PROPERTY_TAX_BILL",
              "MORTGAGE_STATEMENT",
              "BORROWER_CONSENT_FORM",
              "BORROWER_INCOME_VERIFICATION_CONSENT_FORM",
              "APPRAISAL_WAIVER",
              "INTENT_TO_PROCEED",
              "NATIONAL_IDENTIFICATION",
              "PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN",
              "MARRIAGE_CERTIFICATE",
              "DEATH_CERTIFICATE",
              "DIVORCE_DECREE",
              "NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD",
              "CONDOMINIUM_OCCUPANCY_CERTIFICATE",
              "HOMEOWNERS_ASSOCIATION_CERTIFICATION",
              "BANK_DEPOSIT_SLIP",
              "PROPERTY_INSURANCE_POLICY:_HURRICANE",
              "PROPERTY_INSURANCE_POLICY:_LEASEHOLD",
              "PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY",
              "PROPERTY_INSURANCE_POLICY:_STORM",
              "PROPERTY_INSURANCE_POLICY:_TORNADO",
              "PROPERTY_INSURANCE_POLICY:_WIND",
              "CREDIT_REPORT",
              "PERMANENT_RESIDENT_IDENTIFICATION",
              "PROPERTY_INSURANCE_POLICY:_CONDOMINIUM",
              "APPRAISAL_REPORT_SINGLE FAMILY",
              "APPRAISAL_REPORT_2_-_4_UNIT",
              "APPRAISAL_REPORT_MANUFACTURED_HOME",
              "APPRAISAL_REPORT_COOP",
              "APPRAISAL_REPORT_EXTERIOR_ONLY",
              "APPRAISAL_REPORT_AVM",
              "APPRAISAL_REPORT_RENT_SURVEY",
              "APPRAISAL_REPORT_OPERATING_INCOME_SCHEDULE",
              "APPRAISAL_REPORT_MARKET_CONDITIONS_ADDENDUM",
              "APPRAISAL_REPORT_UPDATE_AND_OR_COMPLETION_REPORT",
              "APPRAISAL_REPORT_PROPERTY_CONDITION_REPORT",
              "APPRAISAL_REPORT_DESK_REVIEW",
              "SETTLEMENT_STATEMENT_HUD1",
              "VISA",
              "PASSPORT",
              "NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT",
              "DD_214",
              "VA_STATEMENT_OF_SERVICE",
              "VA_CERTIFICATE_OF_ELIGIBILITY",
              "CREDIT_AUTHORIZATION",
              "CREDIT_CARD_AUTHORIZATION",
              "BIRTH_CERTIFICATE",
              "INVOICE_UTILITY_BILL",
              "ADDRESS_VERIFICATION",
              "LETTER_OF_EXPLANATION_NAME_VARIATION",
              "POWER_OF_ATTORNEY",
              "RENTAL_AGREEMENT",
              "RENTAL_SECURITY_DEPOSIT",
              "VERIFICATION_OF_EMPLOYMENT_LETTER",
              "VERIFICATION_OF_EMPLOYMENT_WRITTEN",
              "BUSINESS_LICENSE",
              "IRS1099",
              "K1",
              "IRS1065",
              "SOCIAL_SECURITY_PROOF_OF_RECEIPT",
              "EMPLOYMENT_OFFER_LETTER",
              "RENTAL_INCOME_PROOF_OF_RECEIPT",
              "RETIREMENT_AWARD_LETTER",
              "VA_CHILD_CARE_CERTIFICATE",
              "VA_AWARD_LETTER",
              "BONUS_AND_COMMISSION_DOCUMENTATION",
              "CHILD_SUPPORT_INCOME",
              "ALIMONY_INCOME",
              "CHILD_SUPPORT_LIABILITY",
              "ALIMONY_LIABILITY",
              "GENERATED_ASSET_STATEMENT",
              "ACHDEBIT_AUTHORIZATION",
              "GIFT_LETTER",
              "PROOF_OF_LIQUIDATION",
              "CREDIT_REPORT_NON_TRADITIONAL",
              "CREDIT_SUPPLEMENT",
              "BANKRUPTCY_DISCHARGE_NOTICE",
              "BANKRUPTCY_FILING",
              "SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE",
              "FRAUD_ALERT",
              "STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT",
              "JUDGMENT",
              "COSIGNED_LIABILITY",
              "PURCHASE_AGREEMENT_ADDENDUM",
              "HOME_INSPECTION_REPORT",
              "PEST_INSPECTION_REPORT",
              "ROOF_INSPECTION_REPORT",
              "POOL_INSPECTION_REPORT",
              "EARNEST_MONEY_DEPOSIT",
              "FLOOD_HAZARD_NOTICE",
              "FLOOD_CERTIFICATION",
              "TAX_CERTIFICATE",
              "AMENDATORY_CLAUSE",
              "PAYOFF_STATEMENT",
              "CLOSING_PROTECTION_LETTER",
              "SCHEDULE_OF_REAL_ESTATE",
              "BORROWER_CERTIFICATION",
              "OCCUPANCY_CERTIFICATION",
              "TRUTH_IN_LENDING",
              "GOOD_FAITH_ESTIMATE",
              "ESCROW_WAIVER",
              "LOAN_ESTIMATE",
              "CLOSING_DISCLOSURE",
              "GENERAL_LOAN_ACKNOWLEDGMENT",
              "HUD_VA_ADDENDUM",
              "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION",
              "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY",
              "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT",
              "MORTGAGE_INSURANCE",
              "NET_TANGIBLE_BENEFIT",
              "NOTE",
              "HOA_BILL",
              "ARTICLES_OF_INCORPORATION",
              "BYLAWS_OPERATING_AGREEMENT",
              "AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE",
              "DISCLOSURES_TRACKING_REPORT",
              "ENERGY_EFFICIENT_MORTGAGE_WORKSHEET",
              "IMPORTANT_NOTICE_TO_HOMEBUYER",
              "FAIR_LENDING_NOTICE",
              "FOR_YOUR_PROTECTION_HOME_INSPECTION",
              "RATE_LOCK_AGREEMENT",
              "BOND_CERTIFICATE",
              "CUSTOMER_IDENTIFICATION_VERIFICATION",
              "VERIFICATION_OF_SSN",
              "RESIDUAL_INCOME_LETTER",
              "OTHER",
              "DU_UNDERWRITING_FINDINGS",
              "DU_UNDERWRITING_LOG",
              "DU_UNDERWRITING_DEFAULTS",
              "OTHER_APPLICATION",
              "PRE_QUALIFICATION_LETTER",
              "APPRAISAL",
              "PRE_APPROVAL_LETTER",
              "PRE_APPROVAL_LETTER:_PREVIEW",
              "COMPLIANCE_REPORT",
              "LOAN_SNAPSHOT",
              "HMDA_REPORT",
              "ATTACHMENT",
              "LETTER_OF_EXPLANATION:_GENERATED_CREDIT_INQUIRY",
              "LETTER_OF_EXPLANATION:_GENERATED_ADDRESS_VERIFICATION",
              "GENERATED_GIFT_LETTER",
              "LETTER_OF_EXPLANATION:_GENERATED_LATE_PAYMENT",
              "LETTER_OF_EXPLANATION:_GENERATED_PUBLIC_RECORD",
              "LETTER_OF_EXPLANATION:_GENERATED_LARGE_DEPOSIT",
              "MEDICAL_RESIDENCY_FELLOWSHIP",
              "MEDICAL_LICENSE_DIPLOMA",
              "NEAREST_LIVING_RELATIVE",
              "EMPLOYMENT_CONTRACT",
              "GENERATED_COST_WORKSHEET",
              "FNMA_NETPAY_REPORT_ASSETS",
              "FNMA_NETPAY_REPORT_INCOME",
              "FNMA_NETPAY_BORROWERS_REQUEST",
              "FNMA_NETPAY_GSE_API_XML",
              "KNOW_YOUR_CUSTOMER",
              "CLOSING_PACKAGE",
              "PROMISSORY_NOTE",
              "DEED_OF_TRUST",
              "TITLE_DOCUMENT",
              "CLOSING_SETTLEMENT_ONLY"
            ],
            "type": "string",
            "description": "Blend document type"
          },
          {
            "name": "losType",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "LOS document type (used with Blend document templating)"
          },
          {
            "name": "losTypeId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "LOS document id (used for external tracking)"
          },
          {
            "name": "partyIds",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "UUIDs of the Parties associated with this document"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "status",
            "in": "formData",
            "required": false,
            "enum": [
              "SIGNATURE_REQUESTED",
              "READY"
            ],
            "type": "string",
            "description": "ENUM describing the Document Status"
          },
          {
            "name": "shareWithAllParties",
            "in": "formData",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "If set to true, uploaded document becomes accessible to borrowers; otherwise, only lender can view the document"
          },
          {
            "name": "customFields",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "field name of the custom field"
          },
          {
            "name": "customMetadata",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "field name of the custom metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Uploaded Document File and Metadata",
            "schema": {
              "$ref": "#/definitions/DocumentSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "description": "Download the file associated with a document",
        "summary": "Get Document Data",
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocumentData",
        "deprecated": false,
        "produces": [
          "application/pdf",
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The UUID of the Document in Blend's system. The static identifier that should be used to connect the document's identity across Blend and external integrations."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Exported Document Binary",
            "schema": {
              "type": "object",
              "default": ""
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update a document's export status",
        "summary": "Patch Document Data",
        "tags": [
          "Documents"
        ],
        "operationId": "PatchDocumentData",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The UUID of the Document in Blend's system. The static identifier that should be used to connect the document's identity across Blend and external integrations."
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Document export status parameters",
            "schema": {
              "$ref": "#/definitions/DocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Update",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/documents/{id}/metadata": {
      "get": {
        "description": "Get all metadata associated with a document",
        "summary": "Get Document Metadata",
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocumentMetadata",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The UUID of the Document in Blend's system. The static identifier that should be used to connect the document's identity across Blend and external integrations."
          }
        ],
        "responses": {
          "200": {
            "description": "Document Metadata",
            "schema": {
              "$ref": "#/definitions/DocumentSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/documents/{id}/export-statuses": {
      "get": {
        "description": "Get all export statuses of the document",
        "summary": "Get Document Export Statuses",
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocumentExportStatuses",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The UUID of the Document in Blend's system. The static identifier that should be used to connect the document's identity across Blend and external integrations."
          },
          {
            "name": "exportedTo",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Static identifier of this document in the LOS"
          },
          {
            "name": "exportedBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns only documents uploaded before this time (UTC ISO Timestamp)"
          },
          {
            "name": "exportedAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Returns only documents uploaded after this time (UTC ISO Timestamp)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of document export statuses",
            "schema": {
              "$ref": "#/definitions/DocumentsExportStatusesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/tax-transcripts": {
      "get": {
        "description": "Gets Tax Transcripts structured data for a particular 4506T document",
        "summary": "Get Tax Transcripts",
        "tags": [
          "Tax transcripts"
        ],
        "operationId": "GetTaxTranscripts",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The documentId of the 4506T form"
          }
        ],
        "responses": {
          "200": {
            "description": "Tax transcript data was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/TaxTranscriptsSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/packages": {
      "post": {
        "description": "Post a package to an application.",
        "summary": "Post a package",
        "tags": [
          "Packages"
        ],
        "operationId": "Postapackage",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Package creation body",
            "schema": {
              "$ref": "#/definitions/PackagePostSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Package details",
            "schema": {
              "$ref": "#/definitions/PackagesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Packages400Error1"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Retrieve all packages for an application. Optional query parameters available to filter.",
        "summary": "Retrieve all packages for an application",
        "tags": [
          "Packages"
        ],
        "operationId": "Retrieveallpackagesforanapplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Application UUID"
          },
          {
            "name": "foreignPackageId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "External package id provided by partner"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "CREATED",
              "DELIVERED",
              "VIEWED",
              "SIGNED",
              "COMPLETED",
              "DECLINED",
              "FAILED_TO_CREATE",
              "CANCELLED"
            ],
            "type": "string",
            "description": "Package status"
          }
        ],
        "responses": {
          "200": {
            "description": "Package details",
            "schema": {
              "$ref": "#/definitions/PackagesResponse1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Packages400Error1"
            },
            "headers": {}
          }
        }
      }
    },
    "/packages/{id}": {
      "get": {
        "description": "Retrieve details about a package",
        "summary": "Retrieve a package",
        "tags": [
          "Packages"
        ],
        "operationId": "Retrieveapackage",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Package UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Package details",
            "schema": {
              "$ref": "#/definitions/PackageResponseSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Packages400Error1"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update a package to CANCELLED status or set a paperedAt date",
        "summary": "Update a package",
        "tags": [
          "Packages"
        ],
        "operationId": "Updateapackage",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Package UUID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json; charset=utf-8"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Update package body",
            "schema": {
              "$ref": "#/definitions/PackagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response body provided",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Packages400Error1"
            },
            "headers": {}
          }
        }
      }
    },
    "/parties/{id}/employers": {
      "get": {
        "description": "Get details about party employers.",
        "summary": "Get Party Employers",
        "tags": [
          "Parties"
        ],
        "operationId": "GetPartyEmployers",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Party UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Employers for the party",
            "schema": {
              "$ref": "#/definitions/EmployerResponseSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create employers and incomes for party.",
        "summary": "Post Party Employers",
        "tags": [
          "Parties"
        ],
        "operationId": "PostPartyEmployers",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Party UUID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Party employers creation body",
            "schema": {
              "$ref": "#/definitions/EmployerIngestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employers for the party",
            "schema": {
              "$ref": "#/definitions/PartiesEmployersResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/parties": {
      "post": {
        "description": "Add a party to a specific application.",
        "summary": "Post Parties",
        "tags": [
          "Parties"
        ],
        "operationId": "PostParties",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Party parameters",
            "schema": {
              "$ref": "#/definitions/PartiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Party",
            "schema": {
              "$ref": "#/definitions/PartyResponseSchema"
            },
            "examples": {
              "application/json; charset=utf-8": {
                "id": "bca86e3e-ce8b-4e04-b841-bf7e31f91eb3",
                "applicationId": "a5ded618-3a1d-44d3-ba34-9df57eb72c26",
                "name": {
                  "firstName": "John",
                  "middleName": "Angel",
                  "lastName": "Hernandez",
                  "suffixName": "Jr."
                },
                "email": "john@email.com",
                "type": "SPOUSE",
                "losPartyId": "externalId1"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/parties/{id}": {
      "patch": {
        "description": "Update a party's details.",
        "summary": "Patch Party",
        "tags": [
          "Parties"
        ],
        "operationId": "PatchParty",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Party id"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Party update parameters",
            "schema": {
              "$ref": "#/definitions/PartiesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Party",
            "schema": {
              "$ref": "#/definitions/PartyResponseSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete party from a specific application.",
        "summary": "Delete Party",
        "tags": [
          "Parties"
        ],
        "operationId": "DeleteParty",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Party id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Deletion",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/follow-ups": {
      "post": {
        "description": "Create a follow-up for an applicant on a specific application.",
        "summary": "Post Follow-Up",
        "tags": [
          "Follow-Ups"
        ],
        "operationId": "PostFollow-Up",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Follow-ups creation body",
            "schema": {
              "$ref": "#/definitions/PostFollowUpSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New Follow-Up",
            "schema": {
              "$ref": "#/definitions/FollowUpSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get follow-ups on a specific application.",
        "summary": "Get Follow-Ups",
        "tags": [
          "Follow-Ups"
        ],
        "operationId": "GetFollow-Ups",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Application ID to filter follow-ups by"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "DOCUMENT_REQUEST",
              "DOCUMENT_SIGNATURE",
              "DOCUMENT_WET_SIGNATURE",
              "ASSET_STATEMENTS",
              "PAYMENT_COLLECTION",
              "PAYSTUBS",
              "REVIEW_DOCUMENTS",
              "TAX_RETURN",
              "TAX_TRANSCRIPTS",
              "W2",
              "SYSTEM"
            ],
            "type": "string",
            "description": "Follow-up type to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of follow-up objects",
            "schema": {
              "$ref": "#/definitions/FollowUpsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/follow-ups/{id}": {
      "get": {
        "description": "Get specific follow-up.",
        "summary": "Get Follow-Up",
        "tags": [
          "Follow-Ups"
        ],
        "operationId": "GetFollow-Up",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Follow-up UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON follow-up object",
            "schema": {
              "$ref": "#/definitions/FollowUpSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update specific follow-up.",
        "summary": "Patch Follow-Up",
        "tags": [
          "Follow-Ups"
        ],
        "operationId": "PatchFollow-Up",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Follow-up UUID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Follow-up Update Body",
            "schema": {
              "$ref": "#/definitions/PatchFollowUpSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Follow-Up Updated Successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete specific follow-up.",
        "summary": "Delete Follow-Up",
        "tags": [
          "Follow-Ups"
        ],
        "operationId": "DeleteFollow-Up",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Follow-up UUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Deletion",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "422": {
            "description": "Invalid Update",
            "schema": {
              "$ref": "#/definitions/InvalidUpdateErrorSchema"
            },
            "examples": {
              "application/json; charset=utf-8": {
                "error": "The requested update is invalid",
                "display": "Completed follow-ups cannot be deleted.",
                "trackingId": "2559635c-6a0b-406a-85b2-e0e8e23c35ab"
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/lenders": {
      "post": {
        "description": "Bulk route used to create Lender Users in Blend",
        "summary": "Post Lenders",
        "tags": [
          "Lenders"
        ],
        "operationId": "PostLenders",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Lender parameters",
            "schema": {
              "$ref": "#/definitions/LendersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Lender Users Successfully Created",
            "schema": {
              "$ref": "#/definitions/LendersResponse"
            },
            "headers": {}
          },
          "207": {
            "description": "Some Lender Users Successfully Created",
            "schema": {
              "$ref": "#/definitions/LendersResponse1"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get a paginated list of all Lender Users in the Blend account",
        "summary": "Query Lenders",
        "tags": [
          "Lenders"
        ],
        "operationId": "QueryLenders",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lender User IDs to query for"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lender user Employee IDs to query for"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An opaque string used for pagination, pass the cursor back to start at this position"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "The number of Users to be returned for this call. Minimum is 1, maximum is 100, default is 50."
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Lender emails to query for (comma separated string)."
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated Lender Users, with cursors to go the next or previous pages.",
            "schema": {
              "$ref": "#/definitions/LendersResponse2"
            },
            "headers": {}
          },
          "207": {
            "description": "Lenders",
            "schema": {
              "$ref": "#/definitions/LendersResponse3"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Bulk endpoint to update some information on an array of lender users",
        "summary": "Patch Lenders",
        "tags": [
          "Lenders"
        ],
        "operationId": "PatchLenders",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Lender parameters",
            "schema": {
              "$ref": "#/definitions/LendersRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Lender Users Successfully Updated",
            "schema": {
              "$ref": "#/definitions/LendersResponse4"
            },
            "headers": {}
          },
          "207": {
            "description": "Some Lender Users Successfully Updated",
            "schema": {
              "$ref": "#/definitions/LendersResponse5"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Bulk endpoint to remove one or more lender users from the Blend account",
        "summary": "Delete Lenders",
        "tags": [
          "Lenders"
        ],
        "operationId": "DeleteLenders",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "UUIDs of lenders to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "All Lender Users Successfully Deleted",
            "schema": {
              "$ref": "#/definitions/LendersResponse6"
            },
            "headers": {}
          },
          "207": {
            "description": "Some Lender Users Successfully Deleted",
            "schema": {
              "$ref": "#/definitions/LendersResponse7"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/realtors": {
      "post": {
        "description": "Add realtor to application",
        "summary": "Post Realtor",
        "tags": [
          "Realtors"
        ],
        "operationId": "PostRealtor",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Realtor parameters",
            "schema": {
              "$ref": "#/definitions/RealtorRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Realtor created",
            "schema": {
              "$ref": "#/definitions/RealtorsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/account-applications/{id}": {
      "get": {
        "description": "Get JSON object containing application data for account opening.",
        "summary": "Get Account Opening Application Data",
        "tags": [
          "Account Opening"
        ],
        "operationId": "GetAccountOpeningApplicationData",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application ID"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON Account Application Object",
            "schema": {
              "$ref": "#/definitions/AccountApplicationSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update application data.",
        "summary": "Patch Account Opening Application",
        "tags": [
          "Account Opening"
        ],
        "operationId": "PatchAccountOpeningApplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Application update parameters",
            "schema": {
              "$ref": "#/definitions/PatchApplicationSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Application",
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/reporting/loans": {
      "get": {
        "description": "Return a paginated list of loans data.",
        "summary": "Get Loans Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetLoansReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all loans that have been deleted by the user; If false, return all loans that have not been deleted; If omitted, return a list of all loans independent of deleted field."
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all loans that have been archived by Blend, If false, return all loans that have not been archived; If omitted, returns a list of all loans independent of archived field."
          },
          {
            "name": "appSourceName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Canonical name of where this application came from, such as the name of the LOS or CRM. e.g. [\"Velocify\", \"NetOxygen\", \"Empower\", etc.] If set, returns a list of all loans that match the given appSourceName."
          },
          {
            "name": "appLeadSource",
            "in": "query",
            "required": false,
            "enum": [
              "LENDER",
              "BORROWER",
              "PUBLIC_API",
              "INGEST",
              "OTHER"
            ],
            "type": "string",
            "description": "The method by which the application was created. e.g. [\"LENDER\", \"BORROWER\", \"PUBLIC_API\", \"OTHER\"] If set, returns a list of all loans that match the given appLeadSource."
          },
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "CANADA_MORTGAGE",
              "ACCOUNT_OPENING",
              "AUTO",
              "MORTGAGE_MODIFICATION",
              "PERSONAL_LOC",
              "PERSONAL_LOAN",
              "SPECIALTY_VEHICLE",
              "ALL"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"CANADA_MORTGAGE\", \"ACCOUNT_OPENING\", \"AUTO\", \"MORTGAGE_MODIFICATION\", \"PERSONAL_LOC\", \"PERSONAL_LOAN\", \"SPECIALTY_VEHICLE\", \"ALL\" ] If set, returns a list of all loans that match the given loanType"
          },
          {
            "name": "loanCreatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans created on or after this date. Compares to createdDatetime."
          },
          {
            "name": "loanCreatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans created on or before this date. Compares to createdDatetime."
          },
          {
            "name": "borrowerStartedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans started by the borrower on or after this date. Compares to borrowerStartedDatetime."
          },
          {
            "name": "borrowerStartedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans started by the borrower on or before this date. Compares to borrowerStartedDatetime."
          },
          {
            "name": "borrowerSubmittedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans submitted by the borrower on or after this date. Compares to borrowerSubmittedDatetime."
          },
          {
            "name": "borrowerSubmittedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans submitted by the borrower on or before this date. Compares to borrowerSubmittedDatetime."
          },
          {
            "name": "loanExportedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans exported on or after this date. Compares to estExportedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanExportedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans exported on or before this date. Compares to estExportedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanDeletedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans deleted on or after this date. Compares to estDeletedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanDeletedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans deleted on or before this date. Compares to estDeletedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanArchivedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans archived on or after this date. Compares to estArchivedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanArchivedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans archived on or before this date. Compares to estArchivedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanPurgedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans purged on or after this date. Compares to estPurgedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanPurgedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans purged on or before this date. Compares to estPurgedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanLastUpdatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans last updated on or after this date. Compares to estLastUpdatedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "loanLastUpdatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all loans last updated on or before this date. Compares to estlastUpdatedDatetime. DO NOT USE FOR COMPLIANCE AND RECONCILIATION PURPOSES"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "createdDatetime",
              "borrowerStartedDatetime",
              "borrowerSubmittedDatetime",
              "estExportedDatetime",
              "estDeletedDatetime",
              "estArchivedDatetime",
              "estPurgedDatetime",
              "estLastUpdatedDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of loans to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated loans, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingLoansResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/borrowers": {
      "get": {
        "description": "Return a paginated list of borrower data.",
        "summary": "Get Borrowers Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetBorrowersReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "activationStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all borrowers activated on or after this date. Compares to activationDatetime"
          },
          {
            "name": "activationEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all borrowers activated on or before this date. Compares to activationDatetime"
          },
          {
            "name": "invitedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all borrowers invited on or after this date. Compares to invitedDatetime"
          },
          {
            "name": "invitedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all borrowers invited on or before this date. Compares to invitedDatetime"
          },
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "CANADA_MORTGAGE",
              "ACCOUNT_OPENING",
              "AUTO",
              "MORTGAGE_MODIFICATION",
              "PERSONAL_LOC",
              "PERSONAL_LOAN",
              "SPECIALTY_VEHICLE",
              "ALL"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"CANADA_MORTGAGE\", \"ACCOUNT_OPENING\", \"AUTO\", \"MORTGAGE_MODIFICATION\", \"PERSONAL_LOC\", \"PERSONAL_LOAN\", \"SPECIALTY_VEHICLE\", \"ALL\" ]"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "activationDatetime",
              "invitedDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of borrowers to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated borrower, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingBorrowersResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/lenders": {
      "get": {
        "description": "Return a paginated list of lenders data.",
        "summary": "Get Lenders Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetLendersReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "userMetricsStartDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Required for user metric fields - this is the start date that will apply to the timestamps for each user metric field."
          },
          {
            "name": "userMetricsEndDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Required for user metric fields - this is the end date that will apply to the timestamps for each user metric field."
          },
          {
            "name": "invitedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users invited on or after this date. Compares to invitedDatetime"
          },
          {
            "name": "invitedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users invited on or before this date. Compares to invitedDatetime"
          },
          {
            "name": "activationStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users activated on or after this date. Compares to activationDatetime"
          },
          {
            "name": "activationEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users activated on or before this date. Compares to activationDatetime"
          },
          {
            "name": "lastLoginStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users that last logged in on or after this date. Compares to lastLoginDatetime"
          },
          {
            "name": "lastLoginEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users that last logged in on or before this date. Compares to lastLoginDatetime"
          },
          {
            "name": "lastBorrowerSubmitStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users who had their last loan submitted by a borrower on or after this date. Compares to lastBorrowerSubmitDatetime"
          },
          {
            "name": "lastBorrowerSubmitEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all lender users who had their last loan submitted by a borrower on or before this date. Compares to lastBorrowerSubmitDatetime"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "activationDatetime",
              "invitedDatetime",
              "lastBorrowerSubmitDatetime",
              "lastLoginDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of lenders to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated lenders, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingLendersResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/activities": {
      "get": {
        "description": "This captures only the borrower's activity within Blend on the process-level.",
        "summary": "Get Activities Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetActivitiesReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "processStartedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all borrower processes started on or after this date. Compares to startedDatetime"
          },
          {
            "name": "processStartedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all borrower processes started on or after this date. Compares to startedDatetime"
          },
          {
            "name": "processCompletedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all borrower processes completed on or after this date. Compares to completedDatetime"
          },
          {
            "name": "processCompletedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all borrower processes completed on or after this date. Compares to completedDatetime"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "startedDatetime",
              "completedDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "CANADA_MORTGAGE",
              "ACCOUNT_OPENING",
              "AUTO",
              "MORTGAGE_MODIFICATION",
              "PERSONAL_LOC",
              "PERSONAL_LOAN",
              "SPECIALTY_VEHICLE",
              "ALL"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"CANADA_MORTGAGE\", \"ACCOUNT_OPENING\", \"AUTO\", \"MORTGAGE_MODIFICATION\", \"PERSONAL_LOC\", \"PERSONAL_LOAN\", \"SPECIALTY_VEHICLE\", \"ALL\" ]"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of activities to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated activities, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingActivitiesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid status value",
            "headers": {}
          }
        }
      }
    },
    "/reporting/nps": {
      "get": {
        "description": "Return a paginated list of nps data.",
        "summary": "Get NPS Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetNPSReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all nps on or after this date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all nps on or before this date"
          },
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "AUTO",
              "ACCOUNT_OPENING"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"AUTO\", \"ACCOUNT_OPENING\"]"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of nps to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated NPS, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingNpsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid status value",
            "headers": {}
          }
        }
      }
    },
    "/reporting/documents": {
      "get": {
        "description": "Return a paginated list of documents data.",
        "summary": "Get Documents Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetDocumentsReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The type of documents to be retrieved"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Get all documents created after this date"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all documents created before this date"
          },
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "CANADA_MORTGAGE",
              "ACCOUNT_OPENING",
              "AUTO",
              "MORTGAGE_MODIFICATION",
              "PERSONAL_LOC",
              "PERSONAL_LOAN",
              "SPECIALTY_VEHICLE",
              "ALL"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"CANADA_MORTGAGE\", \"ACCOUNT_OPENING\", \"AUTO\", \"MORTGAGE_MODIFICATION\", \"PERSONAL_LOC\", \"PERSONAL_LOAN\", \"SPECIALTY_VEHICLE\", \"ALL\" ]"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of documents to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated documents, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingDocumentsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid status value",
            "headers": {}
          }
        }
      }
    },
    "/reporting/data-verification-usage": {
      "get": {
        "description": "Returns a paginated list of connectivity metrics data.",
        "summary": "Get Data Verification Usage Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetDataVerificationUsageReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets metrics for connectivity data on or after this date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets metrics for connectivity data on or before this date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of rows of metrics to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated data verification metrics, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingDataVerificationUsageResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/follow-ups": {
      "get": {
        "description": "Return a paginated list of individual follow-up data.",
        "summary": "Get Follow-ups Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetFollow-upsReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "loanType",
            "in": "query",
            "required": false,
            "enum": [
              "MORTGAGE",
              "HELOC",
              "HELOAN",
              "CANADA_MORTGAGE",
              "ACCOUNT_OPENING",
              "AUTO",
              "MORTGAGE_MODIFICATION",
              "PERSONAL_LOC",
              "PERSONAL_LOAN",
              "SPECIALTY_VEHICLE",
              "ALL"
            ],
            "type": "string",
            "description": "The type of the loan application. e.g. [\"MORTGAGE\", \"HELOC\", \"HELOAN\", \"CANADA_MORTGAGE\", \"ACCOUNT_OPENING\", \"AUTO\", \"MORTGAGE_MODIFICATION\", \"PERSONAL_LOC\", \"PERSONAL_LOAN\", \"SPECIALTY_VEHICLE\", \"ALL\" ]"
          },
          {
            "name": "followUpCreatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all followups created on or after this date. Compares to followUpCreatedDatetime"
          },
          {
            "name": "followUpCreatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all followups created on or before this date. Compares to followUpCreatedDatetime"
          },
          {
            "name": "requestedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all followups requested on or after this date. Compares to requestedDatetime."
          },
          {
            "name": "requestedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all followups requested on or before this date. Compares to requestedDatetime."
          },
          {
            "name": "completedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all followups completed on or after this date. Compares to completedDatetime"
          },
          {
            "name": "completedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all followups completed on or before this date. Compares to completedDatetime"
          },
          {
            "name": "reviewedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all followups reviewed on or after this date. Compares to reviewedDatetime"
          },
          {
            "name": "reviewedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all followups reviewed on or before this date. Compares to reviewedDatetime"
          },
          {
            "name": "cancelledStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Get all followups cancelled on or after this date. Compares to cancelledDatetime"
          },
          {
            "name": "cancelledEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all followups cancelled on or before this date. Compares to cancelledDatetime"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "followUpCreatedDatetime",
              "requestedDatetime",
              "completedDatetime",
              "reviewedDatetime",
              "cancelledDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of individual followups to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated individual followups, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingFollowUpsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/lender-pab-activities": {
      "get": {
        "description": "Return a paginated list of PAB Activities",
        "summary": "Get Lender PAB Activities Report",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetLenderPABActivitiesReport",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "activityStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all PAB activities on or after this date"
          },
          {
            "name": "activityEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all PAB activities on or before this date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of activities to be returned for this API call. Maximum is 10,000"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated pab activities, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingLenderPabActivitiesResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "headers": {}
          }
        }
      }
    },
    "/reporting/deposit-account-applications": {
      "get": {
        "description": "Return a paginated list of Deposit Account Applications",
        "summary": "Get Deposit Account Applications",
        "tags": [
          "Reporting"
        ],
        "operationId": "GetDepositAccountApplications",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets data for the specific Application UUID entered."
          },
          {
            "name": "appSourceMarketingTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets all applications with the specified appSourceMarketingTag."
          },
          {
            "name": "appLeadSource",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications that were created by the specified party type/method. Currently all deposit applications have an appLeadSource of \"BORROWER\" or null."
          },
          {
            "name": "appCreatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications created on or after this date. Compares to applicationCreatedDatetime."
          },
          {
            "name": "appCreatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications created on or before this date. Compares to applicationCreatedDatetime."
          },
          {
            "name": "hasActivityBeyondInitialDetailsTask",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all applications that have evidence of at least some activity beyond the first application details screen; if false, returns all applications that have no evidence of any activity beyond the first application details screen; if omitted, returns a list of all applications independent of whether there is or is not activity beyond that threshold."
          },
          {
            "name": "appSubmittedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications submitted on or after this date. Compares to applicationSubmittedDatetime."
          },
          {
            "name": "appSubmittedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications submitted on or before this date. Compares to applicationSubmittedDatetime."
          },
          {
            "name": "appAutoApprovedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated approval decision on or after this date. Compares to firstAutomatedApprovalDatetime."
          },
          {
            "name": "appAutoApprovedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated approval decision on or before this date. Compares to firstAutomatedApprovalDatetime."
          },
          {
            "name": "appAutoReferredStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated referral for manual review on or after this date. Compares to firstAutomatedReferralDatetime."
          },
          {
            "name": "appAutoReferredEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated referral for manual review on or before this date. Compares to firstAutomatedReferralDatetime."
          },
          {
            "name": "appManuallyApprovedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with a manual approval decision on or after this date. Compares to firstManualApprovalDatetime."
          },
          {
            "name": "appManuallyApprovedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with a manual approval decision on or before this date. Compares to firstManualApprovalDatetime."
          },
          {
            "name": "appAutoRejectedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated rejection decision on or after this date. Compares to firstAutomatedRejectionDatetime."
          },
          {
            "name": "appAutoRejectedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with an automated rejection decision on or before this date. Compares to firstAutomatedRejectionDatetime."
          },
          {
            "name": "appManuallyRejectedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with a manual rejection decision on or after this date. Compares to firstManualRejectionDatetime."
          },
          {
            "name": "appManuallyRejectedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications with a manual rejection decision on or before this date. Compares to firstManualRejectionDatetime."
          },
          {
            "name": "accountBookedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications where the applied for account(s) were booked to the core banking system on or after this date. Compares to accountBookedToCoreDatetime."
          },
          {
            "name": "accountBookedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications where the applied for account(s) were booked to the core banking system on or before this date. Compares to accountBookedToCoreDatetime."
          },
          {
            "name": "accountFundedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications where an opening deposit into the newly booked account(s) was made on or after this date. Compares to firstOpeningDepositTransactionSubmittedDatetime."
          },
          {
            "name": "accountFundedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications where an opening deposit into the newly booked account(s) was made on or before this date. Compares to firstOpeningDepositTransactionSubmittedDatetime."
          },
          {
            "name": "appLastUpdatedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications last updated on or after this date. Compares to applicationLastUpdatedDatetime."
          },
          {
            "name": "appLastUpdatedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications last updated on or before this date. Compares to applicationLastUpdatedDatetime."
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all applications that have been archived by Blend; if false, returns all applications that have not been archived; if omitted, returns a list of all applications independent of applicationArchivedDatetime field."
          },
          {
            "name": "appArchivedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications archived on or after this date. Compares to applicationArchivedDatetime."
          },
          {
            "name": "appArchivedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications archived on or before this date. Compares to applicationArchivedDatetime."
          },
          {
            "name": "deleted",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, returns a list of all applications that have been deleted by the user; if false, returns all applications that have not been deleted; if omitted, return a list of all applications independent of applicationDeletedDatetime field."
          },
          {
            "name": "appDeletedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications deleted on or after this date. Compares to applicationDeletedDatetime."
          },
          {
            "name": "appDeletedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications deleted on or before this date. Compares to applicationDeletedDatetime."
          },
          {
            "name": "appPurgedStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications purged on or after this date. Compares to applicationPurgedDatetime."
          },
          {
            "name": "appPurgedEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Gets all applications purged on or before this date. Compares to applicationPurgedDatetime."
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "enum": [
              "applicationCreatedDatetime",
              "applicationSubmittedDatetime",
              "firstAutomatedReferralDatetime",
              "firstAutomatedApprovalDatetime",
              "firstManualApprovalDatetime",
              "firstAutomatedRejectionDatetime",
              "firstManualRejectionDatetime",
              "accountBookedToCoreDatetime",
              "firstOpeningDepositTransactionSubmittedDatetime",
              "applicationLastUpdatedDatetime",
              "applicationArchivedDatetime",
              "applicationDeletedDatetime",
              "applicationPurgedDatetime"
            ],
            "type": "string",
            "description": "The timestamp you wish you order the results by. Required if passing in multiple date query parameters."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of results to be returned for this API call. Maximum is 10,000."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cursor to retrieve the next/previous page of results."
          }
        ],
        "responses": {
          "200": {
            "description": "List of paginated Deposit Account Data, with cursors to go to the next or previous set.",
            "schema": {
              "$ref": "#/definitions/ReportingDepositAccountApplicationsResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid status value",
            "headers": {}
          }
        }
      }
    },
    "/events": {
      "get": {
        "description": "Returns a list of events for the given query parameters with a maximum of 250 events per call.",
        "summary": "Get Events",
        "tags": [
          "Events"
        ],
        "operationId": "GetEvents",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "bons-profile",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The profile can be configured per customer. This supports use cases like multiple tenants, or multiple instances of the same tenant. Unless otherwise requested, this value will be \"default\"."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The page size to return. Default and maximum are 250."
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "EMITTED",
              "ACKNOWLEDGED",
              "PROCESSING",
              "SUCCEEDED",
              "FAILED",
              "NO_ACTION"
            ],
            "type": "string",
            "description": "An event status. If this is set, all events with the given status are returned."
          },
          {
            "name": "created-at-max",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO date format."
          },
          {
            "name": "created-at-min",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ISO date format."
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/EventSchema"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid query params",
            "schema": {
              "$ref": "#/definitions/EventInvalidRequestSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/EventUnauthorizedSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "EventId is not valid",
            "schema": {
              "$ref": "#/definitions/EventMissingObjectSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/EventInternalErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "description": "Get an event and its current status",
        "summary": "Get Event",
        "tags": [
          "Events"
        ],
        "operationId": "GetEvent",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "bons-profile",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "The profile can be configured per customer. This supports use cases like multiple tenants, or multiple instances of the same tenant. Unless otherwise requested, this value will be \"default\"."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Event UUID"
          },
          {
            "name": "includeData",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When true, includes the original event data payload."
          }
        ],
        "responses": {
          "200": {
            "description": "Event and corresponding status",
            "schema": {
              "$ref": "#/definitions/EventWithDataSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid event UUID",
            "schema": {
              "$ref": "#/definitions/EventInvalidRequestSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/EventUnauthorizedSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "EventId is not valid",
            "schema": {
              "$ref": "#/definitions/EventMissingObjectSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/EventInternalErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/events/{id}/status-updates": {
      "post": {
        "description": "Set a status for an event",
        "summary": "Set Event Status",
        "tags": [
          "Events"
        ],
        "operationId": "SetEventStatus",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Event UUID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Status update",
            "schema": {
              "$ref": "#/definitions/EventStatusRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set the status",
            "headers": {}
          },
          "400": {
            "description": "Invalid status or error object",
            "schema": {
              "$ref": "#/definitions/EventInvalidRequestSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/EventUnauthorizedSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "EventId is not valid",
            "schema": {
              "$ref": "#/definitions/EventMissingObjectSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/EventInternalErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/events/describe": {
      "get": {
        "description": "Get the set of all events available in the provided version, their available decorators, and optionally their schemas.",
        "summary": "Get Event Description",
        "tags": [
          "Events"
        ],
        "operationId": "GetEventDescription",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "enum": [
              "v1",
              "v2"
            ],
            "type": "string",
            "description": "The BONS Event Version to describe."
          },
          {
            "name": "schema",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When true, adds the full schema description with data types to the provided event metadata."
          }
        ],
        "responses": {
          "200": {
            "description": "Event and corresponding status",
            "schema": {
              "$ref": "#/definitions/EventSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid event UUID",
            "schema": {
              "$ref": "#/definitions/EventInvalidRequestSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/EventUnauthorizedSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "EventId is not valid",
            "schema": {
              "$ref": "#/definitions/EventMissingObjectSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/EventInternalErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/assets": {
      "get": {
        "description": "Gets a summary of Assets data for an Application",
        "summary": "Get Assets",
        "tags": [
          "Assets"
        ],
        "operationId": "GetAssets",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The application to retrieve an Assets summary for."
          }
        ],
        "responses": {
          "200": {
            "description": "Assets Summary for Application was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/AssetsSummarySchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/assets/refresh": {
      "post": {
        "description": "Initiates an asynchronous attempt to refresh Assets data for the specified application and accounts. Refreshes can only be initiated once per hour for an application. Refreshes can take up to 20 minutes to complete.",
        "summary": "Post Assets Refresh",
        "tags": [
          "Assets"
        ],
        "operationId": "PostAssetsRefresh",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssetsRefreshRequestSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An attempt to refresh Assets data on the application has been initiated. This does not necessarily mean that Assets will be successfully refreshed.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings": {
      "get": {
        "description": "Returns a list of all closings for a given application.",
        "summary": "Get Closings",
        "tags": [
          "Close"
        ],
        "operationId": "GetClosings",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Application ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "default": "",
              "items": {
                "$ref": "#/definitions/Closing"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Creates a new closing for a given application.",
        "summary": "Post Closings",
        "tags": [
          "Close"
        ],
        "operationId": "PostClosings",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ClosingCreatedResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Application Not Found",
            "schema": {
              "$ref": "#/definitions/ApplicationNotFoundErrorSchema"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}": {
      "get": {
        "description": "Returns the specified closing.",
        "summary": "Get Closing",
        "tags": [
          "Close"
        ],
        "operationId": "GetClosing",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Closing"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Updates a closing for a given loan. This endpoint can update multiple elements at once.",
        "summary": "Patch Closing",
        "tags": [
          "Close"
        ],
        "operationId": "PatchClosing",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingPatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The closing has been updated.",
            "schema": {
              "$ref": "#/definitions/Closing"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/documents": {
      "put": {
        "description": "Adds documents to a closing or updates their metadata, like their closing designation.",
        "summary": "Put Closing Documents",
        "tags": [
          "Close"
        ],
        "operationId": "PutClosingDocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingDocumentsPutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The closing documents have been updated.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Remove documents from a closing.",
        "summary": "Delete Closing Documents",
        "tags": [
          "Close"
        ],
        "operationId": "DeleteClosingDocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of document IDs. The corresponding documents will be removed from the closing."
          }
        ],
        "responses": {
          "200": {
            "description": "The closing documents have been removed.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/enote": {
      "post": {
        "description": "Creates an eNote for a closing.",
        "summary": "Post Closing eNote",
        "tags": [
          "Close"
        ],
        "operationId": "PostClosingeNote",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingENotePostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The eNote has been created.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Removes the eNote from the Closing to make way for a paper note.",
        "summary": "Delete Closing eNote",
        "tags": [
          "Close"
        ],
        "operationId": "DeleteClosingeNote",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The eNote has been successfully removed.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/send": {
      "post": {
        "description": "Submits or Resubmits a closing.",
        "summary": "Post Closing Send",
        "tags": [
          "Close"
        ],
        "operationId": "PostClosingSend",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingSendPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The closing has been submitted.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/redraw": {
      "post": {
        "description": "Places submitted closing back into a draft state so that changes can be made.",
        "summary": "Post Closing Redraw",
        "tags": [
          "Close"
        ],
        "operationId": "PostClosingRedraw",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The closing has been successfully cancelled and reverted to a draft state.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/pre-closing-documents": {
      "put": {
        "description": "Adds draft pre-closing documents to a closing or updates their document type if it has changed since their last addition. After successful completion of this request, the document references that were added to this closing will have a `closingDesignation` of `DRAFT_PRE_CLOSING` and a `sourceType` of `LENDER`. In addition, any pre-closing document references with a `sourceType` of `LENDER` that were previously sent to the settlement agent using the `POST close/closings/{id}/pre-closing-documents/send` endpoint will be automatically duplicated with a `closingDesignation` of `DRAFT_PRE_CLOSING`.",
        "summary": "Put Pre-closing Documents",
        "tags": [
          "Close"
        ],
        "operationId": "PutPre-closingDocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PreClosingDocumentsPutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The pre-closing documents have been added or updated.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/pre-closing-documents/send": {
      "post": {
        "description": "Moves any pre-closing documents out of a draft state and sends them to the settlement agent.",
        "summary": "Post Pre-Closing Documents Send",
        "tags": [
          "Close"
        ],
        "operationId": "PostPre-ClosingDocumentsSend",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The pre-closing documents have been set and sent to the settlement agent assigned to the loan.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/close/closings/{id}/external-enote": {
      "post": {
        "description": "Adds an ENote from a vault managed outside of blend.",
        "summary": "Post External ENote",
        "tags": [
          "Close"
        ],
        "operationId": "PostExternalENote",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Closing ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClosingExternallyManagedENotePostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The external ENote has successfully been added to the closing.",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "404": {
            "description": "Closing Not Found",
            "schema": {
              "$ref": "#/definitions/ClosingNotFoundError"
            },
            "headers": {}
          },
          "429": {
            "description": "Rate Limited",
            "schema": {
              "$ref": "#/definitions/RateLimitedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/consumer-lending/applications/{id}": {
      "get": {
        "description": "Get consumer lending application data in JSON.",
        "summary": "Get consumer lending application data",
        "tags": [
          "Consumer Lending - Applications"
        ],
        "operationId": "Getconsumerlendingapplicationdata",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer Lending Application",
            "schema": {
              "$ref": "#/definitions/ConsumerLendingApplicationSchema"
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "Update some properties on a specific consumer lending application.",
        "summary": "Patch consumer lending application",
        "tags": [
          "Consumer Lending - Applications"
        ],
        "operationId": "Patchconsumerlendingapplication",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Application Update Body",
            "schema": {
              "$ref": "#/definitions/ConsumerLendingLoanIdentifiersSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application Updated Successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/consumer-lending/applications/{id}/documents": {
      "get": {
        "description": "Get a list of all the uploaded and signature complete documents on a specific application.",
        "summary": "Get consumer lending application documents",
        "tags": [
          "Consumer Lending - Applications"
        ],
        "operationId": "Getconsumerlendingapplicationdocuments",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "schema": {
              "$ref": "#/definitions/ConsumerLendingApplicationsDocumentsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    },
    "/consumer-lending/applications/{id}/decision": {
      "get": {
        "description": "Get decision for a specific application.",
        "summary": "Get application decision",
        "tags": [
          "Consumer Lending - Applications"
        ],
        "operationId": "Getapplicationdecision",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Application Decision",
            "schema": {
              "$ref": "#/definitions/ConsumerLendingApplicationDecisionSchema"
            },
            "examples": {
              "application/json; charset=utf-8": {
                "status": "APPROVE",
                "updatedDate": "2021-06-07T21:12:00.451Z"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Send decision information to Blend",
        "summary": "Set application decision",
        "tags": [
          "Consumer Lending - Applications"
        ],
        "operationId": "Setapplicationdecision",
        "deprecated": false,
        "produces": [
          "application/json; charset=utf-8"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Application Decision Body",
            "schema": {
              "$ref": "#/definitions/ConsumerLendingApplicationsDecisionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Decision Updated Successfully",
            "headers": {}
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/definitions/InvalidRequestErrorSchema"
            },
            "headers": {}
          },
          "401": {
            "description": "Invalid Credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticationRequiredErrorSchema"
            },
            "headers": {}
          },
          "403": {
            "description": "Not Authorized",
            "schema": {
              "$ref": "#/definitions/NotAuthorizedErrorSchema"
            },
            "headers": {}
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorSchema"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "DocumentType": {
      "title": "DocumentType",
      "description": "Blend document type",
      "example": "LOE_PUBLIC_RECORD:BANKRUPTCY",
      "type": "string",
      "enum": [
        "LOE_PUBLIC_RECORD:BANKRUPTCY",
        "LOE_PUBLIC_RECORD:TAX_LIEN",
        "LOE_PUBLIC_RECORD:JUDGMENT",
        "LOE_LARGE_DEPOSITS:TRANSFER",
        "LOE_LARGE_DEPOSITS:SALE_OF_ASSET",
        "LOE_LARGE_DEPOSITS:INCOME",
        "LOE_LARGE_DEPOSITS:GIFT",
        "LOE_LARGE_DEPOSITS:OTHER",
        "BANK_STATEMENT",
        "BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT",
        "BANK_STATEMENT:_STOCK_ACCOUNT",
        "FINANCIAL_STATEMENT:_BALANCE_SHEET",
        "FINANCIAL_STATEMENT:_INCOME",
        "IRS1040",
        "IRS1041",
        "IRS1120",
        "IRS1120_S",
        "LLC_BTR_DOC",
        "IRSW2",
        "CRAT4",
        "1003",
        "4506t",
        "TAX_TRANSCRIPT",
        "DOCUSIGN_CERT_OF_COMP",
        "PAY_STUB",
        "PROPERTY_INSURANCE_POLICY:_GENERAL",
        "PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE",
        "PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION",
        "PROPERTY_INSURANCE_POLICY:_HOMEOWNERS",
        "PROPERTY_INSURANCE_POLICY:_VOLCANO",
        "PROPERTY_INSURANCE_POLICY:_FLOOD",
        "PROPERTY_INSURANCE_POLICY:_HAZARD",
        "INSURANCE_AGENT_CONTACT_INFO",
        "PURCHASE_AGREEMENT",
        "OTHER_DISCLOSURES",
        "REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T",
        "RETIREMENT_ACCOUNT_STATEMENT",
        "SOCIAL_SECURITY_AWARD_LETTER",
        "TRUST_AGREEMENT",
        "VERIFICATION_OF_EMPLOYMENT",
        "VERIFICATION_OF_EMPLOYMENT_REVERIFY",
        "VERIFICATION_OF_EMPLOYMENT_RETRIEVED",
        "VERIFICATION_OF_INCOME",
        "PENSION_AWARD_LETTER",
        "ANNUITY_AWARD_LETTER",
        "DEFERRED_COMPENSATION_AWARD_LETTER",
        "VERIFICATION_OF_MORTGAGE_OR_RENT",
        "VERIFICATION_OF_RENT",
        "VERIFICATION_OF_MORTGAGE",
        "RETIREMENT_LIQUIDITY_TERMS",
        "LETTER_OF_EXPLANATION:_CREDIT_INQUIRY",
        "LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT",
        "LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION",
        "LETTER_OF_EXPLANATION:_JOB_GAP",
        "LETTER_OF_EXPLANATION:_LARGE_DEPOSITS",
        "LETTER_OF_EXPLANATION:SHORT_SALE",
        "PROPERTY_TAX_BILL",
        "MORTGAGE_STATEMENT",
        "BORROWER_CONSENT_FORM",
        "BORROWER_INCOME_VERIFICATION_CONSENT_FORM",
        "APPRAISAL_WAIVER",
        "INTENT_TO_PROCEED",
        "NATIONAL_IDENTIFICATION",
        "PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN",
        "MARRIAGE_CERTIFICATE",
        "DEATH_CERTIFICATE",
        "DIVORCE_DECREE",
        "NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD",
        "CONDOMINIUM_OCCUPANCY_CERTIFICATE",
        "HOMEOWNERS_ASSOCIATION_CERTIFICATION",
        "BANK_DEPOSIT_SLIP",
        "PROPERTY_INSURANCE_POLICY:_HURRICANE",
        "PROPERTY_INSURANCE_POLICY:_LEASEHOLD",
        "PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY",
        "PROPERTY_INSURANCE_POLICY:_STORM",
        "PROPERTY_INSURANCE_POLICY:_TORNADO",
        "PROPERTY_INSURANCE_POLICY:_WIND",
        "CREDIT_REPORT",
        "PERMANENT_RESIDENT_IDENTIFICATION",
        "PROPERTY_INSURANCE_POLICY:_CONDOMINIUM",
        "APPRAISAL_REPORT_SINGLE FAMILY",
        "APPRAISAL_REPORT_2_-_4_UNIT",
        "APPRAISAL_REPORT_MANUFACTURED_HOME",
        "APPRAISAL_REPORT_COOP",
        "APPRAISAL_REPORT_EXTERIOR_ONLY",
        "APPRAISAL_REPORT_AVM",
        "APPRAISAL_REPORT_RENT_SURVEY",
        "APPRAISAL_REPORT_OPERATING_INCOME_SCHEDULE",
        "APPRAISAL_REPORT_MARKET_CONDITIONS_ADDENDUM",
        "APPRAISAL_REPORT_UPDATE_AND_OR_COMPLETION_REPORT",
        "APPRAISAL_REPORT_PROPERTY_CONDITION_REPORT",
        "APPRAISAL_REPORT_DESK_REVIEW",
        "SETTLEMENT_STATEMENT_HUD1",
        "VISA",
        "PASSPORT",
        "NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT",
        "DD_214",
        "VA_STATEMENT_OF_SERVICE",
        "VA_CERTIFICATE_OF_ELIGIBILITY",
        "CREDIT_AUTHORIZATION",
        "CREDIT_CARD_AUTHORIZATION",
        "BIRTH_CERTIFICATE",
        "INVOICE_UTILITY_BILL",
        "ADDRESS_VERIFICATION",
        "LETTER_OF_EXPLANATION_NAME_VARIATION",
        "POWER_OF_ATTORNEY",
        "RENTAL_AGREEMENT",
        "RENTAL_SECURITY_DEPOSIT",
        "VERIFICATION_OF_EMPLOYMENT_LETTER",
        "VERIFICATION_OF_EMPLOYMENT_WRITTEN",
        "BUSINESS_LICENSE",
        "IRS1099",
        "K1",
        "IRS1065",
        "SOCIAL_SECURITY_PROOF_OF_RECEIPT",
        "EMPLOYMENT_OFFER_LETTER",
        "RENTAL_INCOME_PROOF_OF_RECEIPT",
        "RETIREMENT_AWARD_LETTER",
        "VA_CHILD_CARE_CERTIFICATE",
        "VA_AWARD_LETTER",
        "BONUS_AND_COMMISSION_DOCUMENTATION",
        "CHILD_SUPPORT_INCOME",
        "ALIMONY_INCOME",
        "CHILD_SUPPORT_LIABILITY",
        "ALIMONY_LIABILITY",
        "GENERATED_ASSET_STATEMENT",
        "ACHDEBIT_AUTHORIZATION",
        "GIFT_LETTER",
        "PROOF_OF_LIQUIDATION",
        "CREDIT_REPORT_NON_TRADITIONAL",
        "CREDIT_SUPPLEMENT",
        "BANKRUPTCY_DISCHARGE_NOTICE",
        "BANKRUPTCY_FILING",
        "SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE",
        "FRAUD_ALERT",
        "STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT",
        "JUDGMENT",
        "COSIGNED_LIABILITY",
        "PURCHASE_AGREEMENT_ADDENDUM",
        "HOME_INSPECTION_REPORT",
        "PEST_INSPECTION_REPORT",
        "ROOF_INSPECTION_REPORT",
        "POOL_INSPECTION_REPORT",
        "EARNEST_MONEY_DEPOSIT",
        "FLOOD_HAZARD_NOTICE",
        "FLOOD_CERTIFICATION",
        "TAX_CERTIFICATE",
        "AMENDATORY_CLAUSE",
        "PAYOFF_STATEMENT",
        "CLOSING_PROTECTION_LETTER",
        "SCHEDULE_OF_REAL_ESTATE",
        "BORROWER_CERTIFICATION",
        "OCCUPANCY_CERTIFICATION",
        "TRUTH_IN_LENDING",
        "GOOD_FAITH_ESTIMATE",
        "ESCROW_WAIVER",
        "LOAN_ESTIMATE",
        "CLOSING_DISCLOSURE",
        "GENERAL_LOAN_ACKNOWLEDGMENT",
        "HUD_VA_ADDENDUM",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT",
        "MORTGAGE_INSURANCE",
        "NET_TANGIBLE_BENEFIT",
        "NOTE",
        "HOA_BILL",
        "ARTICLES_OF_INCORPORATION",
        "BYLAWS_OPERATING_AGREEMENT",
        "AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE",
        "DISCLOSURES_TRACKING_REPORT",
        "ENERGY_EFFICIENT_MORTGAGE_WORKSHEET",
        "IMPORTANT_NOTICE_TO_HOMEBUYER",
        "FAIR_LENDING_NOTICE",
        "FOR_YOUR_PROTECTION_HOME_INSPECTION",
        "RATE_LOCK_AGREEMENT",
        "BOND_CERTIFICATE",
        "CUSTOMER_IDENTIFICATION_VERIFICATION",
        "VERIFICATION_OF_SSN",
        "RESIDUAL_INCOME_LETTER",
        "OTHER",
        "DU_UNDERWRITING_FINDINGS",
        "DU_UNDERWRITING_LOG",
        "DU_UNDERWRITING_DEFAULTS",
        "OTHER_APPLICATION",
        "PRE_QUALIFICATION_LETTER",
        "APPRAISAL",
        "PRE_APPROVAL_LETTER",
        "PRE_APPROVAL_LETTER:_PREVIEW",
        "COMPLIANCE_REPORT",
        "LOAN_SNAPSHOT",
        "HMDA_REPORT",
        "ATTACHMENT",
        "LETTER_OF_EXPLANATION:_GENERATED_CREDIT_INQUIRY",
        "LETTER_OF_EXPLANATION:_GENERATED_ADDRESS_VERIFICATION",
        "GENERATED_GIFT_LETTER",
        "LETTER_OF_EXPLANATION:_GENERATED_LATE_PAYMENT",
        "LETTER_OF_EXPLANATION:_GENERATED_PUBLIC_RECORD",
        "LETTER_OF_EXPLANATION:_GENERATED_LARGE_DEPOSIT",
        "MEDICAL_RESIDENCY_FELLOWSHIP",
        "MEDICAL_LICENSE_DIPLOMA",
        "NEAREST_LIVING_RELATIVE",
        "EMPLOYMENT_CONTRACT",
        "GENERATED_COST_WORKSHEET",
        "FNMA_NETPAY_REPORT_ASSETS",
        "FNMA_NETPAY_REPORT_INCOME",
        "FNMA_NETPAY_BORROWERS_REQUEST",
        "FNMA_NETPAY_GSE_API_XML",
        "KNOW_YOUR_CUSTOMER",
        "CLOSING_PACKAGE",
        "PROMISSORY_NOTE",
        "DEED_OF_TRUST",
        "TITLE_DOCUMENT",
        "CLOSING_SETTLEMENT_ONLY"
      ]
    },
    "ApplicationExperienceType": {
      "title": "ApplicationExperienceType",
      "description": "ENUM describing the type of borrower experience for this application",
      "example": "POST_SUBMISSION",
      "type": "string",
      "enum": [
        "FULL_APPLICATION",
        "LENDER_ENTERED",
        "POST_SUBMISSION"
      ]
    },
    "HomeLendingSolutionSubType": {
      "title": "HomeLendingSolutionSubType",
      "description": "ENUM describing the solution sub type of home lending applications",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "CANADA_MORTGAGE",
        "HELOAN",
        "HELOC",
        "MORTGAGE",
        "MORTGAGE_MODIFICATION",
        "OTHER"
      ]
    },
    "ApplicationLinks": {
      "title": "ApplicationLinks",
      "type": "object",
      "properties": {
        "mismo": {
          "$ref": "#/definitions/Mismo"
        },
        "fannie": {
          "$ref": "#/definitions/Fannie"
        }
      }
    },
    "PropertyUsageType": {
      "title": "PropertyUsageType",
      "description": "ENUM describing the property's intended usage category",
      "example": "PRIMARY_RESIDENCE",
      "type": "string",
      "enum": [
        "PRIMARY_RESIDENCE",
        "SECOND_HOME",
        "PRIMARY_AND_INVESTMENT",
        "INVESTMENT"
      ]
    },
    "LosMilestoneSchema": {
      "title": "LosMilestoneSchema",
      "type": "object",
      "properties": {
        "losMilestone": {
          "$ref": "#/definitions/LosMilestoneName"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        }
      }
    },
    "SingleLosMilestoneSchema": {
      "title": "SingleLosMilestoneSchema",
      "type": "object",
      "properties": {
        "losMilestone": {
          "$ref": "#/definitions/LosMilestoneName"
        }
      },
      "required": [
        "losMilestone"
      ]
    },
    "LosMilestoneName": {
      "title": "LosMilestoneName",
      "description": "ENUM describing that status of the application. Dsiplayed to the Borrower on their landing page after submitting their application in Blend.",
      "example": "SUBMITTED",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "UNDERWRITING",
        "CONDITIONAL_APPROVAL",
        "APPROVED",
        "CLOSING",
        "CLOSED"
      ]
    },
    "TaxpayerIdentifierSchema": {
      "title": "TaxpayerIdentifierSchema",
      "type": "object",
      "properties": {
        "value": {
          "description": "The identifier itself, such as an applicant's social security number.",
          "example": "000113933",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      },
      "required": [
        "value",
        "type"
      ]
    },
    "AddressSchema": {
      "title": "AddressSchema",
      "type": "object",
      "properties": {
        "streetAddressLine1": {
          "example": "100 Main St",
          "type": "string"
        },
        "streetAddressLine2": {
          "example": "Apt 10",
          "type": "string"
        },
        "city": {
          "example": "Chicago",
          "type": "string"
        },
        "state": {
          "description": "Two-character US state code",
          "example": "IL",
          "type": "string"
        },
        "zipCode": {
          "description": "Five-digit US zip code",
          "example": "60007",
          "type": "string"
        },
        "zipCodePlusFour": {
          "description": "Four-digit additional US zip code numbers",
          "example": "1000",
          "type": "string"
        },
        "countyName": {
          "description": "County name",
          "example": "Cook County",
          "type": "string"
        }
      },
      "required": [
        "streetAddressLine1",
        "city",
        "state",
        "zipCode"
      ]
    },
    "PartialAddressSchema": {
      "title": "PartialAddressSchema",
      "type": "object",
      "properties": {
        "streetAddressLine1": {
          "example": "100 Main St",
          "type": "string"
        },
        "streetAddressLine2": {
          "example": "Apt 10",
          "type": "string"
        },
        "city": {
          "example": "Chicago",
          "type": "string"
        },
        "state": {
          "description": "Two-digit US state code",
          "example": "IL",
          "type": "string"
        },
        "zipCode": {
          "description": "Five-digit US zip code",
          "example": "60007",
          "type": "string"
        },
        "zipCodePlusFour": {
          "description": "Four-digit additional US zip code numbers",
          "example": "1000",
          "type": "string"
        },
        "countyName": {
          "example": "DuPage",
          "type": "string"
        }
      },
      "required": [
        "city",
        "state",
        "zipCode"
      ]
    },
    "AddressWithCountyNameSchema": {
      "title": "AddressWithCountyNameSchema",
      "type": "object",
      "properties": {
        "streetAddressLine1": {
          "example": "100 Main St",
          "type": "string"
        },
        "streetAddressLine2": {
          "example": "Apt 10",
          "type": "string"
        },
        "city": {
          "example": "Chicago",
          "type": "string"
        },
        "state": {
          "description": "Two-character US state code",
          "example": "IL",
          "type": "string"
        },
        "zipCode": {
          "description": "Five-digit US zip code",
          "example": "60007",
          "type": "string"
        },
        "zipCodePlusFour": {
          "description": "Four-digit additional US zip code numbers",
          "example": "1000",
          "type": "string"
        },
        "countyName": {
          "example": "Cook County",
          "type": "string"
        }
      },
      "required": [
        "streetAddressLine1",
        "city",
        "state",
        "zipCode"
      ]
    },
    "NameSchema": {
      "title": "NameSchema",
      "type": "object",
      "properties": {
        "firstName": {
          "example": "Tanya",
          "type": "string"
        },
        "middleName": {
          "example": "M",
          "type": "string"
        },
        "lastName": {
          "example": "Williams",
          "type": "string"
        },
        "suffixName": {
          "example": "III",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "BorrowerPairSchema": {
      "title": "BorrowerPairSchema",
      "type": "object",
      "properties": {
        "primaryBorrowerId": {
          "description": "UUID of the first applicant on a specific 1003",
          "example": "1001db24-14b2-4179-8e1e-08bbb2fb94b3",
          "type": "string"
        },
        "secondaryBorrowerId": {
          "description": "UUID of the second applicant on a specific 1003",
          "example": "56632a12-1bd7-4014-8571-cff53c346738",
          "type": "string"
        }
      }
    },
    "SignerInfoSchema": {
      "title": "SignerInfoSchema",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full name of signer",
          "example": "Homer Loanseeker",
          "type": "string"
        },
        "partyId": {
          "description": "Party UUID of signer",
          "example": "fecbc83e-7fd2-421d-b21d-3b5634d5c5f0",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "completedAt": {
          "description": "UTC Timestamp of signature",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "partyId",
        "status",
        "completedAt"
      ]
    },
    "DocumentAdditionalEntities": {
      "title": "DocumentAdditionalEntities",
      "description": "Additional entities ids associated with the document",
      "type": "object",
      "properties": {
        "entityType": {
          "description": "Entities ids of a given entity type",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationRequestPartySchema": {
      "title": "ApplicationRequestPartySchema",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "email": {
          "description": "Party's email",
          "example": "johnhernandez@mail.com",
          "type": "string"
        },
        "taxpayerIdentifier": {
          "$ref": "#/definitions/TaxpayerIdentifierSchema"
        },
        "dateOfBirth": {
          "description": "UTC Timestamp of the Date of Birth",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "homePhone": {
          "description": "Nine-digit home phone number",
          "example": "1112223333",
          "type": "string"
        },
        "currentAddress": {
          "$ref": "#/definitions/CurrentAddressSchema"
        }
      },
      "required": [
        "name",
        "email"
      ]
    },
    "IncomeSchema": {
      "title": "IncomeSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "yearlyIncome": {
          "$ref": "#/definitions/YearlyIncome"
        },
        "description": {
          "description": "A description of this income.",
          "example": "Sole income",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "EmployerSchemaBase": {
      "title": "EmployerSchemaBase",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "name": {
          "description": "The employer's name.",
          "example": "Blend",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "address": {
          "$ref": "#/definitions/AddressSchema"
        },
        "phoneNumber": {
          "description": "Employer phone number",
          "example": 1112223333,
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "description": "UTC Timestamp of the start of employment",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "UTC Timestamp of the end of employment",
          "example": "2018-11-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "incomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IncomeSchema"
          }
        }
      },
      "required": [
        "status"
      ]
    },
    "EmployerResponseSchema": {
      "title": "EmployerResponseSchema",
      "type": "object",
      "properties": {
        "employers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Employer"
          }
        }
      }
    },
    "EmployerIngestSchema": {
      "title": "EmployerIngestSchema",
      "type": "object",
      "properties": {
        "employers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerSchemaBase"
          }
        }
      }
    },
    "BorrowerAddressSchema": {
      "title": "BorrowerAddressSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type3"
        },
        "address": {
          "$ref": "#/definitions/AddressSchema"
        }
      }
    },
    "PartyAddressSchema": {
      "title": "PartyAddressSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type3"
        },
        "address": {
          "$ref": "#/definitions/AddressSchema"
        },
        "moveInDate": {
          "description": "UTC Timestamp of the move in for current address",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CurrentAddressSchema": {
      "title": "CurrentAddressSchema",
      "type": "object",
      "properties": {
        "streetAddressLine1": {
          "example": "100 Main St",
          "type": "string"
        },
        "streetAddressLine2": {
          "example": "Apt 10",
          "type": "string"
        },
        "city": {
          "example": "Chicago",
          "type": "string"
        },
        "state": {
          "description": "Two-character US state code",
          "example": "IL",
          "type": "string"
        },
        "zipCode": {
          "description": "Five-digit US zip code",
          "example": "60007",
          "type": "string"
        },
        "zipCodePlusFour": {
          "description": "Four-digit additional US zip code numbers",
          "example": "1000",
          "type": "string"
        },
        "countyName": {
          "description": "County name",
          "example": "Cook County",
          "type": "string"
        },
        "moveInDate": {
          "description": "UTC Timestamp of the move in for current address",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "streetAddressLine1",
        "city",
        "state",
        "zipCode"
      ]
    },
    "UserAssignmentRequestSchema": {
      "title": "UserAssignmentRequestSchema",
      "type": "object",
      "properties": {
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAssignmentSchema"
          }
        }
      }
    },
    "UserAssignmentSchema": {
      "title": "UserAssignmentSchema",
      "type": "object",
      "properties": {
        "userId": {
          "description": "UUID of a valid lender user",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "userId"
      ]
    },
    "PartySchema": {
      "title": "PartySchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Party in Blend's system. The static identifier that should be used to connect the party's identity across Blend and external integrations.",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type5"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "nameId": {
          "description": "A unique identifier of the party passed to Blend during SSO login.",
          "example": "testUsername123",
          "type": "string"
        },
        "email": {
          "description": "Party email",
          "example": "party@email.com",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status2"
        },
        "dateOfBirth": {
          "description": "UTC timestamp representing the date of birth",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumberSchema"
          }
        },
        "econsent": {
          "$ref": "#/definitions/EconsentSchema"
        },
        "relationship": {
          "$ref": "#/definitions/RelationshipSchema"
        },
        "veteranStatus": {
          "$ref": "#/definitions/VeteranStatusSchema"
        },
        "losPartyId": {
          "description": "The UUID or GUID of the current party in the LOS.",
          "example": "Party-54312",
          "type": "string"
        },
        "credit": {
          "$ref": "#/definitions/PartyCreditSchema"
        },
        "verificationRefId": {
          "$ref": "#/definitions/VerificationRefIdSchema"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyAddressSchema"
          }
        },
        "taxpayerIdentifier": {
          "$ref": "#/definitions/TaxpayerIdentifierSchema"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      },
      "required": [
        "id",
        "applicationId",
        "type"
      ]
    },
    "EconsentSchema": {
      "title": "EconsentSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "date": {
          "description": "UTC Timestamp of when Econsent was last updated",
          "example": "2018-08-30T19:31:38.902Z",
          "type": "string",
          "format": "date-time"
        },
        "ip": {
          "description": "IP Address from which econsent was given",
          "example": "8.8.8.8",
          "type": "string"
        }
      }
    },
    "CustomFields": {
      "title": "CustomFields",
      "description": "Custom fields on GET responses for supported resources",
      "type": "object",
      "properties": {
        "fieldName": {
          "$ref": "#/definitions/CustomFieldSchema"
        }
      }
    },
    "CustomMetadata": {
      "title": "CustomMetadata",
      "description": "Custom metadata on GET responses for supported resources",
      "type": "object",
      "properties": {
        "fieldName": {
          "$ref": "#/definitions/CustomFieldSchema"
        }
      }
    },
    "CustomFieldSchema": {
      "title": "CustomFieldSchema",
      "type": "object",
      "properties": {
        "fieldValue": {
          "description": "value of the field",
          "example": "fldValue",
          "type": "string"
        },
        "createdAt": {
          "description": "UTC Timestamp of when the field was created or updated",
          "example": "2018-08-30T19:31:38.902Z",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PostEconsentSchema": {
      "title": "PostEconsentSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status5"
        },
        "date": {
          "description": "UTC Timestamp of when Econsent was given. Optional. Null is accepted.",
          "example": "2018-08-30T19:31:38.902Z",
          "type": "string",
          "format": "date-time"
        },
        "ip": {
          "description": "IP Address from which econsent was given. Optional. Null is accepted.",
          "example": "8.8.8.8",
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "RelationshipSchema": {
      "title": "RelationshipSchema",
      "type": "object",
      "properties": {
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus"
        }
      }
    },
    "VeteranStatusSchema": {
      "title": "VeteranStatusSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status4"
        }
      }
    },
    "OtherMortgageSchema": {
      "title": "OtherMortgageSchema",
      "type": "object",
      "properties": {
        "creditLimit": {
          "description": "Credit Limit in dollars and cents",
          "type": "number",
          "format": "double"
        },
        "creditorName": {
          "description": "Creditor Name",
          "type": "string"
        },
        "lienAmount": {
          "description": "Lien Amount",
          "example": 200000,
          "type": "number",
          "format": "double"
        },
        "lienType": {
          "$ref": "#/definitions/LienType"
        },
        "loanAmount": {
          "description": "Loan Amount",
          "example": 300000,
          "type": "number",
          "format": "double"
        },
        "monthlyPayment": {
          "description": "Monthly Payment in dollars and cents",
          "example": 1200.47,
          "type": "number",
          "format": "double"
        },
        "type": {
          "$ref": "#/definitions/Type6"
        },
        "willPayOff": {
          "description": "Will pay off this mortgage at or before closing",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "VerificationRefIdSchema": {
      "title": "VerificationRefIdSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The most up to date UUID used to reference verified assets, income, and/or employment",
          "example": "db4f3971-68ca-4e0b-98a7-795233249ba2",
          "type": "string"
        },
        "lastUpdated": {
          "description": "UTC Timestamp of when this verification reference id was generated.",
          "example": "2019-05-16T13:12:03.382Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "lastUpdated"
      ]
    },
    "PartyCreditSchema": {
      "title": "PartyCreditSchema",
      "type": "object",
      "properties": {
        "creditReferenceNumber": {
          "description": "Unique identifier for the credit pull as returned by the credit provider.",
          "example": "ACH45064",
          "type": "string"
        },
        "creditPullDate": {
          "description": "UTC Timestamp of when credit was pulled for this party.",
          "type": "string",
          "format": "date-time"
        },
        "creditPullType": {
          "$ref": "#/definitions/CreditPullType"
        },
        "equifaxScore": {
          "description": "Party's Equifax credit score.",
          "example": 745,
          "type": "number",
          "format": "double"
        },
        "experianScore": {
          "description": "Party's Experian credit score.",
          "example": 755,
          "type": "number",
          "format": "double"
        },
        "transUnionScore": {
          "description": "Party's TransUnion credit score.",
          "example": 750,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "creditReferenceNumber",
        "creditPullDate",
        "creditPullType"
      ]
    },
    "PartyResponseSchema": {
      "title": "PartyResponseSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Party in Blend's system. The static identifier that should be used to connect the party's identity across Blend and external integrations.",
          "example": "2f345acb-6ac4-4bd0-b04a-dc0b9ad76e71",
          "type": "string"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type7"
        },
        "email": {
          "example": "spouse@mail.com",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "losPartyId": {
          "description": "Party ID in LOS",
          "example": "Party1",
          "type": "string"
        },
        "econsent": {
          "$ref": "#/definitions/EconsentSchema"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      },
      "required": [
        "id",
        "applicationId",
        "type"
      ]
    },
    "PhoneNumberSchema": {
      "title": "PhoneNumberSchema",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "String representation of the phone number",
          "example": "4155504810",
          "type": "string"
        },
        "phoneNumberType": {
          "$ref": "#/definitions/PhoneNumberType"
        }
      }
    },
    "RealtorRequestSchema": {
      "title": "RealtorRequestSchema",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        }
      },
      "required": [
        "applicationId",
        "name"
      ]
    },
    "VerificationDataSchema": {
      "title": "VerificationDataSchema",
      "type": "object",
      "properties": {
        "code": {
          "example": "1234",
          "type": "string"
        },
        "hint": {
          "example": "Last 4 Digits of SSN",
          "type": "string"
        }
      },
      "required": [
        "code"
      ]
    },
    "DocumentSchema": {
      "title": "DocumentSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Document in Blend's system. The static identifier that should be used to connect the document's identity across Blend and external integrations.",
          "example": "528e481b-19b7-4e81-a49e-bbb8258e308d",
          "type": "string"
        },
        "name": {
          "description": "Document Filename",
          "example": "Paystub.pdf",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DocumentType"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "losType": {
          "description": "LOS document type (used with Blend document templating)",
          "example": "PAYSTUB_DOC",
          "type": "string"
        },
        "losTypeId": {
          "description": "LOS document id (used for external tracking)",
          "example": "12312",
          "type": "string"
        },
        "created": {
          "description": "UTC Timestamp of document creation",
          "example": "2018-10-02T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "partyIds": {
          "description": "UUIDs of the Parties associated with this document",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "downloadUrl": {
          "description": "URL where the Document can be Downloaded from",
          "example": "https://api.blendlabs.com/documents/eba0d438-0748-4296-b369-c98210e537f7",
          "type": "string"
        },
        "lastExportedAt": {
          "description": "UTC Timestamp of last export for document",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "text": {
          "description": "Description used in UI",
          "example": "Public Record: Bankruptcy supporting documentation",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "signerInfo": {
          "$ref": "#/definitions/SignerInfoSchema"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        },
        "additionalEntities": {
          "$ref": "#/definitions/DocumentAdditionalEntities"
        }
      }
    },
    "DocumentRequestSchema": {
      "title": "DocumentRequestSchema",
      "type": "object",
      "properties": {
        "file": {
          "description": "the file to be attached to the application",
          "type": "string",
          "format": "binary"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DocumentType"
        },
        "losType": {
          "description": "LOS document type (used with Blend document templating)",
          "example": "Verification_of_Income_type",
          "type": "string"
        },
        "losTypeId": {
          "description": "LOS document id (used for external tracking)",
          "example": "123123",
          "type": "string"
        },
        "partyIds": {
          "description": "UUIDs of the Parties associated with this document",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "example": "VerificationOfIncome.pdf",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status6"
        },
        "shareWithAllParties": {
          "description": "If set to true, uploaded document becomes accessible to borrowers; otherwise, only lender can view the document",
          "example": false,
          "type": "boolean",
          "default": false
        },
        "customFields": {
          "description": "field name of the custom field",
          "example": "fieldName",
          "type": "string"
        },
        "customMetadata": {
          "description": "field name of the custom metadata",
          "example": "metadataName",
          "type": "string"
        }
      },
      "required": [
        "file",
        "applicationId"
      ]
    },
    "DocumentExportStatusSchema": {
      "title": "DocumentExportStatusSchema",
      "type": "object",
      "properties": {
        "exportedAt": {
          "description": "UTC timestamp of export time",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "exportedBy": {
          "description": "ID of the user who initiated the export call",
          "example": "system",
          "type": "string"
        },
        "partnerId": {
          "description": "Role of the user who initiated the export call",
          "example": "api-user",
          "type": "string"
        },
        "exportedTo": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        }
      }
    },
    "ApplicationSchema": {
      "title": "ApplicationSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "referenceNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "losId": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        },
        "crmId": {
          "description": "The unique identifier of the application in a lender's Customer Relationship Management (CRM) system (e.g. Salesforce, Velocify, etc.). This value should not change over time and should be used to connect the application's identity between Blend and the CRM.",
          "example": "crmLead1",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status7"
        },
        "applicationStatus": {
          "$ref": "#/definitions/ApplicationStatus"
        },
        "parties": {
          "description": "An array of all the parties belonging to the application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartySchema"
          }
        },
        "property": {
          "$ref": "#/definitions/PropertySchema"
        },
        "leadId": {
          "description": "Lead ID associated with this application in the system that referred it to Blend. Primarily used for LeadGen integration use cases.",
          "example": "lead134912",
          "type": "string"
        },
        "solutionSubType": {
          "$ref": "#/definitions/SolutionSubType"
        },
        "loanPurposeType": {
          "$ref": "#/definitions/LoanPurposeType"
        },
        "communityId": {
          "example": "12345",
          "type": "string"
        },
        "communityName": {
          "description": "The community that the home resides in",
          "example": "2018 Market",
          "type": "string"
        },
        "referralBrokerageConsentGiven": {
          "description": "A boolean indicating whether the borrower has opted into using Blend Realty",
          "example": false,
          "type": "boolean"
        },
        "appSource": {
          "description": "The tag corresponding to a marketing campaign. This identifier can be used to gauge which links are most effective within certain campaigns.",
          "example": "ORGANIC_LEAD",
          "type": "string"
        },
        "createdDate": {
          "description": "UTC timestamp of the application creation time",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "$ref": "#/definitions/CreatedByObject"
        },
        "estimatedClosingDate": {
          "description": "UTC timestamp of the estimated date to close on the subject property",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "exportedDate": {
          "description": "UTC timestamp of the application exported time",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "preApprovalLetterDatetime": {
          "description": "UTC timestamp of when the Preapproval Letter was generated",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationExperienceType": {
          "$ref": "#/definitions/ApplicationExperienceType"
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAssignmentSchema"
          }
        },
        "applicationTemplateId": {
          "description": "Application template applied to this application. Determines what kind and how much information the applicant will be required to enter to complete the application.",
          "example": "fd658b97-f901-4b14-b693-4654d276c909",
          "type": "string"
        },
        "loanAmount": {
          "description": "The amount of money (dollars and cents) for which the applicant is applying",
          "example": 95001.75,
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The purchase price for the subject property of the loan",
          "example": 120000,
          "type": "number",
          "format": "double"
        },
        "applicationSource": {
          "$ref": "#/definitions/ApplicationSourceSchema"
        },
        "archivedStatus": {
          "description": "If set to true, will archive the referenced application",
          "example": false,
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/ApplicationLinks"
        },
        "interestRate": {
          "description": "The interest rate in percentage points",
          "example": 4.25,
          "type": "number",
          "format": "double"
        },
        "mortgageType": {
          "$ref": "#/definitions/MortgageType"
        },
        "tridTriggeredDate": {
          "description": "UTC timestamp of when TRID was triggered on the application",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "PropertySchema": {
      "title": "PropertySchema",
      "description": "Object storing information about the property corresponding to a home lending application",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressSchema"
        },
        "type": {
          "$ref": "#/definitions/Type8"
        },
        "usageType": {
          "$ref": "#/definitions/PropertyUsageType"
        },
        "searchType": {
          "$ref": "#/definitions/SearchType"
        },
        "value": {
          "description": "The property's value in dollars and cents",
          "example": 100000.5,
          "type": "number",
          "format": "double"
        },
        "otherMortgages": {
          "description": "Other mortgages on the subject property (only relevant for refinances)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherMortgageSchema"
          }
        }
      }
    },
    "ApplicationSourceSchema": {
      "title": "ApplicationSourceSchema",
      "description": "Identifier of where the application originally came from. Used to trace which system programmatically created an application in Blend when it wasn't initiated by a Lender or a Borrower via Blend's web application.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type10"
        },
        "name": {
          "description": "Name of the system creating the application. For example, Salesforce or Empower.",
          "type": "string",
          "maxLength": 15
        }
      },
      "required": [
        "type"
      ]
    },
    "ApplicationRequestSchema": {
      "title": "ApplicationRequestSchema",
      "type": "object",
      "properties": {
        "solutionSubType": {
          "$ref": "#/definitions/SolutionSubType1"
        },
        "applicationExperienceType": {
          "$ref": "#/definitions/ApplicationExperienceType"
        },
        "loanPurposeType": {
          "$ref": "#/definitions/LoanPurposeType1"
        },
        "property": {
          "$ref": "#/definitions/PropertySchema"
        },
        "loanAmount": {
          "description": "The amount of money (dollars and cents) for which the applicant is applying",
          "example": 95001.75,
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The purchase price for the subject property of the loan. This field is only supported for new URLA mortgage applications.",
          "example": 120000,
          "type": "number",
          "format": "double"
        },
        "communityId": {
          "example": "12345",
          "type": "string"
        },
        "party": {
          "$ref": "#/definitions/ApplicationRequestPartySchema"
        },
        "leadId": {
          "description": "Lead ID associated with this application in the system that referred it to Blend. Primarily used for LeadGen integration use cases.",
          "example": "leadId1",
          "type": "string"
        },
        "crmId": {
          "description": "The unique identifier of the application in a lender's Customer Relationship Management (CRM) system (e.g. Salesforce, Velocify, etc.). This value should not change over time and should be used to connect the application's identity between Blend and the CRM.",
          "example": "crmLead1",
          "type": "string"
        },
        "losId": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        },
        "referenceNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "sendEmailInvite": {
          "description": "If set to true, sends an email invite to borrower with a link to start the application",
          "type": "boolean"
        },
        "applicationTemplateId": {
          "description": "Application template applied to this application. Determines what kind and how much information the applicant will be required to enter to complete the application.",
          "example": "fd658b97-f901-4b14-b693-4654d276c909",
          "type": "string"
        },
        "applicationSource": {
          "$ref": "#/definitions/ApplicationSourceSchema"
        },
        "interestRate": {
          "description": "The interest rate in percentage points",
          "example": 4.25,
          "type": "number",
          "format": "double"
        },
        "mortgageType": {
          "$ref": "#/definitions/MortgageType"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      },
      "required": [
        "party"
      ]
    },
    "PackageSchema": {
      "title": "PackageSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Package in Blend's system. The static identifier that should be used to connect the package's identity across Blend and external integrations.",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "losId": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        },
        "requestedBy": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status8"
        },
        "displayStatus": {
          "example": "Pending Econsent",
          "type": "string"
        },
        "sentDate": {
          "description": "UTC Timestamp of package sent date",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recipient"
          }
        },
        "documents": {
          "description": "Array of document IDs associated with this Package",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Optional name field for package when type is 'DOCUMENT_PACKAGE' or 'OTHER_DISCLOSURE,' forbidden otherwise",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "TabSchema": {
      "title": "TabSchema",
      "type": "object",
      "properties": {
        "approveTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApproveTab2"
          }
        },
        "signHereTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignHereTab2"
          }
        },
        "listTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListTab"
          }
        },
        "dateSignedTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateSignedTab2"
          }
        },
        "checkboxTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckboxTab2"
          }
        },
        "textTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextTab2"
          }
        },
        "initialHereTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InitialHereTab2"
          }
        },
        "dateTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateTab2"
          }
        },
        "noteTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteTab2"
          }
        },
        "radioGroupTabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadioGroupTab2"
          }
        }
      }
    },
    "LenderCreationRequestSchema": {
      "title": "LenderCreationRequestSchema",
      "type": "object",
      "properties": {
        "name": {
          "description": "Lender Full Name",
          "example": "Ashley Lender",
          "type": "string"
        },
        "email": {
          "description": "Lender Email",
          "example": "ashley.lender@example.com",
          "type": "string"
        },
        "permittedSolutionSubTypes": {
          "description": "Set of allowable solution types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermittedSolutionSubType"
          }
        },
        "requireTwoFactorAuth": {
          "description": "MFA Required",
          "example": true,
          "type": "boolean"
        },
        "loginMethod": {
          "$ref": "#/definitions/LoginMethod"
        },
        "roleNames": {
          "description": "Roles for Lender",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone": {
          "$ref": "#/definitions/Phone"
        },
        "nmlsId": {
          "description": "Nationwide Multistate Licensing System ID number",
          "example": "39179",
          "type": "string"
        },
        "losUsername": {
          "description": "Lender's LOS Username",
          "example": "ashleylender",
          "type": "string"
        },
        "employeeId": {
          "description": "Lender's Employee Id",
          "example": "12314",
          "type": "string"
        },
        "branchId": {
          "description": "Lender's Branch Id",
          "type": "string"
        }
      },
      "required": [
        "name",
        "email",
        "permittedSolutionSubTypes",
        "loginMethod",
        "roleNames"
      ]
    },
    "LenderUpdateRequestSchema": {
      "title": "LenderUpdateRequestSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Lender User in Blend's system. The static identifier that should be used to connect the user's identity across Blend and external integrations.",
          "example": "9250f84b-c2a1-4cab-b265-bd720685c361",
          "type": "string"
        },
        "email": {
          "description": "Lender Email. This can only be updated for SSO users. Note that you must submit a Blend Support request to enable the \"Allow SSO lender email updates through API\" configuration to enable this field.",
          "example": "ashley.lender.new.email@example.com",
          "type": "string"
        },
        "name": {
          "description": "Lender Full Name",
          "example": "Ashley Lender",
          "type": "string"
        },
        "permittedSolutionSubTypes": {
          "$ref": "#/definitions/PermittedSolutionSubTypes"
        },
        "requireTwoFactorAuth": {
          "description": "MFA Required",
          "example": true,
          "type": "boolean"
        },
        "loginMethod": {
          "$ref": "#/definitions/LoginMethod"
        },
        "roleNames": {
          "description": "Roles for Lender",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone": {
          "$ref": "#/definitions/Phone"
        },
        "nmlsId": {
          "description": "Nationwide Multistate Licensing System ID number",
          "example": "39179",
          "type": "string"
        },
        "losUsername": {
          "description": "Lender's LOS Username",
          "example": "ashleylender",
          "type": "string"
        },
        "employeeId": {
          "description": "Lender's Employee Id",
          "example": "12314",
          "type": "string"
        },
        "branchId": {
          "description": "Lender's Branch Id",
          "example": "Westfield",
          "type": "string"
        },
        "creditInternalAccountIdentifiers": {
          "$ref": "#/definitions/CreditInternalAccountIdentifiers"
        }
      },
      "required": [
        "id"
      ]
    },
    "LenderRecordSchema": {
      "title": "LenderRecordSchema",
      "type": "object",
      "properties": {
        "name": {
          "description": "Lender Full Name",
          "example": "Ashley Lender",
          "type": "string"
        },
        "firstName": {
          "description": "Lender First Name",
          "example": "Ashley",
          "type": "string"
        },
        "lastName": {
          "description": "Lender Last Name",
          "example": "Lender",
          "type": "string"
        },
        "email": {
          "description": "Lender Email",
          "example": "ashley.lender@example.com",
          "type": "string"
        },
        "permittedSolutionSubTypes": {
          "description": "Loan Subtypes Permitted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermittedSolutionSubTypes1"
          }
        },
        "requireTwoFactorAuth": {
          "description": "MFA Required",
          "example": true,
          "type": "boolean"
        },
        "loginMethod": {
          "$ref": "#/definitions/LoginMethod"
        },
        "roleNames": {
          "description": "Roles for Lender",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone": {
          "$ref": "#/definitions/Phone"
        },
        "nmlsId": {
          "description": "Nationwide Multistate Licensing System ID number",
          "example": "39179",
          "type": "string"
        },
        "losUsername": {
          "description": "Lender's LOS Username",
          "example": "ashleylender",
          "type": "string"
        },
        "employeeId": {
          "description": "Lender's Employee Id",
          "example": "12314",
          "type": "string"
        },
        "branchId": {
          "description": "Lender's Branch Id",
          "type": "string"
        },
        "id": {
          "description": "The UUID of the Lender User in Blend's system. The static identifier that should be used to connect the user's identity across Blend and external integrations.",
          "example": "9250f84b-c2a1-4cab-b265-bd720685c361",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status9"
        },
        "creditInternalAccountIdentifiers": {
          "description": "List of all the active creditInternalAccountIdentifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditInternalAccountIdentifiers"
          }
        }
      },
      "required": [
        "requireTwoFactorAuth",
        "id",
        "status"
      ]
    },
    "AccountApplicationSchema": {
      "title": "AccountApplicationSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal application ID",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "referenceId": {
          "description": "Customer reference ID for application.",
          "example": "124123",
          "type": "string"
        },
        "productReferenceId": {
          "description": "Customer reference ID for product bundle.",
          "example": "324323",
          "type": "string"
        },
        "applicants": {
          "description": "List of applicants applying to open an account. Maximum of two.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicantSchema"
          }
        },
        "accounts": {
          "description": "List of accounts requested to be opened.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountSchema"
          }
        },
        "funding": {
          "description": "List of funding sources and amounts to be transferred to new accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundingSchema"
          }
        },
        "membershipQualification": {
          "$ref": "#/definitions/MembershipQualification"
        },
        "dynamicAccountOptions": {
          "description": "answers to configured account setup questions",
          "example": {
            "securityQuestion": "First car owned",
            "securityQuestionAnswer": "Volvo Station Wagon"
          },
          "type": "object"
        },
        "debitCardIndicator": {
          "description": "Indicates whether applicant is requesting a debit card.",
          "example": true,
          "type": "boolean"
        },
        "debitCardDesign": {
          "description": "Selected debit card design. Values configured per customer.",
          "example": "BLUE",
          "type": "string"
        },
        "promoCode": {
          "description": "Promo code for the application.",
          "example": "1110319",
          "type": "string"
        },
        "overdraftPrivilegeIndicator": {
          "description": "Indicates whether applicant is requesting overdraft privileges",
          "example": false,
          "type": "boolean"
        },
        "beneficiariesConsentIndicator": {
          "description": "Indicates whether applicant consented to adding beneficiaries",
          "example": false,
          "type": "boolean"
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "rejectedApplicants": {
          "description": "List of applicants removed from the current application via customer's decisioning policy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RejectedApplicantSchema"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "associatedApplicationId": {
          "description": "Application Id of Associated Application from Single App Flow",
          "example": "771379ec-f232-450d-b4a1-17d7fc0c3a7e",
          "type": "string"
        },
        "beneficiaries": {
          "description": "Beneficiaries collected at application-level.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BeneficiarySchema"
          }
        },
        "createdAt": {
          "description": "The timestamp for when the application is created",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "_id",
        "applicants",
        "accounts",
        "membershipQualification"
      ]
    },
    "ApplicantSchema": {
      "title": "ApplicantSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal applicant ID",
          "example": "56632a12-1bd7-4014-8571-cff53c346738",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type11"
        },
        "email": {
          "description": "Applicant email address",
          "example": "jane.smith@company.com",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "dateOfBirth": {
          "description": "Applicant birth date, UNIX timestamp (milliseconds)",
          "example": "1537222722246",
          "type": "string"
        },
        "socialSecurityNumber": {
          "description": "Applicant SSN",
          "example": "111224444",
          "type": "string"
        },
        "creditConsentIndicator": {
          "description": "Indicates whether applicant consented to credit policy for Identity Verification purposes.",
          "example": true,
          "type": "boolean"
        },
        "addresses": {
          "description": "List of applicant addresses, current or mailing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationAddressSchema"
          }
        },
        "phoneNumbers": {
          "description": "List of phone numbers associated with applicant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationPhoneNumberSchema"
          }
        },
        "identityVerification": {
          "$ref": "#/definitions/IdentityVerificationSchema"
        },
        "identityDocumentation": {
          "$ref": "#/definitions/IdentityDocumentationSchema"
        },
        "employmentStatus": {
          "$ref": "#/definitions/EmploymentStatus"
        },
        "employers": {
          "description": "List of applicant's employers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerSchema"
          }
        },
        "employments": {
          "description": "List of applicant's employments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmploymentSchema"
          }
        },
        "coreBankingId": {
          "description": "Unique identifier for customer's core banking system.",
          "example": "b258096c-c5f3-410f-ba56-08801f1a8752",
          "type": "string"
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus1"
        },
        "citizenshipStatus": {
          "$ref": "#/definitions/CitizenshipStatus"
        },
        "sex": {
          "$ref": "#/definitions/Sex"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      },
      "required": [
        "_id",
        "type",
        "email",
        "name",
        "dateOfBirth",
        "socialSecurityNumber",
        "addresses",
        "phoneNumbers"
      ]
    },
    "RejectedApplicantSchema": {
      "title": "RejectedApplicantSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal applicant ID",
          "example": "56632a12-1bd7-4014-8571-cff53c346738",
          "type": "string"
        },
        "type": {
          "description": "Applicant type",
          "example": "REJECTED",
          "type": "string",
          "default": "REJECTED"
        },
        "email": {
          "description": "Applicant email address",
          "example": "jane.smith@company.com",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "dateOfBirth": {
          "description": "Applicant birth date, UNIX timestamp (milliseconds)",
          "example": "1537222722246",
          "type": "string"
        },
        "socialSecurityNumber": {
          "description": "Applicant SSN",
          "example": "111224444",
          "type": "string"
        },
        "creditConsentIndicator": {
          "description": "Indicates whether applicant consented to credit policy for Identity Verification purposes.",
          "example": true,
          "type": "boolean"
        },
        "addresses": {
          "description": "List of applicant addresses, current or mailing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationAddressSchema"
          }
        },
        "phoneNumbers": {
          "description": "List of phone numbers associated with applicant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationPhoneNumberSchema"
          }
        },
        "identityVerificationStatus": {
          "$ref": "#/definitions/IdentityVerificationSchema"
        },
        "identityDocumentation": {
          "$ref": "#/definitions/IdentityDocumentationSchema"
        },
        "employers": {
          "description": "List of applicant's employers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployerSchema"
          }
        },
        "employments": {
          "description": "List of applicant's employments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmploymentSchema"
          }
        },
        "coreBankingId": {
          "description": "Unique identifier for customer's core banking system.",
          "example": "b258096c-c5f3-410f-ba56-08801f1a8752",
          "type": "string"
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus1"
        },
        "citizenshipStatus": {
          "$ref": "#/definitions/CitizenshipStatus"
        },
        "sex": {
          "$ref": "#/definitions/Sex"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      },
      "required": [
        "_id",
        "type",
        "email",
        "name",
        "dateOfBirth",
        "socialSecurityNumber",
        "addresses",
        "phoneNumbers"
      ]
    },
    "AOReviewerSchema": {
      "title": "AOReviewerSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal reviewer ID",
          "example": "56632a12-1bd7-4014-8571-cff53c346738",
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the reviewer",
          "example": "John Smith",
          "type": "string"
        }
      },
      "required": [
        "_id"
      ]
    },
    "AccountApplicationAddressSchema": {
      "title": "AccountApplicationAddressSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Address ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type12"
        },
        "lineText": {
          "description": "First line of address",
          "example": "123 Main St.",
          "type": "string"
        },
        "additionalLineText": {
          "description": "Second (optional) line of address",
          "example": "Apt. 4",
          "type": "string"
        },
        "cityName": {
          "description": "City name",
          "example": "New York City",
          "type": "string"
        },
        "countyName": {
          "description": "County name",
          "example": "New York County",
          "type": "string"
        },
        "stateCode": {
          "description": "2-digit state or territory code",
          "example": "NY",
          "type": "string"
        },
        "zipCode": {
          "description": "5-digit zip code",
          "example": "10001",
          "type": "string"
        }
      },
      "required": [
        "_id",
        "type",
        "lineText",
        "cityName",
        "stateCode",
        "zipCode"
      ]
    },
    "AccountApplicationPhoneNumberSchema": {
      "title": "AccountApplicationPhoneNumberSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type13"
        },
        "value": {
          "description": "Phone number",
          "example": 5551112222,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "AuthorizedUserSchema": {
      "title": "AuthorizedUserSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal authorized user ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "email": {
          "description": "Authorized User email address",
          "example": "jane.smith@company.com",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "dateOfBirth": {
          "description": "Authorized User birth date, UNIX timestamp (milliseconds)",
          "example": "1537222722246",
          "type": "string"
        },
        "socialSecurityNumber": {
          "description": "Authorized User SSN",
          "example": "111224444",
          "type": "string"
        },
        "addresses": {
          "description": "List of authorized User addresses, current or mailing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationAddressSchema"
          }
        },
        "phoneNumbers": {
          "description": "List of phone numbers associated with authorized User",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationPhoneNumberSchema"
          }
        },
        "identityVerification": {
          "$ref": "#/definitions/IdentityVerificationSchema"
        }
      },
      "required": [
        "_id",
        "email",
        "name",
        "dateOfBirth",
        "socialSecurityNumber",
        "addresses",
        "phoneNumbers"
      ]
    },
    "BeneficiarySchema": {
      "title": "BeneficiarySchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal beneficiary ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type19"
        },
        "subType": {
          "$ref": "#/definitions/SubType"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "relation": {
          "description": "Beneficiary relationship",
          "example": "Husband",
          "type": "string"
        },
        "allocation": {
          "description": "Percentage allocated to the given beneficiary",
          "example": 34.7,
          "type": "number",
          "format": "double"
        },
        "address": {
          "$ref": "#/definitions/AccountApplicationAddressSchema"
        },
        "email": {
          "description": "Beneficiary email address",
          "example": "test@blend.com",
          "type": "string"
        },
        "dateOfBirth": {
          "description": "Beneficiary birth date, UNIX timestamp (milliseconds)",
          "example": "1537222722246",
          "type": "string"
        },
        "socialSecurityNumber": {
          "description": "Beneficiary SSN",
          "example": "111224444",
          "type": "string"
        },
        "entityName": {
          "description": "Entity name of the given beneficiary (if the beneficiary is not a individual)",
          "example": "MyPerfect Trust",
          "type": "string"
        },
        "taxpayerIdentificationNumber": {
          "description": "Taxpayer identification number of the entity (if the beneficiary is not a individual)",
          "example": "123456789",
          "type": "string"
        },
        "phoneNumbers": {
          "description": "List of phone numbers associated with the given beneficiary",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationPhoneNumberSchema"
          }
        }
      },
      "required": [
        "_id",
        "type"
      ]
    },
    "CreditInternalAccountIdentifiers": {
      "title": "CreditInternalAccountIdentifiers",
      "type": "object",
      "properties": {
        "pullType": {
          "$ref": "#/definitions/PullType"
        },
        "creditPullScenario": {
          "description": "Credit Pull Scenario",
          "example": "MORTGAGE",
          "type": "string"
        },
        "creditProvider": {
          "description": "Credit Provider",
          "example": "INFORMATIVE_RESEARCH",
          "type": "string"
        },
        "creditAccountIdentifier": {
          "description": "Credit Account Identifier",
          "example": "test",
          "type": "string"
        }
      },
      "required": [
        "pullType",
        "creditPullScenario",
        "creditProvider",
        "creditAccountIdentifier"
      ]
    },
    "IdentityDocumentationSchema": {
      "title": "IdentityDocumentationSchema",
      "description": "ID Document",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type15"
        },
        "value": {
          "description": "ID document number",
          "example": "S123000U",
          "type": "string"
        },
        "stateCode": {
          "description": "2-digit code of state that issued the ID document",
          "example": "CA",
          "type": "string"
        },
        "country": {
          "description": "Country that issued the ID document",
          "example": "Taiwan",
          "type": "string"
        },
        "province": {
          "description": "Province that issued the ID document",
          "example": "British Columbia",
          "type": "string"
        },
        "tribe": {
          "description": "Tribe that issued the ID document",
          "example": "Spokane Tribe",
          "type": "string"
        },
        "issueDate": {
          "description": "Date when ID document was issued, UNIX Timestamp (milliseconds)",
          "example": 1529360743127,
          "type": "number",
          "format": "double"
        },
        "expiryDate": {
          "description": "Date when ID document expires, UNIX Timestamp (milliseconds)",
          "example": 1529360993127,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "value",
        "issueDate",
        "expiryDate"
      ]
    },
    "IdentityVerificationSchema": {
      "title": "IdentityVerificationSchema",
      "description": "Information regarding id verification for applicant",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal ID of identity verification process",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "statusType": {
          "$ref": "#/definitions/StatusType"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "type": {
          "$ref": "#/definitions/Type14"
        }
      },
      "required": [
        "_id"
      ]
    },
    "FundingAccountSchema": {
      "title": "FundingAccountSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal account ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "referenceId": {
          "description": "External ID or code to reference this account. e.g. share code.",
          "example": "0051",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type18"
        },
        "description": {
          "description": "Additional text describing account",
          "example": "Premium Checking Account",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "example": 33112244,
          "type": "number",
          "format": "double"
        },
        "routingNumber": {
          "description": "Routing number",
          "example": "00227799",
          "type": "string"
        }
      },
      "required": [
        "_id"
      ]
    },
    "AccountSchema": {
      "title": "AccountSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal account ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "referenceId": {
          "description": "External ID or code to reference this account. e.g. share code.",
          "example": "0051",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type18"
        },
        "description": {
          "description": "Additional text describing account",
          "example": "Premium Checking Account",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number",
          "example": 33112244,
          "type": "number",
          "format": "double"
        },
        "routingNumber": {
          "description": "Routing number",
          "example": "00227799",
          "type": "string"
        },
        "isPrimary": {
          "description": "Indicator for primary account on application",
          "example": true,
          "type": "boolean"
        },
        "authorizedUsers": {
          "description": "Authorized Users collected for the given account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedUserSchema"
          }
        },
        "beneficiaries": {
          "description": "Beneficiaries collected for the given account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BeneficiarySchema"
          }
        }
      },
      "required": [
        "_id"
      ]
    },
    "FundingSchema": {
      "title": "FundingSchema",
      "type": "object",
      "properties": {
        "sourceAccount": {
          "$ref": "#/definitions/FundingAccountSchema"
        },
        "destinationAccount": {
          "$ref": "#/definitions/FundingAccountSchema"
        },
        "amount": {
          "description": "Amount being transferred",
          "example": 5000,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "sourceAccount",
        "destinationAccount",
        "amount"
      ]
    },
    "EmployerSchema": {
      "title": "EmployerSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal employer ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type16"
        },
        "referenceId": {
          "description": "External employer reference ID. e.g. select employee group number.",
          "example": "243",
          "type": "string"
        },
        "name": {
          "description": "Employer name",
          "example": "Blend",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AccountApplicationAddressSchema"
        }
      },
      "required": [
        "_id",
        "type",
        "name"
      ]
    },
    "EmploymentSchema": {
      "title": "EmploymentSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type16"
        },
        "jobTitle": {
          "description": "Job Title",
          "example": "Account Executive",
          "type": "string"
        },
        "annualIncome": {
          "$ref": "#/definitions/AnnualIncome"
        },
        "hireDate": {
          "description": "Date of hire for given employment",
          "example": "2017-12-12T00:00:00.000Z",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "PatchApplicationSchema": {
      "title": "PatchApplicationSchema",
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "Optional reference ID for matching records with Blend's application object",
          "example": "200ABC123",
          "type": "string"
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus1"
        },
        "accounts": {
          "description": "List of accounts with their account/routing numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatchAccountSchema"
          }
        },
        "applicants": {
          "description": "List of applicants with their member numbers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatchApplicantSchema"
          }
        },
        "integrationEvent": {
          "$ref": "#/definitions/IntegrationEventSchema"
        }
      }
    },
    "PatchAccountSchema": {
      "title": "PatchAccountSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal account ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number of booked account",
          "example": "33112244",
          "type": "string"
        },
        "routingNumber": {
          "description": "Routing number of booked account",
          "example": "00227799",
          "type": "string"
        },
        "accessLimits": {
          "description": "access limits for the given account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessLimit"
          }
        }
      },
      "required": [
        "_id"
      ]
    },
    "PatchApplicantSchema": {
      "title": "PatchApplicantSchema",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal applicant ID",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "memberNumber": {
          "description": "Member number of applicant",
          "example": "9083409234",
          "type": "string"
        },
        "coreBankingId": {
          "description": "Applicant identifier in customer's core banking system",
          "example": "9876543210",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields on PATCH or POST requests for supported resources",
          "example": {
            "fieldName_1": "fieldValue_1",
            "fieldName_2": "fieldValue_2"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customMetadata": {
          "description": "Custom metadata on PATCH or POST requests for supported resources",
          "example": {
            "metadataName_1": "metadataValue_1",
            "metadataName_2": "metadataValue_2"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "_id"
      ]
    },
    "IntegrationEventSchema": {
      "title": "IntegrationEventSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type22"
        },
        "status": {
          "$ref": "#/definitions/Status10"
        },
        "failureCode": {
          "$ref": "#/definitions/FailureCode"
        },
        "failureMessage": {
          "description": "Message explaining why the integration event failed (It's only displayed when a failureCode is not provided)",
          "example": "User already exists in the core",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ]
    },
    "PackageBorrowerMetadataSchema": {
      "title": "PackageBorrowerMetadataSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Party in Blend's system. The static identifier that should be used to connect the party's identity across Blend and external integrations.",
          "example": "1239635c-6a0b-406a-85b2-e0e8e23c35db",
          "type": "string"
        },
        "tabs": {
          "$ref": "#/definitions/TabSchema"
        },
        "docDeliveryType": {
          "$ref": "#/definitions/DocDeliveryType"
        }
      },
      "required": [
        "id"
      ]
    },
    "PackageThirdPartyRecipientMetadataSchema": {
      "title": "PackageThirdPartyRecipientMetadataSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Party in Blend's system. The static identifier that should be used to connect the Party's identity across Blend and external integrations.",
          "example": "3239635c-6a0b-406a-85b2-e0e8e23c35dc",
          "type": "string"
        },
        "tabs": {
          "$ref": "#/definitions/TabSchema"
        },
        "docDeliveryType": {
          "$ref": "#/definitions/DocDeliveryType1"
        }
      },
      "required": [
        "id"
      ]
    },
    "PackageLenderMetadataSchema": {
      "title": "PackageLenderMetadataSchema",
      "type": "object",
      "properties": {
        "tabs": {
          "$ref": "#/definitions/TabSchema"
        },
        "docDeliveryType": {
          "$ref": "#/definitions/DocDeliveryType2"
        }
      }
    },
    "LosMilestoneErrorSchema": {
      "title": "LosMilestoneErrorSchema",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/Code"
        },
        "reason": {
          "example": "application does not exist",
          "type": "string"
        }
      }
    },
    "ExportStatusSchema": {
      "title": "ExportStatusSchema",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status11"
        },
        "reason": {
          "description": "Further explanation for the assigned status",
          "example": "import failed on los",
          "type": "string"
        },
        "lastUpdated": {
          "description": "UTC Timestamp of last update to status",
          "example": "2018-08-30T19:31:38.902Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "applicationId",
        "status"
      ]
    },
    "PostExportStatusSchema": {
      "title": "PostExportStatusSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status11"
        },
        "reason": {
          "description": "Further explanation for the assigned status",
          "example": "import failed on los",
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "NotAuthorizedErrorSchema": {
      "title": "NotAuthorizedErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Forbidden",
          "type": "string"
        },
        "display": {
          "example": "You do not have the appropriate permissions to take this action.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "InternalServerErrorSchema": {
      "title": "InternalServerErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Internal Server Error",
          "type": "string"
        },
        "display": {
          "example": "Something went wrong. Please try again later.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "BulkRequestErrorSchema": {
      "title": "BulkRequestErrorSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the referenced resource in Blend's system. The static identifier that should be used to connect the resource's identity across Blend and external integrations.",
          "example": "29526148-296e-477d-8a61-5eceb51f4075",
          "type": "string"
        },
        "code": {
          "example": 409,
          "type": "number",
          "format": "double"
        },
        "reason": {
          "example": "Invalid lender params.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code",
        "reason"
      ]
    },
    "ApplicationNotFoundErrorSchema": {
      "title": "ApplicationNotFoundErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Not Found",
          "type": "string"
        },
        "display": {
          "example": "The action you're trying to take is invalid. Please validate the loan details in your Blend lending portal before retrying this action.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "ConflictErrorSchema": {
      "title": "ConflictErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Conflict",
          "type": "string"
        },
        "display": {
          "example": "The loan that you are trying to access is in an invalid state. Please validate the loan details in your Blend lending account before retrying this action.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "InvalidRequestErrorSchema": {
      "title": "InvalidRequestErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Invalid Request",
          "type": "string"
        },
        "display": {
          "example": "The action you're trying to take is invalid.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "InvalidUpdateErrorSchema": {
      "title": "InvalidUpdateErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "The requested update is invalid",
          "type": "string"
        },
        "display": {
          "example": "Please provide a valid fieldName.",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "AuthenticationRequiredErrorSchema": {
      "title": "AuthenticationRequiredErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Authentication required",
          "type": "string"
        },
        "display": {
          "example": "Your credentials are invalid.",
          "type": "string"
        },
        "trackingId": {
          "example": "cbd15fc4-a8cc-45db-ac87-f90802ebbcc3",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "RateLimitedErrorSchema": {
      "title": "RateLimitedErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "example": "Rate Limited",
          "type": "string"
        },
        "display": {
          "example": "There have been too many requests for this resource. Please try again later.",
          "type": "string"
        },
        "trackingId": {
          "example": "a62e8b59-5ac7-40a5-a6f8-a0e34a7f2705",
          "type": "string"
        }
      },
      "required": [
        "error"
      ]
    },
    "ReportingLoanSchema": {
      "title": "ReportingLoanSchema",
      "type": "object",
      "properties": {
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "losPrimaryKey": {
          "description": "The unique identifier of the loan in a lender's Loan Origination System, or LOS (e.g. Empower, Encompass, etc.). This value should not change over time and should be used to connect the loan's identity between Blend and the LOS.",
          "example": "Loan-234",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "creatorUserId": {
          "description": "The user ID for the user that originated the loan.",
          "example": "16dfd1c4-ee17-4b97-9e6e-d0c3718c1656",
          "type": "string"
        },
        "primaryAssigneeUserId": {
          "description": "The user id of the primary assignee LO on the loan.",
          "example": "75d3231d-d1d7-4919-94d9-c8041280ad6f",
          "type": "string"
        },
        "primaryAssigneeName": {
          "description": "The full name of the primary assignee",
          "example": "Carl Sharonson",
          "type": "string"
        },
        "primaryAssigneeEmail": {
          "description": "The email address of the primary assignee",
          "example": "carl@shar.com",
          "type": "string"
        },
        "allCurrentAssignees": {
          "description": "A JSON array containing the user ID, name, and email of all current assignees on the loan",
          "example": [
            {
              "userId:": "4a0cb986-6a88-4a17-87cd-cd7e37eea563",
              "name:": "Carl Sharonson",
              "email:": "carl@shar.com"
            }
          ],
          "type": "string"
        },
        "loanType": {
          "$ref": "#/definitions/LoanType"
        },
        "loanPurposeType": {
          "$ref": "#/definitions/LoanPurposeType2"
        },
        "appSourceName": {
          "description": "Canonical name of where this application came from, such as the name of the LOS or CRM",
          "example": "Velocify",
          "type": "string"
        },
        "appLeadSource": {
          "$ref": "#/definitions/AppLeadSource"
        },
        "appProgram": {
          "description": "The loan program of the application, possible values include - STATE_AGENCY, VA, FHA, CONVENTIONAL, LOCAL_AGENCY, USARURAL_DEVELOPMENT, PUBLIC_AND_INDIAN_HOUSING, OTHER",
          "example": "CONVENTIONAL",
          "type": "string"
        },
        "appMarketingTag": {
          "description": "The tag corresponding to a marketing campaign. This identifier can be used to gauge which links are most effective within certain campaigns.",
          "example": "source00_medium00_campaign00_term00_content00",
          "type": "string"
        },
        "assetState": {
          "description": "The registered address state on the asset",
          "example": "CA",
          "type": "string"
        },
        "assetPurchasePrice": {
          "description": "The purchase price of the asset",
          "example": 10000,
          "type": "number",
          "format": "double"
        },
        "loanApplicationStatus": {
          "description": "The current status of the loan application",
          "example": "SUBMITTED",
          "type": "string"
        },
        "los_milestone": {
          "description": "An optional enumerated field sent by lenders who have shared this data via the home-lending/applications/los-milestones endpoint. Possible values include SUBMITTED. UNDERWRITING, CONDITIONAL_APPROVAL, APPROVED, CLOSING, CLOSED",
          "example": "SUBMITTED",
          "type": "string"
        },
        "losMilestoneLastUpdatedDatetime": {
          "description": "The UTC timestamp for when an LOS milestone was last posted to Blend via the home-lending/applications/los-milestones",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "firstCreditPulledDatetime": {
          "description": "The first UTC timestamp of when the borrower’s credit was pulled through Blend",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "primaryBorrowerSsnFlag": {
          "description": "A flag denoting if the borrower has provided their SSN",
          "example": true,
          "type": "boolean"
        },
        "primaryBorrowerCreditConsentDatetime": {
          "description": "The date that the borrower provided credit consent",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "primaryBorrowerEconsentFlag": {
          "description": "A flag denoting that the borrower has provided e-consent",
          "example": true,
          "type": "boolean"
        },
        "coborrowerSsnFlag": {
          "description": "A flag denoting if the coborrower has provided their SSN",
          "example": true,
          "type": "boolean"
        },
        "coborrowerCreditConsentDatetime": {
          "description": "The date that the borrower provided credit consent",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "coborrowerEconsentFlag": {
          "description": "A flag denoting that the co-borrower has provided e-consent",
          "example": true,
          "type": "boolean"
        },
        "followUpOnlyFlag": {
          "description": "A flag that indicates that the application was a follow-up only loan - the lender used Blend to issue follow ups to the borrower",
          "example": true,
          "type": "boolean"
        },
        "connectivityFlag": {
          "description": "A flag that indicates that the borrower successfully generated an asset statement",
          "example": true,
          "type": "boolean"
        },
        "twnSuccessFlag": {
          "description": "A flag that indicates that a successful match was found on the borrower using The Work Number",
          "example": true,
          "type": "boolean"
        },
        "hasRealtorFlag": {
          "description": "A flag that indicates the borrower selected they are working with a realtor on their application",
          "example": true,
          "type": "boolean"
        },
        "unassignedOnSubmitFlag": {
          "description": "A flag that indicates the borrower selected they are working with a realtor on their application",
          "example": true,
          "type": "boolean"
        },
        "signupUrl": {
          "description": "For Mortgage/Heloc/Heloan only - The sign-up URL the borrower used to apply. Can be used with the unassignedOnsubmitFlag field to diagnose faulty referral links",
          "example": "www.examplesignupurl.com",
          "type": "string"
        },
        "preApprovalLetterDatetime": {
          "description": "The timestamp for when a Preapproval Letter was generated in Blend (UTC)",
          "example": "2018-07-14T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "createdDatetime": {
          "description": "The creation time of the loan (in UTC)",
          "example": "2018-07-14T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "daysSinceLastTouch": {
          "description": "Number of days since the loan was last touched (from when the report was generated)",
          "example": 3,
          "type": "number",
          "format": "double"
        },
        "borrowerStartedDatetime": {
          "description": "The timestamp when the borrower(s) started the loan application",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "borrowerSubmittedDatetime": {
          "description": "The timestamp when borrower submitted the application",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "takeOverDatetime": {
          "description": "The timestamp when the loan was first taken over by the LO (in UTC)",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estExportedDatetime": {
          "description": "The timestamp when the application was exported. Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estLastUpdatedDatetime": {
          "description": "The timestamp the loan was last updated by the system. Can be used to filter on to find loans that have been updated. Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes and specific actions may not be considered as a \"last updated\"",
          "example": "2018-07-16T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estLastTouchDatetime": {
          "description": "The timestamp the loan was last touched (by a borrower or lender user). Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes and specific actions may not be considered as a \"last touched\"",
          "example": "2018-07-16T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "lastTouchedByUserId": {
          "description": "The ID of the user to last touch the loan (can be borrower or lender user)",
          "example": "4a0cb986-6a88-4a17-87cd-cd7e37eea563",
          "type": "string"
        },
        "estCompletedDatetime": {
          "description": "The application completion time of the loan (in UTC)",
          "example": "2018-07-30T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estArchivedDatetime": {
          "description": "The timestamp when the application was archived. Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estDeletedDatetime": {
          "description": "The timestamp when the application was deleted. Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "estPurgedDatetime": {
          "description": "The timestamp when the application was purged. Field is appended with estimated, as this field is not meant to be used for compliance and reconciliation purposes (\"estimated\" in this case does not predict when a loan will be purged. This field is only for loans that have already been purged)",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "appStartToSubmitMinutes": {
          "description": "For a submitted loan, the time between app start and app submit",
          "example": 34,
          "type": "number",
          "format": "double"
        },
        "asOfDate": {
          "description": "The date for when the report was generated",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "loanId"
      ]
    },
    "ReportingDocumentSchema": {
      "title": "ReportingDocumentSchema",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The unique ID for the document upload",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "uploadedByUserId": {
          "description": "The User ID for the user who uploaded the document (can be 'system', or either a borrower or lender user ID)",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "uploadedByUserType": {
          "description": "The type of user that uploaded the document. Eg \"borrower\", \"lender\", \"system\", \"internal_api\", \"external_api\". If the source is system or from the API, those are generally documents uploaded by Blend, or they can also be from internal/third party integrations that use the APIs to upload documents",
          "example": "lender",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DocumentType"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "createdDatetime": {
          "description": "The UTC timestamp for when the document was uploaded",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "loanType": {
          "description": "The specific product (Mortgage, HELOAN, HELOC, Auto, etc)",
          "example": "MORTGAGE",
          "type": "string"
        },
        "asOfDate": {
          "description": "The date for when the report was generated",
          "example": "2018-08-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "documentId",
        "loanId",
        "type",
        "source",
        "createdDatetime",
        "asOfDate"
      ]
    },
    "ReportingBorrowerSchema": {
      "title": "ReportingBorrowerSchema",
      "type": "object",
      "properties": {
        "userId": {
          "description": "User id",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "partyId": {
          "description": "The UUID of the party in Blend's system. Equivalent to borrowerId",
          "example": "592e17e5-0392-41e5-aca3-b0351914e60d",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role1"
        },
        "loginMethod": {
          "$ref": "#/definitions/LoginMethod3"
        },
        "activationDatetime": {
          "description": "The UTC timestamp of when the borrower activated their Blend user",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "invitedDatetime": {
          "description": "The UTC timestamp of when the borrower was invited to Blend",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "creditPulledDatetime": {
          "description": "The latest UTC timestamp of when the borrower’s credit was pulled through Blend",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "assetsPulledDatetime": {
          "description": "The latest UTC timestamp of when the borrower connected their assets through Blend",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "workflowMilestone": {
          "description": "The latest completed borrower milestone within Blend",
          "example": "Review and Submit Application_0",
          "type": "string"
        },
        "userAgent": {
          "description": "The most recent borrower user agent. Can be used to derive the last device type used.",
          "example": "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko",
          "type": "string"
        }
      },
      "required": [
        "userId",
        "loanId",
        "partyId"
      ]
    },
    "ReportingLenderSchema": {
      "title": "ReportingLenderSchema",
      "type": "object",
      "properties": {
        "userId": {
          "description": "Unique User ID associated with the Lender User",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "nmlsId": {
          "description": "The NMLS ID of the lender",
          "example": "123123",
          "type": "string"
        },
        "branchId": {
          "description": "The Branch ID entered into the lender user profile (optional field maintained manually by the client)",
          "example": "Springfield",
          "type": "string"
        },
        "employeeId": {
          "description": "The lender user's employee ID (optional field maintained manually by the client)",
          "example": "2397",
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the lender",
          "example": "John Smith",
          "type": "string"
        },
        "email": {
          "description": "The email address of the lender",
          "example": "john.smith@xyz.com",
          "type": "string"
        },
        "userRoles": {
          "description": "A comma separated list of user roles attributed to the lender",
          "example": "Loan Officer",
          "type": "string"
        },
        "losUsername": {
          "description": "The lender user's LOS Username in Blend",
          "example": "jsmith",
          "type": "string"
        },
        "activationDatetime": {
          "description": "The UTC timestamp for when the lender user accepted Terms of Service",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "invitedDatetime": {
          "description": "The invitation time of the lender (in UTC)",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "lastLoginDatetime": {
          "description": "The UTC timestamp for the last time the account was opened/used",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "totalCreatedApplications": {
          "description": "The total number of created application applications assigned to the lender user in the last 90 days",
          "example": 230,
          "type": "number",
          "format": "double"
        },
        "borrowerSubmits": {
          "description": "The total number of loans submitted by the borrower with this lender as the primary assignee",
          "example": 100,
          "type": "number",
          "format": "double"
        },
        "percentLoansSubmitted": {
          "description": "The percent of loans submitted out of the total number of created applications assigned to the lender user",
          "example": 89.22,
          "type": "number",
          "format": "double"
        },
        "percentSubmitsWithGas": {
          "description": "The percent of submitted loans with a Generated Asset Statement on the previous date",
          "example": 18.42,
          "type": "number",
          "format": "double"
        },
        "lastBorrowerSubmitDatetime": {
          "description": "The UTC timestamp for the last time the account was opened/used",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "averageNpsScore": {
          "description": "The average NPS score of all submitted applications assigned to the lender user",
          "example": 9.5,
          "type": "number",
          "format": "double"
        },
        "calculatedNpsScore": {
          "description": "The calculated NPS score of all submitted applications assigned to the lender user",
          "example": 66,
          "type": "number",
          "format": "double"
        },
        "percentLoansUtilizingFollowups": {
          "description": "The percent of the lender user's loans utilizing follow-ups within the date filters provided",
          "example": 24.88,
          "type": "number",
          "format": "double"
        },
        "followupsManuallyRequested": {
          "description": "The number of manually requested follow-ups by the lender user within the date filters provided",
          "example": 35,
          "type": "number",
          "format": "double"
        },
        "followupsBorrowerCompleted": {
          "description": "The number of follow-ups requested by this lender within the date filters provided that were completed by borrowers",
          "example": 29,
          "type": "number",
          "format": "double"
        },
        "followupsPending": {
          "description": "The number of follow-ups requested within the date filters that have not been completed by the borrower",
          "type": "number",
          "format": "double"
        },
        "followupsAccepted": {
          "description": "The number of follow-ups requested within the date filters that were accepted by this lender",
          "example": 72,
          "type": "number",
          "format": "double"
        },
        "followupsRejected": {
          "description": "The number of follow-ups requested within the date filters that were rejected by this lender",
          "example": 22,
          "type": "number",
          "format": "double"
        },
        "asOfDate": {
          "description": "The date that the report was generated",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "userId",
        "fullName",
        "email"
      ]
    },
    "ReportingActivitySchema": {
      "title": "ReportingActivitySchema",
      "type": "object",
      "properties": {
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "activityId": {
          "description": "Activity id",
          "example": "e4d546b3er0cd64314365x45b390e1e45deee34ca4fa6cf19eb2b7trrrr12345",
          "type": "string"
        },
        "userId": {
          "description": "User id",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "type": {
          "description": "Activity type",
          "example": "Getting To Know You_0",
          "type": "string"
        },
        "startedDatetime": {
          "description": "Start time of the activity (in UTC)",
          "example": "2018-07-24 00:42:00+00:00",
          "type": "string",
          "format": "date-time"
        },
        "completedDatetime": {
          "description": "Completion time of the activity (in UTC)",
          "example": "2018-07-24 00:42:00+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "loanId",
        "activityId",
        "userId"
      ]
    },
    "ReportingNPSSchema": {
      "title": "ReportingNPSSchema",
      "type": "object",
      "properties": {
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "datetime": {
          "description": "submit time of NPS",
          "example": "2018-07-24 00:42:00+00:00",
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "description": "NPS Comment submitted by borrower",
          "example": "very user friendly",
          "type": "string"
        },
        "score": {
          "description": "NPS Score (0-10)",
          "example": 9,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "loanId"
      ]
    },
    "ReportingDataVerificationUsageSchema": {
      "title": "ReportingDataVerificationUsageSchema",
      "type": "object",
      "properties": {
        "week": {
          "description": "The start date of the week",
          "example": "2019-09-23T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "numberGasGenerated": {
          "description": "The number of Generated Asset Statements on the previous date",
          "example": 23,
          "type": "number",
          "format": "double"
        },
        "numberLoansSubmitted": {
          "description": "The total number of submits on the previous date",
          "example": 38,
          "type": "number",
          "format": "double"
        },
        "numberLoansWithGas": {
          "description": "The total number of submitted loans with a Generated Asset Statement on the previous date",
          "example": 45,
          "type": "number",
          "format": "double"
        },
        "percentSubmitsWithGas": {
          "description": "The percent of submitted loans with a Generated Asset Statement on the previous date",
          "example": 18.42,
          "type": "number",
          "format": "double"
        },
        "numberTwnInstantAttempt": {
          "description": "The total number of TWN instant attempts on the previous date",
          "example": 1754,
          "type": "number",
          "format": "double"
        },
        "numberTwnInstantSuccess": {
          "description": "The total number of TWN instant successes on the previous date",
          "example": 892,
          "type": "number",
          "format": "double"
        },
        "asOfDate": {
          "description": "The effective date of the report",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "deployment": {
          "description": "The tenant making the API call",
          "example": "blend",
          "type": "string"
        }
      },
      "required": [
        "week",
        "numberGasGenerated",
        "numberLoansSubmitted",
        "numberLoansWithGas",
        "percentSubmitsWithGas",
        "numberTwnInstantAttempt",
        "numberTwnInstantSuccess",
        "asOfDate"
      ]
    },
    "ReportingFollowupsSchema": {
      "title": "ReportingFollowupsSchema",
      "type": "object",
      "properties": {
        "followUpId": {
          "description": "The UUID of the followup in Blend's system. The static identifier that should be used to access followups across Blend and external integrations.",
          "example": "0057e00b-15fd-4d3a-8389-18a3ca937bee",
          "type": "string"
        },
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "loanType": {
          "description": "The specific product (Mortgage, HELOAN, HELOC, Auto, etc)",
          "example": "MORTGAGE",
          "type": "string"
        },
        "requestType": {
          "description": "The type of request that created the followup. Can be AUTOMATED, MANUAL, or SUGGESTED",
          "example": "AUTOMATED",
          "type": "string"
        },
        "followUpType": {
          "description": "The followup requested",
          "example": "Document Request",
          "type": "string"
        },
        "followUpText": {
          "description": "Optional text containing additional details about the follow-up. Can be set by Blend, or custom text",
          "example": "Pre-Approval Notice (E-Sign)",
          "type": "string"
        },
        "followUpCreatedDatetime": {
          "description": "The timestamp when the followup was created in Blend",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "currentStatus": {
          "description": "The current status of the followup. Can be Suggested, Declined, Requested, Pending Review, Completed, Completed Externally, Rejected, Cancelled",
          "example": "Requested",
          "type": "string"
        },
        "requestedDatetime": {
          "description": "The UTC timestamp when the followup was requested",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "requestedUserId": {
          "description": "The user_id that requested the followup. Can be 'system' or a Lender User ID",
          "example": "bf11aa77-eef0-422a-a3f0-884662c33254",
          "type": "string"
        },
        "requestedUserName": {
          "description": "Full name of the Lender User that requested the followup",
          "example": "Mike Carlson",
          "type": "string"
        },
        "requestedUserEmail": {
          "description": "Email address of the Lender User that requested the followup",
          "example": "mc@carlson.com",
          "type": "string"
        },
        "completedDatetime": {
          "description": "The timestamp when the followup was completed by the borrower",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "completedUserId": {
          "description": "The User ID that completed the followup (generally associated with a Borrower)",
          "example": "bf11ks83-eef0-422a-a3f0-8846skeoic24",
          "type": "string"
        },
        "reviewAction": {
          "description": "The action taken by the reviewing lender. Can be ACCEPT or REJECT.",
          "example": "ACCEPT",
          "type": "string"
        },
        "reviewedDatetime": {
          "description": "The timestamp when the follow-up was reviewed (in UTC)",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "reviewedUserId": {
          "description": "The Lender User ID that reviewed the followup",
          "example": "bf11aa77-eef0-422a-a3f0-884662c33254",
          "type": "string"
        },
        "cancelledDatetime": {
          "description": "The timestamp when the followup was cancelled (in UTC)",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "cancelledUserId": {
          "description": "The lender User ID that cancelled the followup",
          "example": "0005e3dc-ba27-4fe7-bfea-b809912d632c",
          "type": "string"
        },
        "asOfDate": {
          "description": "The date that the report was generated",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "followUpId",
        "loanId",
        "asOfDate"
      ]
    },
    "ReportingLenderPabActivitiesSchema": {
      "title": "ReportingLenderPabActivitiesSchema",
      "type": "object",
      "properties": {
        "activityId": {
          "description": "Unique ID of the activity",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "loanId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "loanNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "loanType": {
          "description": "The specific product (Mortgage, HELOAN, HELOC, Auto, etc)",
          "example": "MORTGAGE",
          "type": "string"
        },
        "loanPurposeType": {
          "description": "REFINANCE or PURCHASE for Mortgage loans. Will be set to OTHER or null for other loan types.",
          "example": "PURCHASE",
          "type": "string"
        },
        "appLeadSource": {
          "description": "Specifies how an app was created (BORROWER, LENDER, INGEST, PUBLIC_API)",
          "example": "BORROWER",
          "type": "string"
        },
        "userId": {
          "description": "User ID for the user that completed the action (can be the user ID for a borrower or lender, or 'system')",
          "example": "002e8da3-e5f9-45b2-ba55-1a2444ad5fd9",
          "type": "string"
        },
        "userType": {
          "description": "The type for the user that completed the action. Can be system, borrower, or lender",
          "example": "lender",
          "type": "string"
        },
        "lenderUserName": {
          "description": "If userType is a lender, the full name of the lender user that completed the activity",
          "example": "Vigtor Lamgert",
          "type": "string"
        },
        "lenderUserEmail": {
          "description": "If userType is a lender, the email address of the lender user that completed the activity",
          "example": "lam@vic.com",
          "type": "string"
        },
        "activityType": {
          "description": "Which PAB Activity was done on the loan. Can be 'ecoa updated', 'pulled credit' 'selected a product' 'sent pre-approval letter' 'ran desktop underwriter'",
          "example": "pulled credit",
          "type": "string"
        },
        "activityDatetime": {
          "description": "The UTC timestamp for when the activity was done on the loan",
          "example": "2018-07-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "activitySuccess": {
          "description": "Field indicating whether the activity was successful or not",
          "example": true,
          "type": "boolean"
        },
        "creditPulltype": {
          "description": "For credit pull events - the type of credit pull (Hard or Soft)",
          "example": "Hard",
          "type": "string"
        },
        "creditBureaus": {
          "description": "For credit pull events - a JSON array containing the bureaus where credit was pulled from",
          "example": [
            "Experian",
            "TransUnion",
            "Equifax"
          ],
          "type": "string"
        },
        "creditBureautype": {
          "description": "For credit pull events - the type of pull (single or tri)",
          "example": "tri",
          "type": "string"
        },
        "creditJoint": {
          "description": "For credit pull events - if the credit was pulled jointly.",
          "example": true,
          "type": "boolean"
        },
        "creditActiontype": {
          "description": "For credit pull events - the action on the pull",
          "example": "Order",
          "type": "string"
        },
        "duRecommendation": {
          "description": "For desktop underwriting events - what the recommendation is",
          "example": "Approve/Eligible",
          "type": "string"
        }
      },
      "required": [
        "activityId",
        "loanId"
      ]
    },
    "ReportingDepositAccountApplicationsSchema": {
      "title": "ReportingDepositAccountApplicationsSchema",
      "type": "object",
      "properties": {
        "asOfDatetime": {
          "description": "UTC datetime of when the data in the report was last refreshed.",
          "example": "2018-08-24T00:42:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationCreatedDatetime": {
          "description": "UTC datetime of when the application was created.",
          "example": "2021-06-01T21:35:54.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "applicationNumber": {
          "description": "Application number in displayed the Blend Workspace.",
          "example": "123456",
          "type": "string"
        },
        "leadSource": {
          "description": "Type of party that created the application, either \"BORROWER\" (i.e. the applicant) or \"LENDER\".",
          "example": "BORROWER",
          "type": "string"
        },
        "appSourceMarketingTag": {
          "description": "Marketing identifier of the top-of-funnel campaign to which the application should be attributed.",
          "example": "google",
          "type": "string"
        },
        "primaryAssignedReviewerUserId": {
          "description": "Blend user ID of the application's primary assigned lender-user.",
          "example": "7b7485d4-15db-4172-88e5-1c92f11b9f67",
          "type": "string"
        },
        "primaryAssignedReviewerFullName": {
          "description": "Full name in the primary assigned reviewer's user profile.",
          "example": "Leonardo da Vinci",
          "type": "string"
        },
        "primaryAssignedReviewerEmail": {
          "description": "Email address of the primary assigned reviewer.",
          "example": "leo@renaissance.com",
          "type": "string"
        },
        "primaryAssignedReviewerBranchId": {
          "description": "Branch ID in the primary assigned reviewer's user profile.",
          "example": "Old Italy",
          "type": "string"
        },
        "primaryAssignedReviewerEmployeeId": {
          "description": "Employee ID in the primary assigned reviewer's user profile.",
          "example": "4555",
          "type": "string"
        },
        "primaryAssignedReviewerNmlsId": {
          "description": "Nationwide Multistate Licensing System ID in the primary assigned reviewer's user profile.",
          "example": "987654",
          "type": "string"
        },
        "productBundleReferenceId": {
          "description": "Product bundle ID associated with the application (a single application can open multiple accounts, e.g. \"Checking & Savings\").",
          "example": "CKSV",
          "type": "string"
        },
        "totalNumberofAccountsInBundle": {
          "description": "Number of accounts in the product bundle that will be opened if the application is approved.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "debitCardSelected": {
          "description": "Booelan indicator for whether the applicant opted in for a debit card.",
          "example": true,
          "type": "boolean"
        },
        "overdraftProtectionSelected": {
          "description": "Boolean indicator for whether the applicant opted in for overdraft protection.",
          "example": true,
          "type": "boolean"
        },
        "numberOfCheckingAccounts": {
          "description": "Number of checking accounts in the product bundle that will be opened if the application is approved.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "checkingProductReferenceIds": {
          "description": "Product ID(s) of the specific checking product(s) in the bundle; may be the same as the productBundleReferenceId if the application is for a single checking account. This field will contain a comma-separated list of IDs when the application is for a multi-account bundle containing more than one checking account.",
          "example": "CZECH",
          "type": "string"
        },
        "checkingProductNames": {
          "description": "Full humanized name(s) of the checking product(s) in the bundle. This field will contain a comma-separated list of names when the application is for a multi-account bundle with more than one checking account.",
          "example": "Mic Check One Two One Two",
          "type": "string"
        },
        "numberOfSavingsAccounts": {
          "description": "Number of savings accounts in the product bundle that will be opened if the application is approved.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "savingsProductReferenceIds": {
          "description": "Product ID(s) of the specific savings product(s) in the bundle; may be the same as the productBundleReferenceId if the application is for a single savings account. This field will contain a comma-separated list of identifiers when the application is for a multi-account bundle containing more than one savings account.",
          "example": "S100",
          "type": "string"
        },
        "savingsProductNames": {
          "description": "Full humanized name(s) of the savings product(s) in the bundle. This field will contain a comma-separated list of names when the application is for a multi-account bundle with more than one savings account.",
          "example": "Save the Whales",
          "type": "string"
        },
        "numberofCdAccounts": {
          "description": "Number of certificates of deposit (CDs) in the product bundle that will be opened if the application is approved.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "cdProductReferenceIds": {
          "description": "Product ID(s) of the specific CD product(s) in the bundle; may be the same as the productBundleReferenceId if the application is for a single CD. This field will contain a comma-separated list of identifiers when the application is for a multi-account bundle containing more than one CD.",
          "example": "CD36",
          "type": "string"
        },
        "cdProductNames": {
          "description": "Full humanized name(s) of the CD product(s) in the bundle. This field will contain a comma-separated list of names when the application is for a multi-account bundle with more than one CD.",
          "example": "Certificate of Deposit",
          "type": "string"
        },
        "cdTerms": {
          "description": "Chosen term length(s) of the CD(s) in the bundle, appearing as strings such as \"12_MONTHS\" and \"36_MONTHS\". This field will contain a comma-separated list of term lengths when the application is for a multi-account bundle with more than one CD.",
          "example": "36_MONTHS",
          "type": "string"
        },
        "numberofHsaAccounts": {
          "description": "Number of health savings accounts (HSAs) in the product bundle that will be opened if the application is approved.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "hsaProductReferenceIds": {
          "description": "Product ID(s) of the specific HSA product(s) in the bundle; may be the same as the productBundleReferenceId if the application is for a single HSA. This field will contain a comma-separated list of identifiers when the application is for a multi-account bundle containing more than one HSA.",
          "example": "HSA",
          "type": "string"
        },
        "hsaProductNames": {
          "description": "Full humanized name(s) of the HSA product(s) in the bundle. This field will contain a comma-separated list of names when the application is for a multi-account bundle with more than one HSA.",
          "example": "Health Savings Account",
          "type": "string"
        },
        "hsaPlanTypes": {
          "description": "Chosen plan type(s) of the HSA(s) in the bundle, either \"INDIVIDUAL\" or \"FAMILY\". This field will contain a comma-separated list of plan types when the application is for a multi-account bundle with more than one HSA.",
          "example": "INDIVIDUAL",
          "type": "string"
        },
        "totalNumberOfApplicants": {
          "description": "Number of applicants on the application (primary, co-, and minor applicants).",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "numberOfPrimaryApplicants": {
          "description": "Number of primary applicants on the application. Every application should have one primary applicant.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "primaryApplicantEmploymentStatus": {
          "description": "Employment status of the primary applicant. There are five statuses the applicant can choose from, including \"EMPLOYED\", \"SELF_EMPLOYED\", \"UNEMPLOYED\", \"RETIRED\", and \"NEVER_EMPLOYED\".",
          "example": "EMPLOYED",
          "type": "string"
        },
        "primaryApplicantIsExistingMember": {
          "description": "Boolean indicator that is TRUE if the primary applicant indicated that they are an existing member of the institution.",
          "example": false,
          "type": "boolean"
        },
        "numberOfCoapplicants": {
          "description": "Number of coapplicants on the application.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "coapplicantEmploymentStatus": {
          "description": "Employment status of the coapplicant. There are five statuses the coapplicant can choose from, including \"EMPLOYED\", \"SELF_EMPLOYED\", \"UNEMPLOYED\", \"RETIRED\", and \"NEVER_EMPLOYED\".",
          "example": "UNEMPLOYED",
          "type": "string"
        },
        "coapplicantRejected": {
          "description": "Booelan indicator for whether the coapplicant was rejected via \"adverse action notice\" (AAN) and the primary applicant elected to proceed nonetheless.",
          "example": true,
          "type": "boolean"
        },
        "numberOfMinorApplicants": {
          "description": "Number of minor applicants (i.e. persons under 18) on the application.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "firstUiTrackingEventDatetime": {
          "description": "UTC datetime of the first tracking event associated with the application. The presence of an event should indicate that the applicant at least allowed the UI to load.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstPersonalInfoWorkflowEventDatetime": {
          "description": "UTC datetime of the first tracking event in the \"Personal Info\" workflow.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "hasActivityBeyondInitialDetailsTask": {
          "description": "Boolean indicator compiling all possible downfunnel evidence that the application made it past the initial \"Get Applicant Details\" task in the \"Personal Info\" workflow. The field is intended to be used as a more qualified definition of \"started\", with a value of TRUE identifying applications that were not abandoned on the first page.",
          "example": true,
          "type": "boolean"
        },
        "deviceTypestart": {
          "description": "The type of device (\"Desktop\", \"Mobile\", or \"Tablet\") used for the application's first user action, which should correspond to clicking \"continue\" on the first page of the application.",
          "example": "Desktop",
          "type": "string"
        },
        "firstIdvWorkflowEventDatetime": {
          "description": "UTC datetime of the first tracking event in the \"Identity Verfication\" workflow.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstAccountSetupWorkflowEventDatetime": {
          "description": "UTC datetime of the first tracking event in the \"Account Setup\" workflow.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationSubmittedDatetime": {
          "description": "UTC datetime of application submission.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationSubmissionStatus": {
          "$ref": "#/definitions/ApplicationSubmissionStatus"
        },
        "firstAutomatedApprovalDatetime": {
          "description": "UTC datetime of the first automated approval decision on the application emitted by the third-party identity verification (IDV) provider (Alloy or Socure). An approval decision will not be emitted unless and until the application is submitted.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstAutomatedReferralDatetime": {
          "description": "UTC datetime of the first automated referral on the application, where the third-party identity verification (IDV) provider (Alloy or Socure) flags the application for manual review by a lender-user. A referral decision will not be made unless and until the application is submitted.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstAutomatedRejectionDatetime": {
          "description": "UTC datetime of the first automated rejection decision on the application emitted by the third-party identity verification (IDV) provider (Alloy or Socure). A rejection decision can be emitted prior to submission if \"adverse action notice\" (AAN) is triggered in the \"Identity Verification\" workflow.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstManualApprovalDatetime": {
          "description": "UTC datetime of the first manual approval decision on the application issued by a lender-user. An application cannot be reviewed or approved unless and until the application is submitted.",
          "example": "2021-07-11T18:30:18.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstManualApprovalReviewerUserId": {
          "description": "Blend user ID of the lender-user who manually approved the application.",
          "example": "78be32d9-fa0f-41da-9a99-ef66bdd2d2a5",
          "type": "string"
        },
        "firstManualApprovalReviewerFullName": {
          "description": "Full name in the user profile of the lender-user who manually approved the application.",
          "example": "Claude Monet",
          "type": "string"
        },
        "firstManualApprovalReviewerEmail": {
          "description": "Email address of the lender-user who manually approved the application.",
          "example": "bigstrokes@impressionism.com",
          "type": "string"
        },
        "firstManualApprovalReviewerBranchId": {
          "description": "Branch ID in the user profile of the lender-user who manually approved the application.",
          "example": "French Countryside",
          "type": "string"
        },
        "firstManualApprovalReviewerEmployeeId": {
          "description": "Employee ID in the user profile of the lender-user who manually approved the application.",
          "example": "5050",
          "type": "string"
        },
        "firstManualApprovalReviewerNmlsId": {
          "description": "Nationwide Multistate Licensing System ID in the user profile of the lender-user who manually approved the application.",
          "example": "096433",
          "type": "string"
        },
        "firstManualRejectionDatetime": {
          "description": "UTC datetime of the first manual rejection decision on the application issued by a lender user. An application cannot be reviewed or rejected unless and until the application is submitted.",
          "example": "2021-07-11T18:34:57.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstManualRejectionReviewerUserId": {
          "description": "Blend user ID of the lender-user who manually rejected the application.",
          "example": "f1e432d6-d7d9-4998-8016-56cca3bcb762",
          "type": "string"
        },
        "firstManualRejectionReviewerFullName": {
          "description": "Full name in the user profile of the lender-user who manually rejected the application.",
          "example": "Banksy",
          "type": "string"
        },
        "firstManualRejectionReviewerEmail": {
          "description": "Email address of the lender-user who manually rejected the application.",
          "example": "mr.e@graffiti.com",
          "type": "string"
        },
        "firstManualRejectionReviewerBranchId": {
          "description": "Branch ID in the user profile of the lender-user who manually rejected the application.",
          "example": "Piccadilly",
          "type": "string"
        },
        "firstManualRejectionReviewerEmployeeId": {
          "description": "Employee ID in the user profile of the lender-user who manually rejected the application.",
          "example": "884411",
          "type": "string"
        },
        "firstManualRejectionReviewerNmlsId": {
          "description": "Nationwide Multistate Licensing System ID in the user profile of the lender-user who manually rejected the application.",
          "example": "884411",
          "type": "string"
        },
        "latestDecisionDatetime": {
          "description": "UTC datetime of the latest decision on the application, automated or manual, approval or rejection. Referrals are not considered true \"decisions\" and thus are ignored by this field.",
          "example": "2021-05-30T02:25:02.000Z",
          "type": "string",
          "format": "date-time"
        },
        "latestDecisionType": {
          "description": "Type, either \"automated\" or \"manual\", of the latest decision on the appliction, approval or rejection. Referrals are not considered true \"decisions\" and thus are ignored by this field.",
          "example": "automated",
          "type": "string"
        },
        "latestDecisionOutcome": {
          "description": "Outcome, either \"approve\" or \"reject\", of the latest decision on the application, automated or manual. Referrals are not considered true \"decisions\" and thus are ignored by this field.",
          "example": "reject",
          "type": "string"
        },
        "latestDecisionReviewerUserId": {
          "description": "Blend user ID of the lender-user who made the latest decision on the application (if manual).",
          "example": "90fc97c9-4fbb-479b-82c7-3b1885510cc6",
          "type": "string"
        },
        "latestDecisionReviewerFullName": {
          "description": "Full name in the user profile of the lender-user who made the latest decision on the application (if manual).",
          "example": "Bob Ross",
          "type": "string"
        },
        "latestDecisionReviewerEmail": {
          "description": "Email address of the lender-user who made the latest decision on the application (if manual).",
          "example": "robert@happylittleclouds.com",
          "type": "string"
        },
        "latestDecisionReviewerBranchId": {
          "description": "Branch ID in the user profile of the lender-user who made the latest decision on the application (if manual).",
          "example": "PBS",
          "type": "string"
        },
        "latestDecisionReviewerEmployeeId": {
          "description": "Employee ID in the user profile of the lender-user who made the latest decision on the application (if manual).",
          "example": "777",
          "type": "string"
        },
        "latestDecisionReviewerNmlsId": {
          "description": "Nationwide Multistate Licensing System ID in the user profile of the lender-user who made the latest decision on the application (if manual).",
          "example": "234264",
          "type": "string"
        },
        "applicationApprovalStatus": {
          "$ref": "#/definitions/ApplicationApprovalStatus"
        },
        "accountBookedToCoreDatetime": {
          "description": "UTC datetime that the newly opened account(s) was successfully booked to the institution's core banking system.",
          "example": "2021-04-08T11:02:29.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationBookingStatus": {
          "$ref": "#/definitions/ApplicationBookingStatus"
        },
        "firstFundingWorkflowEventDatetime": {
          "description": "UTC datetime of the first tracking event in the \"Funding\" workflow.",
          "example": "2021-04-08T11:02:29.000Z",
          "type": "string",
          "format": "date-time"
        },
        "firstOpeningDepositTransactionSubmittedDatetime": {
          "description": "UTC datetime of the first deposit transaction submitted through the \"Opening Deposit\" workflow.",
          "example": "2021-04-08T11:02:29.000Z",
          "type": "string",
          "format": "date-time"
        },
        "numberOfNewAccountsFunded": {
          "description": "Number of newly opened accounts funded with an initial deposit submitted through the \"Opening Deposit\" workflow.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "openingDepositAmounts": {
          "description": "Dollar amount(s) of the opening deposit(s) submitted through the \"Opening Deposit\" workflow, rounded to the nearest increment of 50. This field will contain a comma-separated list of amounts when multiple newly opened accounts that originated from the same application were funded.",
          "example": "1000, 100",
          "type": "string"
        },
        "totalAmountDeposited": {
          "description": "Sum of the dollar amounts (each rounded to the nearest increment of 50 prior to summation) of the opening deposits submitted through the \"Opening Deposit\" workflow; will be the same as the value in openingDepositAmounts if only one new account was funded.",
          "example": 1100,
          "type": "integer",
          "format": "int32"
        },
        "applicationFundingStatus": {
          "$ref": "#/definitions/ApplicationFundingStatus"
        },
        "applicationStatusOverall": {
          "$ref": "#/definitions/ApplicationStatusOverall"
        },
        "applicationLateTouchDatetime": {
          "description": "UTC datetime of when the application was last touched (by either an applicant or a lender-user).",
          "example": "2021-06-01T21:39:48.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationLastTouchedByUserId": {
          "description": "Blend user ID of the applicant or lender-user who last touched the application.",
          "example": "9b194ac0-c6d3-4f01-942d-96da665c207a",
          "type": "string"
        },
        "applicationLastUpdatedDatetime": {
          "description": "UTC datetime of when the application record was last updated by the system.",
          "example": "2021-06-01T21:39:48.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationArchivedDatetime": {
          "description": "UTC datetime of when the application was archived in Blend.",
          "example": "2021-06-01T21:39:48.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationDeletedDatetime": {
          "description": "UTC datetime of when the application was deleted by a user.",
          "example": "2021-06-01T21:39:48.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationPurgedDatetime": {
          "description": "UTC datetime of when the application was purged from Blend production.",
          "example": "2021-06-01T21:39:48.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "asOfDatetime",
        "applicationCreatedDatetime",
        "applicationId"
      ]
    },
    "EventSchema": {
      "title": "EventSchema",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Blend UUID of the event",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "entityId": {
          "description": "A Blend UUID. If this is set, all events for the given entity are returned.",
          "example": "670cefa9-c70e-420f-a77e-53616247ede8",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status13"
        },
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "createdAt": {
          "description": "The UTC timestamp of the event creation. ISO format",
          "example": "2018-08-24T14:08:13.862594+00:00",
          "type": "string"
        },
        "statusSetAt": {
          "description": "The UTC timestamp of the latest status that was posted for the event. ISO format",
          "example": "2018-08-24T14:08:13.862594+00:00",
          "type": "string"
        }
      },
      "required": [
        "eventId",
        "status",
        "eventType",
        "createdAt",
        "statusSetAt"
      ]
    },
    "EventWithDataSchema": {
      "title": "EventWithDataSchema",
      "type": "object",
      "properties": {
        "eventId": {
          "description": "Blend UUID of the event",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "entityId": {
          "description": "A Blend UUID. If this is set, all events for the given entity are returned.",
          "example": "670cefa9-c70e-420f-a77e-53616247ede8",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status13"
        },
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "createdAt": {
          "description": "The UTC timestamp of the event creation. ISO format",
          "example": "2018-08-24T14:08:13.862594+00:00",
          "type": "string"
        },
        "statusSetAt": {
          "description": "The UTC timestamp of the latest status that was posted for the event. ISO format",
          "example": "2018-08-24T14:08:13.862594+00:00",
          "type": "string"
        },
        "eventData": {
          "description": "The original data sent when the event was emitted.",
          "example": {
            "type": "application",
            "action": "updated",
            "solution": "CONSUMER_MORTGAGE",
            "id": "282f3df7-7900-45d5-aafe-b438def61d7c",
            "fields": {
              "solutionSubType": {
                "value": "MORTGAGE"
              }
            },
            "trigger": {
              "triggeredAt": "2018-06-14T15:08:18.356Z",
              "type": "SUBMITTED"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "eventId",
        "status",
        "eventType",
        "createdAt",
        "statusSetAt"
      ]
    },
    "EventDescribePath": {
      "title": "EventDescribePath",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type23"
        },
        "system": {
          "$ref": "#/definitions/System2"
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      },
      "required": [
        "type",
        "system",
        "version"
      ]
    },
    "EventDescribeMetadata": {
      "title": "EventDescribeMetadata",
      "type": "object",
      "properties": {
        "inbound": {
          "$ref": "#/definitions/EventDescribePath"
        },
        "outbound": {
          "$ref": "#/definitions/EventDescribePath"
        },
        "validDecorators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidDecorator"
          }
        }
      },
      "required": [
        "inbound",
        "outbound",
        "validDecorators"
      ]
    },
    "SchemaFlagSchema": {
      "title": "SchemaFlagSchema",
      "type": "object",
      "properties": {
        "presence": {
          "$ref": "#/definitions/Presence"
        },
        "allowUnknown": {
          "description": "Describes whether or not the consumer should allow unknown additional keys or explicitly decline them when parsing an object.",
          "type": "boolean"
        }
      },
      "required": [
        "presence"
      ]
    },
    "EventDescribeChildSchema": {
      "title": "EventDescribeChildSchema",
      "type": "object",
      "properties": {
        "type": {
          "description": "The data type of the child object, which could be an compound or primitive data type.",
          "type": "string"
        },
        "flags": {
          "$ref": "#/definitions/SchemaFlagSchema"
        },
        "invalids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        }
      },
      "required": [
        "type",
        "flags",
        "invalids",
        "rules"
      ]
    },
    "EventDescribeSchemaSchema": {
      "title": "EventDescribeSchemaSchema",
      "description": "A key value pair where the key is the property name and the value is an object defining acceptable values for that property.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The data type of the schema, which can be any primitive or an object.",
          "example": "object",
          "type": "string"
        },
        "flags": {
          "$ref": "#/definitions/SchemaFlagSchema"
        },
        "children": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EventDescribeChildSchema"
          }
        }
      },
      "required": [
        "type",
        "flags",
        "children"
      ]
    },
    "EventDescribeSchema": {
      "title": "EventDescribeSchema",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/EventDescribeMetadata"
        },
        "schema": {
          "$ref": "#/definitions/EventDescribeSchemaSchema"
        }
      },
      "required": [
        "metadata"
      ]
    },
    "EventStatusSchema": {
      "title": "EventStatusSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status13"
        },
        "occurredAt": {
          "description": "The UTC timestamp of the latest status that was posted for the event, in ISO format",
          "example": "2018-08-24T14:08:13.862594+00:00",
          "type": "string"
        }
      },
      "required": [
        "status",
        "occurredAt"
      ]
    },
    "EventStatusRequestSchema": {
      "title": "EventStatusRequestSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status15"
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      },
      "required": [
        "status"
      ]
    },
    "EventInvalidRequestSchema": {
      "title": "EventInvalidRequestSchema",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "example": "Event UUID need to be an valid guid",
          "type": "string"
        },
        "display": {
          "description": "Error message description",
          "example": "Invalid request",
          "type": "string"
        },
        "trackingId": {
          "description": "Provide this to Blend when troubleshooting",
          "example": "5a6defc2-d6e6-4b76-8695-d4dc8bb90d81",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display",
        "trackingId"
      ]
    },
    "EventUnauthorizedSchema": {
      "title": "EventUnauthorizedSchema",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "example": "An error occurred during authentication",
          "type": "string"
        },
        "display": {
          "description": "Error message description",
          "example": "Not authorized",
          "type": "string"
        },
        "trackingId": {
          "description": "Provide this to Blend when troubleshooting",
          "example": "5a6defc2-d6e6-4b76-8695-d4dc8bb90d81",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display",
        "trackingId"
      ]
    },
    "EventMissingObjectSchema": {
      "title": "EventMissingObjectSchema",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "example": "EventId 3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70 does not",
          "type": "string"
        },
        "display": {
          "description": "Error message description",
          "example": "Not Found",
          "type": "string"
        },
        "trackingId": {
          "description": "Provide this to Blend when troubleshooting",
          "example": "5a6defc2-d6e6-4b76-8695-d4dc8bb90d81",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display",
        "trackingId"
      ]
    },
    "EventInternalErrorSchema": {
      "title": "EventInternalErrorSchema",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message",
          "example": "Internal server error",
          "type": "string"
        },
        "display": {
          "description": "Error message description",
          "example": "Internal server error",
          "type": "string"
        },
        "trackingId": {
          "description": "Provide this to Blend when troubleshooting",
          "example": "5a6defc2-d6e6-4b76-8695-d4dc8bb90d81",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display",
        "trackingId"
      ]
    },
    "UnderwritingResultSchema": {
      "title": "UnderwritingResultSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the Underwriting Result in Blend's system.",
          "example": "a140bbf6-695c-4c8a-b150-babd59019193",
          "type": "string"
        },
        "ausProduct": {
          "$ref": "#/definitions/AusProduct"
        },
        "runData": {
          "$ref": "#/definitions/RunData"
        },
        "recommendation": {
          "$ref": "#/definitions/Recommendation"
        },
        "findingsDocId": {
          "description": "The UUID for the document that came with the findings for this AUS run.",
          "example": "cb68ce88-f62f-4538-bec6-320651dc781e",
          "type": "string"
        },
        "runParameters": {
          "$ref": "#/definitions/RunParameters"
        }
      },
      "required": [
        "id",
        "ausProduct"
      ]
    },
    "PostFollowUpSchema": {
      "title": "PostFollowUpSchema",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "ID of the application to add the follow-up to",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PostFollowUpType"
        },
        "comments": {
          "description": "Comments displayed to the party on the follow-up",
          "example": "Please upload the requested document by the end of the week.",
          "type": "string"
        },
        "clientFollowUpReferenceId": {
          "description": "Unique id passed by client for referencing follow-up",
          "example": "internalID-187f5efc-0b82-4480-84a5-e23d8c3c9a32",
          "type": "string"
        },
        "dueDate": {
          "description": "UTC Timestamp of follow-up due date",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "type": "object"
        }
      },
      "required": [
        "applicationId",
        "type",
        "context"
      ]
    },
    "PatchFollowUpSchema": {
      "title": "PatchFollowUpSchema",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status17"
        },
        "comments": {
          "description": "Comments displayed to the party on the follow-up",
          "example": "Please upload the requested document by the end of the week.",
          "type": "string"
        },
        "clientFollowUpReferenceId": {
          "description": "Unique id passed by client for referencing follow-up",
          "example": "internalID-187f5efc-0b82-4480-84a5-e23d8c3c9a32",
          "type": "string"
        },
        "dueDate": {
          "description": "UTC Timestamp of follow-up due date",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "type": "object"
        }
      }
    },
    "FollowUpSchema": {
      "title": "FollowUpSchema",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "applicationId": {
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FollowUpType"
        },
        "status": {
          "$ref": "#/definitions/FollowUpStatus"
        },
        "comments": {
          "description": "Comments displayed to the party on the follow-up",
          "example": "Please upload the requested document by the end of the week.",
          "type": "string"
        },
        "clientFollowUpReferenceId": {
          "description": "Unique id passed by client for referencing follow-up",
          "example": "internalID-187f5efc-0b82-4480-84a5-e23d8c3c9a32",
          "type": "string"
        },
        "dueDate": {
          "description": "UTC Timestamp of follow-up due date",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "requestedAt": {
          "description": "UTC Timestamp of when the follow-up was requested",
          "example": "2018-07-31T00:00:00+00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "requestedBy": {
          "description": "The ID of the user that requested the follow-up, or 'SYSTEM' for automatically requested follow-ups",
          "type": "string"
        },
        "context": {
          "type": "object"
        }
      },
      "required": [
        "id",
        "applicationId",
        "type",
        "status",
        "requestedAt",
        "requestedBy",
        "context"
      ]
    },
    "Defaultcontext": {
      "title": "Defaultcontext",
      "description": "Default required context for creating follow-ups",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            }
          },
          "required": [
            "partyId"
          ]
        }
      ]
    },
    "Defaultcontext1": {
      "title": "Defaultcontext1",
      "description": "Default context for follow-ups",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "documents": {
              "description": "Documents uploaded by the borrower to complete this follow-up",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentFollowUpSubContext"
              }
            }
          },
          "required": [
            "partyId"
          ]
        }
      ]
    },
    "DOCUMENT_REQUEST": {
      "title": "DOCUMENT_REQUEST",
      "description": "Required context for creating follow-ups of type 'DOCUMENT_REQUEST'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "document": {
              "$ref": "#/definitions/Document"
            }
          },
          "required": [
            "partyId",
            "document"
          ]
        }
      ]
    },
    "DOCUMENT_REQUEST1": {
      "title": "DOCUMENT_REQUEST1",
      "description": "Optional context for patching follow-ups of type 'DOCUMENT_REQUEST'",
      "type": "object",
      "properties": {
        "document": {
          "$ref": "#/definitions/Document3"
        }
      }
    },
    "DOCUMENT_REQUEST2": {
      "title": "DOCUMENT_REQUEST2",
      "description": "Context returned on follow-ups of type 'DOCUMENT_REQUEST'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "document": {
              "$ref": "#/definitions/Document5"
            }
          },
          "required": [
            "partyId",
            "document"
          ]
        }
      ]
    },
    "DOCUMENT_SIGNATURE": {
      "title": "DOCUMENT_SIGNATURE",
      "description": "Required context for creating follow-ups of type 'DOCUMENT_SIGNATURE.' `document.id` should not be re-used between follow-ups on the same application.",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "document": {
              "$ref": "#/definitions/Document1"
            }
          },
          "required": [
            "document"
          ]
        }
      ]
    },
    "DOCUMENT_SIGNATURE1": {
      "title": "DOCUMENT_SIGNATURE1",
      "description": "Optional context for patching follow-ups of type 'DOCUMENT_SIGNATURE'",
      "type": "object",
      "properties": {
        "document": {
          "$ref": "#/definitions/Document4"
        }
      }
    },
    "DOCUMENT_SIGNATURE2": {
      "title": "DOCUMENT_SIGNATURE2",
      "description": "Context returned on follow-ups of type 'DOCUMENT_SIGNATURE'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "document": {
              "$ref": "#/definitions/Document6"
            }
          },
          "required": [
            "document"
          ]
        }
      ]
    },
    "REVIEW_DOCUMENTS1": {
      "title": "REVIEW_DOCUMENTS1",
      "description": "Optional context for patching follow-ups of type 'REVIEW_DOCUMENTS'",
      "type": "object",
      "properties": {
        "title": {
          "description": "Review documents follow-up display title.",
          "example": "Custom title",
          "type": "string"
        }
      }
    },
    "REVIEW_DOCUMENTS": {
      "title": "REVIEW_DOCUMENTS",
      "description": "Required context for follow-ups of type 'REVIEW_DOCUMENTS'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "documents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Document2"
              }
            },
            "title": {
              "description": "Review documents follow-up display title.",
              "example": "Review custom document",
              "type": "string"
            }
          },
          "required": [
            "partyId",
            "documents"
          ]
        }
      ]
    },
    "PAYMENT_COLLECTION1": {
      "title": "PAYMENT_COLLECTION1",
      "description": "Optional context for patching follow-ups of type 'PAYMENT_COLLECTION'",
      "type": "object",
      "properties": {
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentCollectionLineItem"
          }
        },
        "title": {
          "description": "Payment collection follow-up display title.",
          "example": "Custom title",
          "type": "string"
        }
      }
    },
    "PAYMENT_COLLECTION": {
      "title": "PAYMENT_COLLECTION",
      "description": "Required context for follow-ups of type 'PAYMENT_COLLECTION'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "lineItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentCollectionLineItem"
              }
            },
            "title": {
              "description": "Payment collection follow-up display title.",
              "example": "Custom title",
              "type": "string"
            }
          },
          "required": [
            "partyId",
            "lineItems"
          ]
        }
      ]
    },
    "PaymentCollectionLineItem": {
      "title": "PaymentCollectionLineItem",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "title",
        "value"
      ]
    },
    "TAX_RETURN": {
      "title": "TAX_RETURN",
      "description": "Required context for creating follow-ups of type 'TAX_RETURN'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "taxReturnYear": {
              "example": 2018,
              "type": "number",
              "format": "double"
            }
          },
          "required": [
            "partyId",
            "taxReturnYear"
          ]
        }
      ]
    },
    "TAX_RETURN1": {
      "title": "TAX_RETURN1",
      "description": "Context returned on follow-ups of type 'TAX_RETURN'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "taxReturnYear": {
              "example": 2018,
              "type": "number",
              "format": "double"
            },
            "documents": {
              "description": "Documents uploaded by the borrower to complete this follow-up",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentFollowUpSubContext"
              }
            }
          },
          "required": [
            "partyId",
            "taxReturnYear"
          ]
        }
      ]
    },
    "TAX_TRANSCRIPTS": {
      "title": "TAX_TRANSCRIPTS",
      "description": "Required context for creating follow-ups of type 'TAX_TRANSCRIPTS'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "taxTranscriptYears": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "required": [
            "partyId",
            "taxTranscriptYears"
          ]
        }
      ]
    },
    "TAX_TRANSCRIPTS1": {
      "title": "TAX_TRANSCRIPTS1",
      "description": "Context returned on follow-ups of type 'TAX_TRANSCRIPTS'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "taxTranscriptYears": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "documents": {
              "description": "Documents uploaded by the borrower to complete this follow-up",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentFollowUpSubContext"
              }
            }
          },
          "required": [
            "partyId",
            "taxTranscriptYears"
          ]
        }
      ]
    },
    "W2": {
      "title": "W2",
      "description": "Required context for creating follow-ups of type 'W2'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "w2Year": {
              "example": 2019,
              "type": "number",
              "format": "double"
            }
          },
          "required": [
            "partyId",
            "w2Year"
          ]
        }
      ]
    },
    "W21": {
      "title": "W21",
      "description": "Context returned on follow-ups of type 'W2'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "w2Year": {
              "example": 2019,
              "type": "number",
              "format": "double"
            }
          },
          "required": [
            "partyId"
          ]
        }
      ]
    },
    "SYSTEM": {
      "title": "SYSTEM",
      "description": "Context returned on follow-ups of type 'SYSTEM'",
      "allOf": [
        {
          "$ref": "#/definitions/Context"
        },
        {
          "type": "object",
          "properties": {
            "partyId": {
              "type": "string"
            },
            "description": {
              "example": "Large Deposit: Income supporting documentation",
              "type": "string"
            }
          },
          "required": [
            "partyId"
          ]
        }
      ]
    },
    "FollowUpStatus": {
      "title": "FollowUpStatus",
      "description": "Follow-up statuses\n* **REQUESTED** - Follow-up has been requested and is awaiting completion by the borrower\n* **IN_PROGRESS** - Follow-up has been started by at least one borrower\n* **COMPLETED** - Follow-up has been completed by the borrower and if a document request, reviewed and accepted by the lender in the Blend lender UI.\n* **COMPLETED_EXTERNALLY** - Follow-up has been marked as completed externally in the Blend lender UI\n* **PENDING_REVIEW** - Follow-up has been completed by the borrower and can be reviewed and accepted or rejected by the lender in the Blend lender UI\n* **REJECTED** - Follow-up has been completed by the borrower and was reviewed and rejected by the lender in the Blend lender UI",
      "example": "REQUESTED",
      "type": "string",
      "enum": [
        "REQUESTED",
        "IN_PROGRESS",
        "COMPLETED",
        "COMPLETED_EXTERNALLY",
        "PENDING_REVIEW",
        "REJECTED"
      ]
    },
    "PostFollowUpType": {
      "title": "PostFollowUpType",
      "description": "Types of follow-ups that can be created",
      "example": "DOCUMENT_REQUEST",
      "type": "string",
      "enum": [
        "DOCUMENT_REQUEST",
        "DOCUMENT_SIGNATURE",
        "ASSET_STATEMENTS",
        "PAYMENT_COLLECTION",
        "PAYSTUBS",
        "REVIEW_DOCUMENTS",
        "TAX_RETURN",
        "TAX_TRANSCRIPTS",
        "W2"
      ]
    },
    "FollowUpType": {
      "title": "FollowUpType",
      "description": "Types of follow-ups that can be returned. This is a superset of FollowUpType that includes the 'SYSTEM' follow-up type corresponding to follow-ups that were requested by Blend automatically, and the 'DOCUMENT_WET_SIGNATURE' follow-up type which is the type of wet-sign follow-ups issued when an external e-sign ('DOCUMENT_SIGNATURE' type) follow-up request fails.",
      "example": "DOCUMENT_REQUEST",
      "type": "string",
      "enum": [
        "DOCUMENT_REQUEST",
        "DOCUMENT_SIGNATURE",
        "DOCUMENT_WET_SIGNATURE",
        "ASSET_STATEMENTS",
        "PAYMENT_COLLECTION",
        "PAYSTUBS",
        "REVIEW_DOCUMENTS",
        "TAX_RETURN",
        "TAX_TRANSCRIPTS",
        "W2",
        "SYSTEM"
      ]
    },
    "PostDocumentType": {
      "title": "PostDocumentType",
      "description": "Valid document types for creating a follow-up of type 'DOCUMENT_REQUEST'",
      "example": "1003",
      "type": "string",
      "enum": [
        "1003",
        "4506t",
        "ACHDEBIT_AUTHORIZATION",
        "ADDRESS_VERIFICATION",
        "AFFILIATED_BUSINESS_ARRANGEMENT_DISCLOSURE",
        "ALIMONY_INCOME",
        "ALIMONY_LIABILITY",
        "APPRAISAL",
        "APPRAISAL_WAIVER",
        "ARTICLES_OF_INCORPORATION",
        "BANKRUPTCY_DISCHARGE_NOTICE",
        "BANKRUPTCY_FILING",
        "BANK_DEPOSIT_SLIP",
        "BANK_STATEMENT",
        "BANK_STATEMENT:_MUTUAL_FUND_ACCOUNT",
        "BANK_STATEMENT:_STOCK_ACCOUNT",
        "BIRTH_CERTIFICATE",
        "BONUS_AND_COMMISSION_DOCUMENTATION",
        "BORROWER_CERTIFICATION",
        "BORROWER_CONSENT_FORM",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_CASHOUT",
        "BORROWER_CORRESPONDENCE:_LETTER_OF_EXPLANATION_OCCUPANCY",
        "BORROWER_INCOME_VERIFICATION_CONSENT_FORM",
        "BUSINESS_LICENSE",
        "BYLAWS_OPERATING_AGREEMENT",
        "CHILD_SUPPORT_INCOME",
        "CHILD_SUPPORT_LIABILITY",
        "CLOSING_DISCLOSURE",
        "COSIGNED_LIABILITY",
        "CREDIT_CARD_AUTHORIZATION",
        "CREDIT_REPORT",
        "DD_214",
        "DEATH_CERTIFICATE",
        "DIVORCE_DECREE",
        "EARNEST_MONEY_DEPOSIT",
        "EMPLOYMENT_CONTRACT",
        "EMPLOYMENT_OFFER_LETTER",
        "ESCROW_WAIVER",
        "FAIR_LENDING_NOTICE",
        "FINANCIAL_STATEMENT:_BALANCE_SHEET",
        "FINANCIAL_STATEMENT:_INCOME",
        "FLOOD_CERTIFICATION",
        "FLOOD_HAZARD_NOTICE",
        "FOR_YOUR_PROTECTION_HOME_INSPECTION",
        "GENERAL_LOAN_ACKNOWLEDGMENT",
        "GENERATED_ASSET_STATEMENT",
        "GIFT_LETTER",
        "GOOD_FAITH_ESTIMATE",
        "HOA_BILL",
        "HOMEOWNERS_ASSOCIATION_CERTIFICATION",
        "HOME_INSPECTION_REPORT",
        "HUD_VA_ADDENDUM",
        "IMPORTANT_NOTICE_TO_HOMEBUYER",
        "INSURANCE_AGENT_CONTACT_INFO",
        "INTENT_TO_PROCEED",
        "INVOICE_UTILITY_BILL",
        "IRS1041",
        "IRS1065",
        "IRS1099",
        "IRS1120",
        "IRS1120_S",
        "JUDGMENT",
        "K1",
        "LETTER_OF_EXPLANATION:_ADDRESS_VERIFICATION",
        "LETTER_OF_EXPLANATION:_CREDIT_INQUIRY",
        "LETTER_OF_EXPLANATION:_DEROGATORY_CREDIT",
        "LETTER_OF_EXPLANATION:_JOB_GAP",
        "LETTER_OF_EXPLANATION:_LARGE_DEPOSITS",
        "LETTER_OF_EXPLANATION_NAME_VARIATION",
        "LETTER_OF_EXPLANATION:SHORT_SALE",
        "LLC_BTR_DOC",
        "LOAN_ESTIMATE",
        "MARRIAGE_CERTIFICATE",
        "MEDICAL_LICENSE_DIPLOMA",
        "MEDICAL_RESIDENCY_FELLOWSHIP",
        "MORTGAGE_STATEMENT",
        "NATIONAL_IDENTIFICATION",
        "NATIONAL_IDENTIFICATION:_SOCIAL_SECURITY_CARD",
        "NATIONAL_IDENTIFICATION_NON_PERMANENT_RESIDENT",
        "NEAREST_LIVING_RELATIVE",
        "NOTE",
        "OCCUPANCY_CERTIFICATION",
        "OTHER",
        "PASSPORT",
        "PAYOFF_STATEMENT",
        "PERMANENT_RESIDENT_IDENTIFICATION",
        "PEST_INSPECTION_REPORT",
        "POOL_INSPECTION_REPORT",
        "POWER_OF_ATTORNEY",
        "PRE_APPROVAL_LETTER",
        "PRE_APPROVAL_LETTER:_PREVIEW",
        "PROOF_OF_LIQUIDATION",
        "PROPERTY_INSURANCE_POLICY:_CONDOMINIUM",
        "PROPERTY_INSURANCE_POLICY:_FLOOD",
        "PROPERTY_INSURANCE_POLICY:_GENERAL",
        "PROPERTY_INSURANCE_POLICY:_HAZARD",
        "PROPERTY_INSURANCE_POLICY:_HOMEOWNERS",
        "PROPERTY_INSURANCE_POLICY:_HURRICANE",
        "PROPERTY_INSURANCE_POLICY:_INSECT_INFESTATION",
        "PROPERTY_INSURANCE_POLICY:_LEASEHOLD",
        "PROPERTY_INSURANCE_POLICY:_MASTERPOLICY_ASSN",
        "PROPERTY_INSURANCE_POLICY:_MINE_SUBSIDENCE",
        "PROPERTY_INSURANCE_POLICY:_PERSONAL_PROPERTY",
        "PROPERTY_INSURANCE_POLICY:_STORM",
        "PROPERTY_INSURANCE_POLICY:_TORNADO",
        "PROPERTY_INSURANCE_POLICY:_VOLCANO",
        "PROPERTY_INSURANCE_POLICY:_WIND",
        "PROPERTY_TAX_BILL",
        "PURCHASE_AGREEMENT",
        "PURCHASE_AGREEMENT_ADDENDUM",
        "RATE_LOCK_AGREEMENT",
        "RENTAL_AGREEMENT",
        "RENTAL_INCOME_PROOF_OF_RECEIPT",
        "RENTAL_SECURITY_DEPOSIT",
        "REQUEST_FOR_COPY_OF_TAX_RETURN:_IRS4506_T",
        "RESIDUAL_INCOME_LETTER",
        "RETIREMENT_ACCOUNT_STATEMENT",
        "RETIREMENT_AWARD_LETTER",
        "RETIREMENT_LIQUIDITY_TERMS",
        "ROOF_INSPECTION_REPORT",
        "SATISFACTION_OF_SECURITY_INSTRUMENT_LIEN_RELEASE",
        "SETTLEMENT_STATEMENT_HUD1",
        "SOCIAL_SECURITY_PROOF_OF_RECEIPT",
        "STATEMENT_CREDIT_CARD_OR_INSTALLMENT_ACCT",
        "TAX_TRANSCRIPT",
        "TRUST_AGREEMENT",
        "VA_AWARD_LETTER",
        "VA_CHILD_CARE_CERTIFICATE",
        "VA_CERTIFICATE_OF_ELIGIBILITY",
        "VA_STATEMENT_OF_SERVICE",
        "VERIFICATION_OF_EMPLOYMENT_LETTER",
        "VERIFICATION_OF_MORTGAGE",
        "VERIFICATION_OF_RENT",
        "VERIFICATION_OF_SSN",
        "VISA"
      ]
    },
    "AssetsSummarySchema": {
      "title": "AssetsSummarySchema",
      "description": "Summary of Assets data on an application",
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetsAccountSummarySchema"
          }
        }
      },
      "required": [
        "accounts"
      ]
    },
    "AssetsAccountSummarySchema": {
      "title": "AssetsAccountSummarySchema",
      "description": "Summary of an Assets Account on an application",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the an Asset account in Blend's system.",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "partyIds": {
          "description": "Ids of parties that own this account, as stated in the application. This is not guaranteed to match account ownership data retrieved from data providers for Connected Assets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "institutionName": {
          "description": "The name of the financial institution that holds this account.",
          "example": "Wells Fargo",
          "type": "string"
        },
        "accountType": {
          "$ref": "#/definitions/AssetAccountType"
        },
        "accountNumberLastFour": {
          "description": "The last four digits of the account number.",
          "example": "1234",
          "type": "string"
        },
        "connectionStatus": {
          "$ref": "#/definitions/ConnectionStatusType"
        },
        "lastRefresh": {
          "$ref": "#/definitions/LastRefresh"
        }
      },
      "required": [
        "id",
        "partyIds",
        "institutionName",
        "accountType",
        "accountNumberLastFour",
        "connectionStatus"
      ]
    },
    "AssetAccountType": {
      "title": "AssetAccountType",
      "description": "The type of an asset account",
      "example": "Savings",
      "type": "string",
      "enum": [
        "Checking",
        "Brokerage",
        "Retirement",
        "Savings",
        "Trust",
        "Certificate of Deposit",
        "Money Market",
        "Annuity",
        "Other",
        "Unknown",
        "Mutual Fund",
        "Stocks",
        "Stock Options",
        "Bonds",
        "Bridge Loan Proceeds",
        "Individual Development Account",
        "Cash Value of Life Insurance",
        "Chequing",
        "Stocks/Bond/Mutual",
        "RRSP"
      ]
    },
    "ConnectionStatusType": {
      "title": "ConnectionStatusType",
      "description": "Connection Status of an Assets account\n* **CONNECTED** - This account was originally connected to through a data provider. Refreshes will result in us attempting to pull updated data from our data provider and generating an updated Asset statement. We may also attempt to pull an Asset statement from the financial institution directly.\n* **NOT_CONNECTED** - This account was originally not connected to. Refreshes will result in us issuing an Account Statements follow-up\n* **LOCKED** - This account was originally connected to while using multi-factor authentication. Refreshes will result in us issuing an Updated Assets follow-up for the owner to re-connect.",
      "example": "CONNECTED",
      "type": "string",
      "enum": [
        "CONNECTED",
        "NOT_CONNECTED",
        "LOCKED"
      ]
    },
    "AccountRefreshStatusType": {
      "title": "AccountRefreshStatusType",
      "description": "Outcome of an Assets refresh attempt\n* **GAS_GENERATED** - We were able to pull updated structured data from our data provider and generate a new Asset statement.\n* **FINANCIAL_STATEMENT_PULLED** - An updated Asset statement PDF from pulled from the financial institution, however we failed to pull structured data and cannot provide Rep & Warrant relief for these Assets.\n* **UPDATED_ASSETS_FOLLOW_UP_ISSUED** - An application follow-up was issued to ask the account owner to log back into their financial institution in order to pull updated Assets data.\n* **MANUAL_UPLOAD_FOLLOW_UP_ISSUED** - An application follow-up was issued to ask the account owner to manually upload updated Asset statements.\n* **ERROR** - There was an internal issue while trying to refresh Assets, resulting in no outcome",
      "example": "GAS_GENERATED",
      "type": "string",
      "enum": [
        "GAS_GENERATED",
        "FINANCIAL_STATEMENT_PULLED",
        "UPDATED_ASSETS_FOLLOW_UP_ISSUED",
        "MANUAL_UPLOAD_FOLLOW_UP_ISSUED",
        "ERROR"
      ]
    },
    "TaxTranscriptsSchema": {
      "title": "TaxTranscriptsSchema",
      "description": "Structured data for 4506T form",
      "type": "object",
      "properties": {
        "years": {
          "description": "List of years associated with 4506T form",
          "example": [
            2019,
            2018
          ],
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "filingStatus": {
          "$ref": "#/definitions/FilingStatus"
        },
        "filingAddress": {
          "$ref": "#/definitions/AddressSchema"
        },
        "filers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxTranscriptFilerSchema"
          }
        }
      }
    },
    "TaxTranscriptFilerSchema": {
      "title": "TaxTranscriptFilerSchema",
      "description": "Tax transcript filer information",
      "type": "object",
      "properties": {
        "partyId": {
          "description": "The UUID of the party in Blend's system. Equivalent to borrowerId",
          "example": "592e17e5-0392-41e5-aca3-b0351914e60d",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        }
      },
      "required": [
        "name"
      ]
    },
    "PackageType": {
      "title": "PackageType",
      "description": "Package type",
      "example": "CLOSING_DISCLOSURE",
      "type": "string",
      "enum": [
        "INITIAL_LOAN_ESTIMATE",
        "REVISED_LOAN_ESTIMATE",
        "CLOSING_DISCLOSURE",
        "REVISED_CLOSING_DISCLOSURE",
        "OTHER_DISCLOSURE",
        "DOCUMENT_PACKAGE"
      ]
    },
    "PackagePostSchema": {
      "title": "PackagePostSchema",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The Blend application UUID",
          "example": "b2006a70-a19c-4b9f-973d-3a561e159061",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PackageType"
        },
        "foreignPackageId": {
          "description": "External package id provided by partner",
          "example": "b2006f70-a19c-4b9f-973d-3a561e159061",
          "type": "string"
        },
        "name": {
          "description": "An optional name for the package",
          "example": "Closing Disclosure",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the package",
          "example": "Closing Disclosure with exceptions",
          "type": "string"
        },
        "dueDate": {
          "description": "The ISO timestamp of when the package is due",
          "example": "2020-04-19T02:35:00.789Z",
          "type": "string"
        },
        "envelopes": {
          "description": "An envelope describes the signing strategy and the recipient assignment within the package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Envelope"
          },
          "minItems": 1
        }
      },
      "required": [
        "applicationId",
        "type",
        "envelopes"
      ]
    },
    "WET_SIGN": {
      "title": "WET_SIGN",
      "type": "object",
      "properties": {
        "providerType": {
          "example": "WET_SIGN",
          "type": "string",
          "default": "WET_SIGN"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WetsignEnvelopesRecipientPostSchema"
          }
        }
      },
      "required": [
        "providerType",
        "recipients"
      ]
    },
    "ESIGN": {
      "title": "ESIGN",
      "type": "object",
      "properties": {
        "providerType": {
          "example": "ESIGN",
          "type": "string",
          "default": "ESIGN"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESignEnvelopesRecipientPostSchema"
          }
        }
      },
      "required": [
        "providerType",
        "recipients"
      ]
    },
    "REVIEW": {
      "title": "REVIEW",
      "type": "object",
      "properties": {
        "providerType": {
          "example": "REVIEW",
          "type": "string",
          "default": "REVIEW"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewEnvelopeRecipientPostSchema"
          }
        }
      },
      "required": [
        "providerType",
        "recipients"
      ]
    },
    "EnvelopesRecipientPostSchema": {
      "title": "EnvelopesRecipientPostSchema",
      "type": "object",
      "properties": {
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "ESignEnvelopesRecipientPostSchema": {
      "title": "ESignEnvelopesRecipientPostSchema",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/EsignMetadataSchema"
        },
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "WetsignEnvelopesRecipientPostSchema": {
      "title": "WetsignEnvelopesRecipientPostSchema",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/WetsignPostMetadataSchema"
        },
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "ReviewEnvelopeRecipientPostSchema": {
      "title": "ReviewEnvelopeRecipientPostSchema",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ReviewPostMetadataSchema"
        },
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "EnvelopesRecipientResponseSchema": {
      "title": "EnvelopesRecipientResponseSchema",
      "type": "object",
      "properties": {
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        },
        "partyType": {
          "$ref": "#/definitions/PartyType"
        },
        "status": {
          "$ref": "#/definitions/Status18"
        },
        "metadata": {
          "type": "object"
        }
      },
      "required": [
        "partyId",
        "partyType",
        "status",
        "metadata"
      ]
    },
    "WetsignPostMetadataSchema": {
      "title": "WetsignPostMetadataSchema",
      "type": "object",
      "properties": {
        "documentIds": {
          "description": "List of Blend document UUIDs provided when uploading a document",
          "example": [
            "9250f84b-c2a1-4cab-b265-bd720485c361"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "documentIds"
      ]
    },
    "WetsignResponseMetadataSchema": {
      "title": "WetsignResponseMetadataSchema",
      "type": "object",
      "properties": {
        "viewedAt": {
          "description": "ISO timestamp",
          "type": "string"
        },
        "viewedIP": {
          "type": "string"
        },
        "signedAt": {
          "description": "ISO timestamp",
          "type": "string"
        },
        "signedIP": {
          "type": "string"
        },
        "documentIds": {
          "description": "List of Blend document UUIDs provided when uploading a document",
          "example": [
            "9250f84b-c2a1-4cab-b265-bd720485c361"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "documentIds"
      ]
    },
    "EsignMetadataSchema": {
      "title": "EsignMetadataSchema",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document7"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "EsignBaseTabAttributesSchema": {
      "title": "EsignBaseTabAttributesSchema",
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/Attributes10"
        }
      },
      "required": [
        "attributes"
      ]
    },
    "SignHereTab": {
      "title": "SignHereTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "signHere",
          "type": "string",
          "default": "signHere"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes"
        }
      },
      "required": [
        "type"
      ]
    },
    "ApproveTab": {
      "title": "ApproveTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "approve",
          "type": "string",
          "default": "approve"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes1"
        }
      },
      "required": [
        "type"
      ]
    },
    "DateSignedTab": {
      "title": "DateSignedTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "dateSigned",
          "type": "string",
          "default": "dateSigned"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes2"
        }
      },
      "required": [
        "type"
      ]
    },
    "CheckboxTab": {
      "title": "CheckboxTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "checkbox",
          "type": "string",
          "default": "checkbox"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes3"
        }
      },
      "required": [
        "type"
      ]
    },
    "TextTab": {
      "title": "TextTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "text",
          "type": "string",
          "default": "text"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes4"
        }
      },
      "required": [
        "type"
      ]
    },
    "RadioGroupTab": {
      "title": "RadioGroupTab",
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/Attributes5"
        },
        "type": {
          "example": "radioGroup",
          "type": "string",
          "default": "radioGroup"
        }
      },
      "required": [
        "attributes",
        "type"
      ]
    },
    "InitialHereTab": {
      "title": "InitialHereTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "initialHere",
          "type": "string",
          "default": "initialHere"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes"
        }
      },
      "required": [
        "type"
      ]
    },
    "DateTab": {
      "title": "DateTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "date",
          "type": "string",
          "default": "date"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes7"
        }
      },
      "required": [
        "type"
      ]
    },
    "NoteTab": {
      "title": "NoteTab",
      "type": "object",
      "properties": {
        "type": {
          "example": "note",
          "type": "string",
          "default": "note"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes8"
        }
      },
      "required": [
        "type"
      ]
    },
    "EsignExtractTabExpereAcroformSchema": {
      "title": "EsignExtractTabExpereAcroformSchema",
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "The name of the acroField from which to extract an Esign tab",
          "example": "SIG_Borrower_1_C1000788803_true_1",
          "type": "string"
        },
        "required": {
          "description": "True if the tab is required to be completed by the recipient in Docusign, false if it is optional. Defaults to true.",
          "example": true,
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "fieldName"
      ]
    },
    "ReviewPostMetadataSchema": {
      "title": "ReviewPostMetadataSchema",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document8"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "ReviewResponseMetadataSchema": {
      "title": "ReviewResponseMetadataSchema",
      "type": "object",
      "properties": {
        "reviewTracking": {
          "$ref": "#/definitions/ReviewTracking"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document8"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "PackageResponseSchema": {
      "title": "PackageResponseSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Blend package UUID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159061",
          "type": "string"
        },
        "applicationId": {
          "description": "The Blend application UUID",
          "example": "b2006a70-a19c-4b9f-973d-3a561e159061",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PackageType"
        },
        "name": {
          "description": "A name for the package",
          "example": "Closing Disclosure",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the package",
          "example": "Optional description",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status18"
        },
        "dueDate": {
          "description": "The ISO timestamp of when the lender has indicated a package is due",
          "example": "2020-04-19T02:35:00.789Z",
          "type": "string"
        },
        "paperedAt": {
          "description": "The ISO timestamp of when the lender decides to mail a package and not pursue electronic delivery",
          "example": "2020-04-19T02:35:00.789Z",
          "type": "string"
        },
        "foreignPackageId": {
          "description": "External package id provided by partner",
          "example": "b2006f70-a19c-4b9f-973d-3a561e159061",
          "type": "string"
        },
        "envelopes": {
          "description": "An envelope describes the signing strategy and the recipient assignment within the package",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvelopeResponseSchema"
          }
        }
      },
      "required": [
        "id",
        "applicationId",
        "type",
        "status",
        "envelopes"
      ]
    },
    "EnvelopeResponseSchema": {
      "title": "EnvelopeResponseSchema",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Blend envelope UUID",
          "example": "b2996a70-a19b-4b7f-973d-3a561e159061",
          "type": "string"
        },
        "providerId": {
          "description": "A Blend provided UUID for providerType ESIGN, SSO_SAML, and DIRECT_LINK envelopes",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159061",
          "type": "string"
        },
        "providerType": {
          "$ref": "#/definitions/ProviderType1"
        },
        "signatureRequired": {
          "example": true,
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/Status18"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvelopesRecipientResponseSchema"
          }
        }
      },
      "required": [
        "id",
        "providerType",
        "signatureRequired",
        "status",
        "recipients"
      ]
    },
    "AssetsRefreshRequestSchema": {
      "title": "AssetsRefreshRequestSchema",
      "description": "Parameters for an Assets Refresh request",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "accountIds": {
          "description": "These are the accounts that a refresh will be initiated for. When an applicationId is provided, the accounts refreshed must be part of the specified application.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "applicationId",
        "accountIds"
      ]
    },
    "Closing": {
      "title": "Closing",
      "type": "object",
      "properties": {
        "id": {
          "description": "Record ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation Date",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "closingType": {
          "$ref": "#/definitions/ClosingType"
        },
        "closingParties": {
          "description": "List of closing parties associated with the closing.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClosingParty"
          }
        },
        "closingStart": {
          "description": "Closing start timestamp",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "closingEnd": {
          "description": "Closing end timestamp",
          "example": "2019-10-30T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "documentReferences": {
          "description": "List of closing documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClosingDocumentReference"
          }
        },
        "closingStatus": {
          "$ref": "#/definitions/ClosingStatus"
        },
        "lastSentAt": {
          "description": "Timestamp reflecting when the closing was last sent",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "specialInstructions": {
          "description": "Special closing instructions",
          "example": "Please wet-sign the Closing Disclosure.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "createdAt",
        "applicationId",
        "closingType",
        "closingParties",
        "documentReferences",
        "closingStatus"
      ]
    },
    "ClosingBaseRecord": {
      "title": "ClosingBaseRecord",
      "description": "Base Closing Record",
      "type": "object",
      "properties": {
        "id": {
          "description": "Record ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation Date",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "createdAt"
      ]
    },
    "ClosingType": {
      "title": "ClosingType",
      "description": "The type of closing",
      "example": "RON",
      "type": "string",
      "enum": [
        "RON",
        "HYBRID",
        "TRADITIONAL",
        "UNDETERMINED"
      ]
    },
    "ClosingPartyPatchRequest": {
      "title": "ClosingPartyPatchRequest",
      "description": "Information about a closing party.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address of the closing party",
          "example": "johnhernandez@mail.com",
          "type": "string"
        },
        "partyType": {
          "$ref": "#/definitions/ClosingPartyType"
        },
        "firstName": {
          "description": "First name of the closing party",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name of the closing party",
          "example": "Hernandez",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the closing party",
          "example": "4153334444",
          "type": "string"
        },
        "agencyName": {
          "description": "Name of the closing party's agency",
          "example": "Title Co.",
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "ClosingPartyType": {
      "title": "ClosingPartyType",
      "description": "The closing party type",
      "example": "TITLE",
      "type": "string",
      "enum": [
        "SETTLEMENT",
        "TITLE",
        "ATTORNEY",
        "CLOSER",
        "SUPPORTING_PARTY"
      ]
    },
    "ClosingParty": {
      "title": "ClosingParty",
      "description": "Information about a closing party.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Record ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation Date",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "description": "Email address of the closing party",
          "example": "johnhernandez@mail.com",
          "type": "string"
        },
        "partyType": {
          "$ref": "#/definitions/ClosingPartyType"
        },
        "firstName": {
          "description": "First name of the closing party",
          "example": "John",
          "type": "string"
        },
        "lastName": {
          "description": "Last name of the closing party",
          "example": "Hernandez",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the closing party",
          "example": "4153334444",
          "type": "string"
        },
        "principalId": {
          "description": "The ID of the record in Blend’s identity service that corresponds to this party",
          "example": "d74468a2-ca1a-415c-b985-ed6012bd4d0d",
          "type": "string"
        },
        "agency": {
          "$ref": "#/definitions/ClosingAgency"
        }
      },
      "required": [
        "id",
        "createdAt",
        "email",
        "partyType",
        "firstName",
        "lastName"
      ]
    },
    "ClosingAgency": {
      "title": "ClosingAgency",
      "description": "Name of the agency associated with a closing party.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Record ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation Date",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "description": "Agency name",
          "example": "Title Co.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "createdAt",
        "name"
      ]
    },
    "ClosingDocumentReference": {
      "title": "ClosingDocumentReference",
      "type": "object",
      "properties": {
        "id": {
          "description": "Record ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation Date",
          "example": "2019-10-29T04:25:30.000Z",
          "type": "string",
          "format": "date-time"
        },
        "documentID": {
          "description": "Document ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "documentType": {
          "$ref": "#/definitions/DocumentType"
        },
        "sourceType": {
          "$ref": "#/definitions/ClosingSourceType"
        },
        "closingDesignation": {
          "$ref": "#/definitions/ClosingDesignationResponse"
        }
      },
      "required": [
        "id",
        "createdAt",
        "documentID",
        "sourceType",
        "closingDesignation"
      ]
    },
    "ClosingDocumentRecipients": {
      "title": "ClosingDocumentRecipients",
      "type": "object",
      "properties": {
        "partyId": {
          "description": "Party UUID of signer.",
          "example": "fecbc83e-7fd2-421d-b21d-3b5634d5c5f0",
          "type": "string"
        },
        "tabExtractionMethod": {
          "$ref": "#/definitions/TabExtractionMethod1"
        },
        "extractTabs": {
          "description": "If additional information is required for tab extraction (which it is for `EXPERE_ACROFORM` documents), include it in `extractTabs`.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EsignExtractTabExpereAcroformSchema"
          }
        },
        "tabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tab"
          }
        }
      },
      "required": [
        "partyId"
      ]
    },
    "ClosingSourceType": {
      "title": "ClosingSourceType",
      "description": "The source type",
      "example": "LENDER",
      "type": "string",
      "enum": [
        "LENDER",
        "TITLE"
      ]
    },
    "ClosingDesignationRequest": {
      "title": "ClosingDesignationRequest",
      "description": "The document closing designation accepted by the API. If `PRE_CLOSING` is provided, then a `sourceType` of `LENDER` is not allowed; it must be `TITLE` to indicate the addition of a pre-closing document by the title/settlement agent.",
      "example": "NOTE",
      "type": "string",
      "enum": [
        "SIGN_AHEAD",
        "DAY_OF",
        "NOTE",
        "PRE_CLOSING"
      ]
    },
    "ClosingDesignationResponse": {
      "title": "ClosingDesignationResponse",
      "description": "The document closing designation the API can respond with. `DRAFT_PRE_CLOSING` indicates that the `PUT close/closings/{id}/pre-closing-documents` endpoint had been called before an attempt to call `POST close/closings/{id}/pre-closing-documents/send`.",
      "example": "NOTE",
      "type": "string",
      "enum": [
        "SIGN_AHEAD",
        "DAY_OF",
        "NOTE",
        "PRE_CLOSING",
        "DRAFT_PRE_CLOSING"
      ]
    },
    "ClosingPostRequest": {
      "title": "ClosingPostRequest",
      "description": "Request body for creating a closing for an application",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        }
      },
      "required": [
        "applicationId"
      ]
    },
    "ClosingPatchRequest": {
      "title": "ClosingPatchRequest",
      "description": "Closing fields to update",
      "type": "object",
      "properties": {
        "closingType": {
          "$ref": "#/definitions/ClosingType"
        },
        "closingStart": {
          "description": "ISO 8601 datetime when the closing is set to start. This time will dictate when sign-ahead closing documents will be released to borrower(s) for eSign. A timezone offset **MUST** be provided in the date string to ensure sign ahead documents are released accurately for borrower(s), e.g., not a day earlier than expected.",
          "example": "2019-10-29T00:00:00-04:00",
          "type": "string",
          "format": "date-time"
        },
        "closingEnd": {
          "description": "ISO 8601 datetime when the closing is set to end. Borrower(s) will not be able to review or eSign closing documents after this time. A timezone offset **MUST** be provided in the date string to ensure closing documents expire at the correct time for borrower(s).",
          "example": "2019-10-29T23:59:59-04:00",
          "type": "string",
          "format": "date-time"
        },
        "scheduledCeremonyTime": {
          "description": "ISO 8601 datetime that represents a closing \"day\", which will be reflected in Settlement Agent Workspace and will be assumed to be the day when a borrower meets with their notary. If this value is not provided, it will have the same value as closingStart. This value should be before closingEnd.",
          "example": "2019-10-29T04:00:00-04:00",
          "type": "string",
          "format": "date-time"
        },
        "timezone": {
          "description": "IMPORTANT - this field is only used by the browser in the webapp and does not effect the closing start time declared in this request.\nAdditionally, closingStart and closingEnd must include the correct timezone offset.\n\nFor example if you wish to use Central time, the timezone value would be \"America/Chicago\" and the closingStart or closingDate value must\ninclude an offset of \"-06:00\" during standard time i.e. \"2020-12-12T00:00:00-06:00\" or \"-05:00\" during daylight savings time \"2021-06-12T00:00:00-05:00\"\n\nOptions include:\n\n\"America/New_York\" (Eastern time)\n\n\"America/Chicago\" (Central time)\n\n\"America/Denver\" (Mountain time - day light savings time applicable)\n\n\"America/Phoenix\" (Arizona time - day light savings not applicable)\n\n\"America/Los_Angeles\" (Pacific time)\n\n\"America/Anchorage\" (Alaska time)\n\n\"Pacific/Honolulu\" (Hawaii time)",
          "example": "America/New_York",
          "type": "string"
        },
        "closingParties": {
          "description": "List of closing parties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClosingPartyPatchRequest"
          }
        },
        "specialInstructions": {
          "description": "Special closing instructions",
          "example": "Please wet-sign the Closing Disclosure.",
          "type": "string"
        }
      }
    },
    "ClosingDocumentsPutRequest": {
      "title": "ClosingDocumentsPutRequest",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClosingDocumentReferenceRequest"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "ClosingDocumentReferenceRequest": {
      "title": "ClosingDocumentReferenceRequest",
      "description": "Reference to a closing document in a closing document request.",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "Blend Document ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "sourceType": {
          "$ref": "#/definitions/ClosingSourceType"
        },
        "closingDesignation": {
          "$ref": "#/definitions/ClosingDesignationRequest"
        },
        "requireNotarization": {
          "description": "Whether the document requires notarization.",
          "example": true,
          "type": "boolean",
          "default": true
        },
        "signersRequired": {
          "$ref": "#/definitions/SignersRequired1"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClosingDocumentRecipients"
          }
        }
      },
      "required": [
        "documentID",
        "sourceType"
      ]
    },
    "PreClosingDocumentsPutRequest": {
      "title": "PreClosingDocumentsPutRequest",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreClosingDocumentReferenceRequest"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "PreClosingDocumentReferenceRequest": {
      "title": "PreClosingDocumentReferenceRequest",
      "description": "Reference to a closing document in a pre-closing document request.",
      "type": "object",
      "properties": {
        "documentID": {
          "description": "Blend Document ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        }
      },
      "required": [
        "documentID"
      ]
    },
    "ClosingCreatedResponse": {
      "title": "ClosingCreatedResponse",
      "description": "ID of the newly created closing.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Closing ID",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "ClosingNotFoundError": {
      "title": "ClosingNotFoundError",
      "type": "object",
      "properties": {
        "error": {
          "example": "Not Found",
          "type": "string"
        },
        "display": {
          "example": "No closing found with id 50557b61-c4ec-4639-9781-a5efe5d29946",
          "type": "string"
        },
        "trackingId": {
          "example": "2559635c-6a0b-406a-85b2-e0e8e23c35ab",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display"
      ]
    },
    "ClosingSendPostRequest": {
      "title": "ClosingSendPostRequest",
      "type": "object",
      "properties": {
        "sourceType": {
          "$ref": "#/definitions/ClosingSourceType"
        }
      },
      "required": [
        "sourceType"
      ]
    },
    "ClosingExternallyManagedENotePostRequest": {
      "title": "ClosingExternallyManagedENotePostRequest",
      "type": "object",
      "properties": {
        "vaultData": {
          "$ref": "#/definitions/EOriginalVault"
        }
      },
      "required": [
        "vaultData"
      ]
    },
    "EOriginalVault": {
      "title": "EOriginalVault",
      "type": "object",
      "properties": {
        "eOriginal": {
          "$ref": "#/definitions/EOriginal"
        }
      },
      "required": [
        "eOriginal"
      ]
    },
    "ClosingENotePostRequest": {
      "title": "ClosingENotePostRequest",
      "example": {
        "smartDocTemplateData": {
          "fixedLoan": {
            "formId": "3200e",
            "scheduledFirstPaymentDate": "2018-03-14",
            "paymentRemittanceDay": 3,
            "lenderLoanId": "777777777",
            "lienPriorityType": "FirstLien",
            "noteRatePercent": 13.85,
            "originalLoanAmount": 30000000,
            "loanMaturityDate": "2048-12-13",
            "originalPrincipalAndInterestPaymentAmount": 14460.45,
            "lateChargeGracePeriod": 8,
            "lateChargeRate": 13.45,
            "lateChargeMaximumAmount": 20.15,
            "conformingYearType": "Pre2010",
            "propertyAddress": {
              "city": "New York",
              "state": "NY",
              "postalCode": "10010",
              "county": "New York",
              "parsedStreetAddress": {
                "streetPrimaryNumberText": "123",
                "streetPreDirectionalText": "W",
                "streetName": "Hook",
                "streetSuffixText": "Road",
                "addressUnitDesignatorType": "Unit",
                "addressUnitIdentifier": "3C"
              }
            },
            "notePayToAddress": {
              "streetAddress": "1180 6th Avenue",
              "city": "New York",
              "state": "NY",
              "postalCode": "10036"
            },
            "closingDocumentInfo": {
              "executionDate": "2018-03-14",
              "executionCity": "New York",
              "executionState": "NY",
              "agent": {
                "unparsedName": "Nelson and Nelson",
                "type": "Attorney",
                "contactName": "Matthew Nelson",
                "postalAddress": {
                  "streetAddress": "403 W 49th Street",
                  "city": "New York",
                  "state": "NY",
                  "postalCode": "10019"
                }
              },
              "lender": {
                "unparsedName": "Northstar Lending",
                "contactName": "Harold Osborn",
                "nmlsId": 665444
              },
              "loanOriginator": {
                "unparsedName": "Northstar Lending",
                "nmlsId": 353553
              }
            }
          },
          "MIN": "100012398765432127"
        }
      },
      "type": "object",
      "properties": {
        "smartDocTemplateData": {
          "type": "object"
        }
      },
      "required": [
        "smartDocTemplateData"
      ]
    },
    "SmartDocLoanTypeFormId": {
      "title": "SmartDocLoanTypeFormId",
      "example": "3200e",
      "type": "string",
      "enum": [
        "3200e",
        "3200e-usda",
        "3200e-fha",
        "3200e-fha-ak",
        "3200e-fha-fl",
        "3200e-fha-ia",
        "3200e-fha-mo",
        "3200e-fha-nh",
        "3200e-fha-pa",
        "3200e-fha-va",
        "3200e-fha-vt",
        "3200e-fha-wi",
        "3200e-fha-wv",
        "3200e-va",
        "3200e-va2",
        "3200e-va-ak",
        "3200e-va-ca",
        "3200e-va-fl",
        "3200e-va-la",
        "3200e-va-me",
        "3200e-va-nh",
        "3200e-va-ny",
        "3200e-va-pa",
        "3200e-va-tx",
        "3200e-va-va",
        "3200e-va-vt",
        "3200e-va-wi",
        "3200e-va-wv",
        "3200e-va-dc",
        "3200e-in",
        "3200e-md",
        "3200e-tx",
        "3200e-al",
        "3200e-al2",
        "3202e",
        "3210e",
        "3220e",
        "3230e",
        "3233e",
        "3239e",
        "3244.1e",
        "3246e",
        "3247e",
        "3249e",
        "3250e"
      ]
    },
    "SmartDocARMLoanTypeFormId": {
      "title": "SmartDocARMLoanTypeFormId",
      "example": "3501e",
      "type": "string",
      "enum": [
        "3501e",
        "3501.02e",
        "3501.10e",
        "3501.30e",
        "3501.39e",
        "3501.46e",
        "3501.47e",
        "3501.49e",
        "3501.50e",
        "3502e",
        "3502.02e",
        "3502.10e",
        "3502.30e",
        "3502.39e",
        "3502.46e",
        "3502.47e",
        "3502.49e",
        "3502.50e",
        "3504e",
        "3522e",
        "3528e",
        "3528e-ak",
        "3528e-fl",
        "3528e-nh",
        "3528e-pa",
        "3528e-tx",
        "3528e-va",
        "3528e-vt",
        "3528e-wi",
        "3528e-wv"
      ]
    },
    "SmartDocStateType": {
      "title": "SmartDocStateType",
      "description": "The two-character representation of the US state, US Territory, Canadian Province, Military APO FPO, or Territory.",
      "example": "NY",
      "type": "string",
      "enum": [
        "AL",
        "AK",
        "AZ",
        "AR",
        "CA",
        "CO",
        "CT",
        "DE",
        "DC",
        "FL",
        "GA",
        "HI",
        "ID",
        "IL",
        "IN",
        "IA",
        "KS",
        "KY",
        "LA",
        "ME",
        "MD",
        "MA",
        "MI",
        "MN",
        "MS",
        "MO",
        "MT",
        "NE",
        "NV",
        "NH",
        "NJ",
        "NM",
        "NY",
        "NC",
        "ND",
        "OH",
        "OK",
        "OR",
        "PA",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UT",
        "VT",
        "VA",
        "WA",
        "WV",
        "WI",
        "WY"
      ]
    },
    "SmartDocCityStateZip": {
      "title": "SmartDocCityStateZip",
      "type": "object",
      "properties": {
        "city": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "state": {
          "$ref": "#/definitions/SmartDocStateType"
        },
        "postalCode": {
          "description": "The postal code (ZIP Code in the US) for the address. ZIP Code may be either 5 or 9 digits.",
          "example": "10036",
          "type": "string",
          "pattern": "^\\d{5}(\\d{4})?$"
        }
      },
      "required": [
        "city",
        "state",
        "postalCode"
      ]
    },
    "SmartDocPostalAddress": {
      "title": "SmartDocPostalAddress",
      "type": "object",
      "properties": {
        "city": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "state": {
          "$ref": "#/definitions/SmartDocStateType"
        },
        "postalCode": {
          "description": "The postal code (ZIP Code in the US) for the address. ZIP Code may be either 5 or 9 digits.",
          "example": "10036",
          "type": "string",
          "pattern": "^\\d{5}(\\d{4})?$"
        },
        "streetAddress": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        }
      },
      "required": [
        "city",
        "state",
        "postalCode",
        "streetAddress"
      ]
    },
    "SmartDocAgentType": {
      "title": "SmartDocAgentType",
      "example": "Attorney",
      "type": "string",
      "enum": [
        "Attorney",
        "ClosingAgent",
        "EscrowCompany",
        "SettlementAgent",
        "TitleCompany",
        "Other"
      ]
    },
    "SmartDocAgent": {
      "title": "SmartDocAgent",
      "type": "object",
      "properties": {
        "postalAddress": {
          "$ref": "#/definitions/SmartDocPostalAddress"
        },
        "unparsedName": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "type": {
          "$ref": "#/definitions/SmartDocAgentType"
        },
        "contactName": {
          "example": "Matthew Nelson",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        }
      },
      "required": [
        "unparsedName"
      ]
    },
    "SmartDocLender": {
      "title": "SmartDocLender",
      "type": "object",
      "properties": {
        "unparsedName": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "contactName": {
          "example": "Matthew Nelson",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "nmlsId": {
          "description": "Nationwide Multistate Licensing System ID number. Up to 10 digits and must be ≥ 1.",
          "example": 665444,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 2147483647.0,
          "format": "int32"
        }
      },
      "required": [
        "unparsedName",
        "contactName",
        "nmlsId"
      ]
    },
    "SmartDocLoanParty": {
      "title": "SmartDocLoanParty",
      "type": "object",
      "properties": {
        "unparsedName": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "nmlsId": {
          "description": "Nationwide Multistate Licensing System ID number. Up to 10 digits and must be ≥ 1.",
          "example": 665444,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 2147483647.0,
          "format": "int32"
        }
      },
      "required": [
        "unparsedName",
        "nmlsId"
      ]
    },
    "SmartDocUnparsedStreetAddress": {
      "title": "SmartDocUnparsedStreetAddress",
      "type": "object",
      "properties": {
        "city": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "state": {
          "$ref": "#/definitions/SmartDocStateType"
        },
        "postalCode": {
          "description": "The postal code (ZIP Code in the US) for the address. ZIP Code may be either 5 or 9 digits.",
          "example": "10036",
          "type": "string",
          "pattern": "^\\d{5}(\\d{4})?$"
        },
        "unparsedStreetAddress": {
          "$ref": "#/definitions/UnparsedStreetAddress"
        },
        "county": {
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "required": [
        "city",
        "state",
        "postalCode",
        "unparsedStreetAddress",
        "county"
      ]
    },
    "SmartDocAddressUnitDesignatorType": {
      "title": "SmartDocAddressUnitDesignatorType",
      "example": "Apartment",
      "type": "string",
      "enum": [
        "Apartment",
        "Basement",
        "Building",
        "Condo",
        "Department",
        "Floor",
        "Front",
        "Hanger",
        "Key",
        "Lobby",
        "Lot",
        "Lower",
        "Office",
        "Other",
        "Penthouse",
        "Pier",
        "Rear",
        "Room",
        "Side",
        "Space",
        "Stop",
        "Suite",
        "Trailer",
        "Unit",
        "Upper"
      ]
    },
    "SmartDocParsedStreetAddress": {
      "title": "SmartDocParsedStreetAddress",
      "type": "object",
      "properties": {
        "city": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "state": {
          "$ref": "#/definitions/SmartDocStateType"
        },
        "postalCode": {
          "description": "The postal code (ZIP Code in the US) for the address. ZIP Code may be either 5 or 9 digits.",
          "example": "10036",
          "type": "string",
          "pattern": "^\\d{5}(\\d{4})?$"
        },
        "parsedStreetAddress": {
          "$ref": "#/definitions/ParsedStreetAddress"
        },
        "county": {
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        }
      },
      "required": [
        "city",
        "state",
        "postalCode",
        "parsedStreetAddress",
        "county"
      ]
    },
    "SmartDocAbstractLoanType": {
      "title": "SmartDocAbstractLoanType",
      "type": "object",
      "properties": {
        "propertyAddress": {
          "$ref": "#/definitions/PropertyAddress"
        },
        "notePayToAddress": {
          "$ref": "#/definitions/SmartDocPostalAddress"
        },
        "closingDocumentInfo": {
          "type": "object"
        },
        "lenderLoanId": {
          "description": "The identifier assigned by the originating Lender to be referenced as the Loan ID/Number on all settlement documents, notes, riders, etc.",
          "example": "777777777",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "lienPriorityType": {
          "$ref": "#/definitions/LienPriorityType"
        },
        "noteRatePercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "originalLoanAmount": {
          "description": "The amount to be repaid as disclosed on the Note. Will be pulled from Blend if not specified.",
          "example": 30000000,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "loanMaturityDate": {
          "description": "The date when the loan is scheduled to be paid in full as reflected on the Note.",
          "example": "2048-12-13",
          "type": "string",
          "format": "date"
        },
        "originalPrincipalAndInterestPaymentAmount": {
          "description": "The dollar amount of the principal and interest payment as stated on the Note. The principal and interest payment is usually obtained using the loan amount and interest rate to arrive at full amortization during the loan term.",
          "example": 14460.45,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "lateChargeGracePeriod": {
          "description": "The grace period in days for this loan before a late charge will be applied.",
          "example": 8,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 365.0,
          "format": "int32"
        },
        "lateChargeRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lateChargeMaximumAmount": {
          "description": "The maximum monthly late charge amount allowed.",
          "example": 20.15,
          "type": "number",
          "minimum": 1.0,
          "maximum": 9999999.99,
          "format": "double"
        },
        "conformingYearType": {
          "$ref": "#/definitions/ConformingYearType"
        },
        "registryOperator": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "required": [
        "notePayToAddress",
        "closingDocumentInfo",
        "noteRatePercent",
        "loanMaturityDate",
        "originalPrincipalAndInterestPaymentAmount",
        "lateChargeGracePeriod",
        "lateChargeRate"
      ]
    },
    "SmartDocFixedLoanType": {
      "title": "SmartDocFixedLoanType",
      "type": "object",
      "properties": {
        "propertyAddress": {
          "$ref": "#/definitions/PropertyAddress"
        },
        "notePayToAddress": {
          "$ref": "#/definitions/SmartDocPostalAddress"
        },
        "closingDocumentInfo": {
          "type": "object"
        },
        "lenderLoanId": {
          "description": "The identifier assigned by the originating Lender to be referenced as the Loan ID/Number on all settlement documents, notes, riders, etc.",
          "example": "777777777",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "lienPriorityType": {
          "$ref": "#/definitions/LienPriorityType"
        },
        "noteRatePercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "originalLoanAmount": {
          "description": "The amount to be repaid as disclosed on the Note. Will be pulled from Blend if not specified.",
          "example": 30000000,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "loanMaturityDate": {
          "description": "The date when the loan is scheduled to be paid in full as reflected on the Note.",
          "example": "2048-12-13",
          "type": "string",
          "format": "date"
        },
        "originalPrincipalAndInterestPaymentAmount": {
          "description": "The dollar amount of the principal and interest payment as stated on the Note. The principal and interest payment is usually obtained using the loan amount and interest rate to arrive at full amortization during the loan term.",
          "example": 14460.45,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "lateChargeGracePeriod": {
          "description": "The grace period in days for this loan before a late charge will be applied.",
          "example": 8,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 365.0,
          "format": "int32"
        },
        "lateChargeRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lateChargeMaximumAmount": {
          "description": "The maximum monthly late charge amount allowed.",
          "example": 20.15,
          "type": "number",
          "minimum": 1.0,
          "maximum": 9999999.99,
          "format": "double"
        },
        "conformingYearType": {
          "$ref": "#/definitions/ConformingYearType"
        },
        "registryOperator": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "formId": {
          "$ref": "#/definitions/SmartDocLoanTypeFormId"
        },
        "scheduledFirstPaymentDate": {
          "description": "The date of the first scheduled mortgage payment to be made by the borrower under the terms of the mortgage.",
          "example": "2018-03-14",
          "type": "string",
          "format": "date"
        },
        "paymentRemittanceDay": {
          "description": "The day of the month on which the loan payment is to be remitted under the terms of the Mortgage.",
          "example": 3,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 31.0,
          "format": "int32"
        },
        "agencyCaseIdentifier": {
          "description": "An identifier assigned by a government agency (for example FHA Case Number, VA Case Number). The identifier is used by the agency to identify a loan.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "^[0-9a-zA-z\\\\-]+$"
        }
      },
      "required": [
        "notePayToAddress",
        "closingDocumentInfo",
        "noteRatePercent",
        "loanMaturityDate",
        "originalPrincipalAndInterestPaymentAmount",
        "lateChargeGracePeriod",
        "lateChargeRate",
        "formId",
        "scheduledFirstPaymentDate",
        "paymentRemittanceDay"
      ]
    },
    "SmartDocAbstractARMLoanType": {
      "title": "SmartDocAbstractARMLoanType",
      "type": "object",
      "properties": {
        "propertyAddress": {
          "$ref": "#/definitions/PropertyAddress"
        },
        "notePayToAddress": {
          "$ref": "#/definitions/SmartDocPostalAddress"
        },
        "closingDocumentInfo": {
          "type": "object"
        },
        "lenderLoanId": {
          "description": "The identifier assigned by the originating Lender to be referenced as the Loan ID/Number on all settlement documents, notes, riders, etc.",
          "example": "777777777",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "lienPriorityType": {
          "$ref": "#/definitions/LienPriorityType"
        },
        "noteRatePercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "originalLoanAmount": {
          "description": "The amount to be repaid as disclosed on the Note. Will be pulled from Blend if not specified.",
          "example": 30000000,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "loanMaturityDate": {
          "description": "The date when the loan is scheduled to be paid in full as reflected on the Note.",
          "example": "2048-12-13",
          "type": "string",
          "format": "date"
        },
        "originalPrincipalAndInterestPaymentAmount": {
          "description": "The dollar amount of the principal and interest payment as stated on the Note. The principal and interest payment is usually obtained using the loan amount and interest rate to arrive at full amortization during the loan term.",
          "example": 14460.45,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "lateChargeGracePeriod": {
          "description": "The grace period in days for this loan before a late charge will be applied.",
          "example": 8,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 365.0,
          "format": "int32"
        },
        "lateChargeRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lateChargeMaximumAmount": {
          "description": "The maximum monthly late charge amount allowed.",
          "example": 20.15,
          "type": "number",
          "minimum": 1.0,
          "maximum": 9999999.99,
          "format": "double"
        },
        "conformingYearType": {
          "$ref": "#/definitions/ConformingYearType"
        },
        "registryOperator": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "scheduledFirstPaymentDate": {
          "description": "The month and year of the first scheduled mortgage payment to be made by the borrower under the terms of the mortgage. Must be in YYYY-MM format. The first day of the month is assumed.",
          "example": "2018-03",
          "type": "string",
          "format": "date"
        },
        "dateOfFirstChange": {
          "description": "The due date of the payment at the first calculated interest rate change. To arrive at the actual (true) date that interest begins to accrue at the changed rate one payment period is subtracted if interest is paid in arrears. Must be in YYYY-MM format.",
          "example": "2018-04",
          "type": "string",
          "format": "date"
        },
        "changePercentagePoints": {
          "description": "The number of percentage points to be added to the index to arrive at the new interest rate.",
          "type": "number",
          "format": "double"
        },
        "changePercentagePointsWords": {
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "greaterLimitPoints": {
          "description": "The stated maximum, expressed as a percent, to which the interest rate can increase to in this adjustment period.",
          "type": "number",
          "format": "double"
        },
        "lowerLimitPoints": {
          "description": "The stated minimum, expressed as a percent, to which the interest rate can decrease to in this adjustment period.",
          "type": "number",
          "format": "double"
        },
        "maxLimitPoints": {
          "description": "The stated maximum percentage to which the interest rate can increase over the life of the loan.",
          "type": "number",
          "format": "double"
        },
        "lifetimeCapRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lifetimeFloorPercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        }
      },
      "required": [
        "notePayToAddress",
        "closingDocumentInfo",
        "noteRatePercent",
        "loanMaturityDate",
        "originalPrincipalAndInterestPaymentAmount",
        "lateChargeGracePeriod",
        "lateChargeRate",
        "scheduledFirstPaymentDate",
        "dateOfFirstChange",
        "changePercentagePoints",
        "changePercentagePointsWords",
        "greaterLimitPoints",
        "lowerLimitPoints",
        "maxLimitPoints",
        "lifetimeFloorPercent"
      ]
    },
    "SmartDocARMLoanType": {
      "title": "SmartDocARMLoanType",
      "type": "object",
      "properties": {
        "propertyAddress": {
          "$ref": "#/definitions/PropertyAddress"
        },
        "notePayToAddress": {
          "$ref": "#/definitions/SmartDocPostalAddress"
        },
        "closingDocumentInfo": {
          "type": "object"
        },
        "lenderLoanId": {
          "description": "The identifier assigned by the originating Lender to be referenced as the Loan ID/Number on all settlement documents, notes, riders, etc.",
          "example": "777777777",
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "lienPriorityType": {
          "$ref": "#/definitions/LienPriorityType"
        },
        "noteRatePercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "originalLoanAmount": {
          "description": "The amount to be repaid as disclosed on the Note. Will be pulled from Blend if not specified.",
          "example": 30000000,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "loanMaturityDate": {
          "description": "The date when the loan is scheduled to be paid in full as reflected on the Note.",
          "example": "2048-12-13",
          "type": "string",
          "format": "date"
        },
        "originalPrincipalAndInterestPaymentAmount": {
          "description": "The dollar amount of the principal and interest payment as stated on the Note. The principal and interest payment is usually obtained using the loan amount and interest rate to arrive at full amortization during the loan term.",
          "example": 14460.45,
          "type": "number",
          "minimum": 1.0,
          "maximum": 999999999.99,
          "format": "double"
        },
        "lateChargeGracePeriod": {
          "description": "The grace period in days for this loan before a late charge will be applied.",
          "example": 8,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 365.0,
          "format": "int32"
        },
        "lateChargeRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lateChargeMaximumAmount": {
          "description": "The maximum monthly late charge amount allowed.",
          "example": 20.15,
          "type": "number",
          "minimum": 1.0,
          "maximum": 9999999.99,
          "format": "double"
        },
        "conformingYearType": {
          "$ref": "#/definitions/ConformingYearType"
        },
        "registryOperator": {
          "example": "John M. Jameson Sr",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "scheduledFirstPaymentDate": {
          "description": "The month and year of the first scheduled mortgage payment to be made by the borrower under the terms of the mortgage. Must be in YYYY-MM format. The first day of the month is assumed.",
          "example": "2018-03",
          "type": "string",
          "format": "date"
        },
        "dateOfFirstChange": {
          "description": "The due date of the payment at the first calculated interest rate change. To arrive at the actual (true) date that interest begins to accrue at the changed rate one payment period is subtracted if interest is paid in arrears. Must be in YYYY-MM format.",
          "example": "2018-04",
          "type": "string",
          "format": "date"
        },
        "changePercentagePoints": {
          "description": "The number of percentage points to be added to the index to arrive at the new interest rate.",
          "type": "number",
          "format": "double"
        },
        "changePercentagePointsWords": {
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        "greaterLimitPoints": {
          "description": "The stated maximum, expressed as a percent, to which the interest rate can increase to in this adjustment period.",
          "type": "number",
          "format": "double"
        },
        "lowerLimitPoints": {
          "description": "The stated minimum, expressed as a percent, to which the interest rate can decrease to in this adjustment period.",
          "type": "number",
          "format": "double"
        },
        "maxLimitPoints": {
          "description": "The stated maximum percentage to which the interest rate can increase over the life of the loan.",
          "type": "number",
          "format": "double"
        },
        "lifetimeCapRate": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "lifetimeFloorPercent": {
          "example": 13.85,
          "type": "number",
          "minimum": 0.0,
          "maximum": 99.9999,
          "format": "double"
        },
        "formId": {
          "$ref": "#/definitions/SmartDocARMLoanTypeFormId"
        }
      },
      "required": [
        "notePayToAddress",
        "closingDocumentInfo",
        "noteRatePercent",
        "loanMaturityDate",
        "originalPrincipalAndInterestPaymentAmount",
        "lateChargeGracePeriod",
        "lateChargeRate",
        "scheduledFirstPaymentDate",
        "dateOfFirstChange",
        "changePercentagePoints",
        "changePercentagePointsWords",
        "greaterLimitPoints",
        "lowerLimitPoints",
        "maxLimitPoints",
        "lifetimeFloorPercent",
        "formId"
      ]
    },
    "SmartDocBaseDoc": {
      "title": "SmartDocBaseDoc",
      "type": "object",
      "properties": {
        "MIN": {
          "description": "Mortgage Identification Number. 18-digit number passed as a string whose last digit is a control digit. Required in production environment.",
          "example": "100012398765432127",
          "type": "string",
          "pattern": "^\\d{18}$"
        }
      }
    },
    "SmartDocFixedLoan": {
      "title": "SmartDocFixedLoan",
      "type": "object",
      "properties": {
        "MIN": {
          "description": "Mortgage Identification Number. 18-digit number passed as a string whose last digit is a control digit. Required in production environment.",
          "example": "100012398765432127",
          "type": "string",
          "pattern": "^\\d{18}$"
        },
        "fixedLoan": {
          "$ref": "#/definitions/SmartDocFixedLoanType"
        }
      },
      "required": [
        "fixedLoan"
      ]
    },
    "SmartDocArmLoan": {
      "title": "SmartDocArmLoan",
      "type": "object",
      "properties": {
        "MIN": {
          "description": "Mortgage Identification Number. 18-digit number passed as a string whose last digit is a control digit. Required in production environment.",
          "example": "100012398765432127",
          "type": "string",
          "pattern": "^\\d{18}$"
        },
        "armLoan": {
          "$ref": "#/definitions/SmartDocARMLoanType"
        }
      },
      "required": [
        "armLoan"
      ]
    },
    "GetITPResponse": {
      "title": "GetITPResponse",
      "type": "object",
      "properties": {
        "addedAt": {
          "description": "ISO 8601 timestamp when the first Intent to Proceed Workflow was added for any borrower.",
          "example": "2020-05-01T20:10:22.101Z",
          "type": "string",
          "format": "date-time"
        },
        "givenAt": {
          "description": "ISO 8601 timestamp when Intent to Proceed was given on an application.",
          "example": "2020-05-03T12:06:21.789Z",
          "type": "string",
          "format": "date-time"
        },
        "givenBy": {
          "description": "The partyID of the borrower who gave Intent to Proceed.",
          "example": "062773a3-18c9-4a79-80d2-9a73998b2ac0",
          "type": "string"
        },
        "givenMethod": {
          "$ref": "#/definitions/GivenMethod"
        }
      },
      "required": [
        "addedAt"
      ]
    },
    "ITPNotFoundError": {
      "title": "ITPNotFoundError",
      "type": "object",
      "properties": {
        "error": {
          "example": "Not Found",
          "type": "string"
        },
        "display": {
          "example": "Intent to Proceed has not been added for application 50557b61-c4ec-4639-9781-a5efe5d29946",
          "type": "string"
        },
        "trackingId": {
          "example": "d9b5eb21-904c-4eff-a092-65eaa08bfdbb",
          "type": "string"
        }
      },
      "required": [
        "error",
        "display"
      ]
    },
    "CreatedByObject": {
      "title": "CreatedByObject",
      "type": "object",
      "properties": {
        "userId": {
          "example": "Either a uuid (062773a3-18c9-4a79-80d2-9a73998b2ac0) or 'system'",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type9"
        }
      },
      "required": [
        "userId"
      ]
    },
    "VerifiedEmployersSchema": {
      "title": "VerifiedEmployersSchema",
      "description": "Summary of Verified Employers data on an application.",
      "type": "object",
      "properties": {
        "verifiedEmployers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedEmployersSummarySchema"
          }
        }
      }
    },
    "VerifiedEmployersSummarySchema": {
      "title": "VerifiedEmployersSummarySchema",
      "description": "Summary of Verified Employers data per borrower on an application",
      "type": "object",
      "properties": {
        "partyId": {
          "description": "The UUID of the partyId.",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "employerDetails": {
          "description": "Summary of Verified Employer object per borrower on an application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedEmployerObjectSchema"
          }
        }
      },
      "required": [
        "partyId"
      ]
    },
    "VerifiedEmployerObjectSchema": {
      "title": "VerifiedEmployerObjectSchema",
      "description": "Summary of Verified Employer object per borrower on an application.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status21"
        },
        "employerName": {
          "description": "Name of the verified employer.",
          "example": "Enterprise One",
          "type": "string"
        },
        "employerId": {
          "description": "The UUID of the employerId.",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        }
      },
      "required": [
        "employerId"
      ]
    },
    "EmployersReverifyRequestSchema": {
      "title": "EmployersReverifyRequestSchema",
      "description": "Parameters for Employers Reverification request",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "partyId": {
          "description": "The UUID of the partyId.",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "employerIds": {
          "description": "These are the employers that a reverify will be initiated for.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "applicationId",
        "partyId",
        "employerIds"
      ]
    },
    "ConsumerLendingNameSchema": {
      "title": "ConsumerLendingNameSchema",
      "type": "object",
      "properties": {
        "firstName": {
          "example": "Tanya",
          "type": "string"
        },
        "middleName": {
          "example": "Michelle",
          "type": "string"
        },
        "lastName": {
          "example": "Williams",
          "type": "string"
        },
        "suffix": {
          "example": "III",
          "type": "string"
        }
      }
    },
    "ConsumerLendingPhoneNumberSchema": {
      "title": "ConsumerLendingPhoneNumberSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type26"
        },
        "number": {
          "description": "Phone number",
          "example": 4153504810,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "number"
      ]
    },
    "ConsumerLendingIdentityEvaluationSchema": {
      "title": "ConsumerLendingIdentityEvaluationSchema",
      "type": "object",
      "properties": {
        "externalReferenceId": {
          "description": "Identity evaluation external reference ID",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status22"
        },
        "score": {
          "description": "Identity evaluation score",
          "example": 600,
          "type": "number",
          "format": "double"
        },
        "outcome": {
          "$ref": "#/definitions/Outcome"
        },
        "providerMetadata": {
          "description": "Provider metadata",
          "type": "object"
        },
        "userMetadata": {
          "description": "User metadata",
          "type": "object"
        }
      }
    },
    "ConsumerLendingAddressSchema": {
      "title": "ConsumerLendingAddressSchema",
      "description": "Address",
      "type": "object",
      "properties": {
        "streetAddressLine1": {
          "example": "100 Main St",
          "type": "string"
        },
        "streetAddressLine2": {
          "example": "Apt 10",
          "type": "string"
        },
        "city": {
          "example": "Chicago",
          "type": "string"
        },
        "county": {
          "example": "Cook County",
          "type": "string"
        },
        "state": {
          "description": "Two-character US state code",
          "example": "IL",
          "type": "string"
        },
        "zipCode": {
          "description": "Five-digit US zip code",
          "example": "60007",
          "type": "string"
        }
      }
    },
    "ConsumerLendingResidenceSchema": {
      "title": "ConsumerLendingResidenceSchema",
      "description": "Residence",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type27"
        },
        "residencyType": {
          "$ref": "#/definitions/ResidencyType"
        },
        "address": {
          "$ref": "#/definitions/ConsumerLendingAddressSchema"
        },
        "moveInDate": {
          "description": "Move in date in ISO 8601 format",
          "example": "2019-01-01T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "moveOutDate": {
          "description": "Move out date in ISO 8601 format",
          "example": "2020-06-30T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "residencyDurationYears": {
          "description": "Number of years in residency",
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "residencyDurationMonths": {
          "description": "Number of months (in excess of number of years) in residency",
          "example": 6,
          "type": "number",
          "format": "double"
        },
        "monthlyRent": {
          "description": "Monthly rent",
          "example": 1000,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "address"
      ]
    },
    "ConsumerLendingOwnedPropertySchema": {
      "title": "ConsumerLendingOwnedPropertySchema",
      "description": "Owned property",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type28"
        },
        "usageType": {
          "$ref": "#/definitions/UsageType"
        },
        "dispositionType": {
          "$ref": "#/definitions/DispositionType"
        },
        "address": {
          "$ref": "#/definitions/ConsumerLendingAddressSchema"
        },
        "presentMarketValue": {
          "description": "Present market value",
          "type": "number",
          "format": "double"
        },
        "monthlyMortgagePayments": {
          "description": "Monthly mortgage payments",
          "example": [
            875,
            230
          ],
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "mortgageBalance": {
          "description": "Mortgage balance",
          "example": 21000,
          "type": "number",
          "format": "double"
        },
        "grossRentalIncome": {
          "description": "Gross rental income",
          "example": 340,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "usageType",
        "address",
        "presentMarketValue"
      ]
    },
    "ConsumerLendingEmploymentOwnershipSchema": {
      "title": "ConsumerLendingEmploymentOwnershipSchema",
      "description": "Employer ownership",
      "type": "object",
      "properties": {
        "ownershipType": {
          "$ref": "#/definitions/OwnershipType"
        },
        "ownershipPercentage": {
          "description": "Ownership percentage",
          "example": 100,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsumerLendingIncomeSchema": {
      "title": "ConsumerLendingIncomeSchema",
      "description": "Income",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type29"
        },
        "yearlyIncome": {
          "description": "Yearly income",
          "example": 80000,
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConsumerLendingEmployerSchema": {
      "title": "ConsumerLendingEmployerSchema",
      "description": "Employer",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status23"
        },
        "type": {
          "$ref": "#/definitions/Type30"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/ConsumerLendingAddressSchema"
        },
        "phoneNumber": {
          "type": "number",
          "format": "double"
        },
        "title": {
          "type": "string"
        },
        "startDate": {
          "description": "Start date in ISO 8601 format",
          "example": "2020-01-01T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "End date in ISO 8601 format",
          "example": "2021-03-31T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "hoursPerWeek": {
          "description": "Hours per week",
          "type": "number",
          "format": "double"
        },
        "monthsOnJob": {
          "description": "Number of months on the job",
          "type": "number",
          "format": "double"
        },
        "yearsInProfession": {
          "description": "Number of years in profession",
          "type": "number",
          "format": "double"
        },
        "ownership": {
          "$ref": "#/definitions/ConsumerLendingEmploymentOwnershipSchema"
        },
        "incomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingIncomeSchema"
          }
        }
      },
      "required": [
        "status",
        "address"
      ]
    },
    "ConsumerLendingLiabilitySchema": {
      "title": "ConsumerLendingLiabilitySchema",
      "description": "Liability",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type31"
        },
        "monthlyPayment": {
          "description": "Monthly payment",
          "example": 2500,
          "type": "number",
          "format": "double"
        },
        "monthsLeftToPay": {
          "description": "Months left to pay",
          "example": 24,
          "type": "number",
          "format": "double"
        },
        "unpaidBalance": {
          "description": "Unpaid balance",
          "example": 60000,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "monthlyPayment",
        "monthsLeftToPay",
        "unpaidBalance"
      ]
    },
    "ConsumerLendingDeclarationSchema": {
      "title": "ConsumerLendingDeclarationSchema",
      "description": "Declaration",
      "type": "object",
      "properties": {
        "type": {
          "example": "US_CITIZEN",
          "type": "string"
        },
        "indicator": {
          "example": false,
          "type": "boolean"
        },
        "explanation": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "indicator"
      ]
    },
    "ConsumerLendingBorrowerSchema": {
      "title": "ConsumerLendingBorrowerSchema",
      "description": "Borrower",
      "type": "object",
      "properties": {
        "id": {
          "description": "Borrower ID",
          "example": "52843951-c41f-44b7-a33c-2e499ce75029",
          "type": "string"
        },
        "memberId": {
          "description": "Member ID",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type32"
        },
        "name": {
          "$ref": "#/definitions/ConsumerLendingNameSchema"
        },
        "email": {
          "example": "borrower@mail.com",
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingPhoneNumberSchema"
          }
        },
        "birthDate": {
          "description": "Birth date in ISO 8601 format",
          "example": "1990-11-11T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "ssn": {
          "description": "Social Security Number",
          "example": "123-45-6789",
          "type": "string"
        },
        "creditReport": {
          "description": "Credit report",
          "example": "<xml>...</xml>",
          "type": "string"
        },
        "identityEvaluations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingIdentityEvaluationSchema"
          }
        },
        "citizenshipStatus": {
          "$ref": "#/definitions/CitizenshipStatus2"
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus"
        },
        "residences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingResidenceSchema"
          }
        },
        "ownedProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingOwnedPropertySchema"
          }
        },
        "employers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingEmployerSchema"
          }
        },
        "otherIncomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingIncomeSchema"
          }
        },
        "liabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingLiabilitySchema"
          }
        },
        "declarations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingDeclarationSchema"
          }
        },
        "consentToLenderContactGiven": {
          "description": "If set to true, consent is given to lender contact",
          "example": false,
          "type": "boolean"
        },
        "econsent": {
          "$ref": "#/definitions/EconsentSchema"
        },
        "creditConsent": {
          "$ref": "#/definitions/EconsentSchema"
        },
        "creditConsentSoft": {
          "$ref": "#/definitions/EconsentSchema"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "email",
        "phoneNumbers"
      ]
    },
    "ConsumerLendingLoanIdentifiersSchema": {
      "title": "ConsumerLendingLoanIdentifiersSchema",
      "type": "object",
      "properties": {
        "losId": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        },
        "crmId": {
          "description": "The unique identifier of the application in a lender's Customer Relationship Management (CRM) system (e.g. Salesforce, Velocify, etc.). This value should not change over time and should be used to connect the application's identity between Blend and the CRM.",
          "example": "crmLead1",
          "type": "string"
        },
        "referenceNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        }
      }
    },
    "ConsumerLendingLoanType": {
      "title": "ConsumerLendingLoanType",
      "example": "AUTO",
      "type": "string",
      "enum": [
        "AUTO",
        "SPECIALTY_VEHICLE",
        "PERSONAL_LOAN",
        "PERSONAL_LOC",
        "CREDIT_CARD"
      ]
    },
    "ConsumerLendingLoanPurposeType": {
      "title": "ConsumerLendingLoanPurposeType",
      "example": "PURCHASE",
      "type": "string",
      "enum": [
        "PURCHASE",
        "REFINANCE",
        "LEASE_BUYOUT",
        "FUTURE_USE",
        "DEBT_CONSOLIDATION",
        "HOME_IMPROVEMENT",
        "MEDICAL_EXPENSES",
        "OTHER",
        "LIVING_EXPENSES",
        "CASH_NEED",
        "EDUCATION_EXPENSES",
        "ESTABLISH_CREDIT",
        "FAMILY_EVENT",
        "GIFT",
        "MAJOR_PURCHASES",
        "MEDICAL_NURSING_CARE",
        "TAXES_LEGAL_FEES",
        "VACATION_TRIP",
        "VEHICLE_REPAIR"
      ]
    },
    "ConsumerLendingRefinanceType": {
      "title": "ConsumerLendingRefinanceType",
      "description": "Only applicable if loanPurposeType is REFINANCE",
      "example": "LOAN",
      "type": "string",
      "enum": [
        "LOAN",
        "CASH_OUT"
      ]
    },
    "ConsumerLendingCollateralSchema": {
      "title": "ConsumerLendingCollateralSchema",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type33"
        },
        "primary": {
          "type": "boolean"
        },
        "vehicle": {
          "$ref": "#/definitions/ConsumerLendingVehicleSchema"
        },
        "account": {
          "$ref": "#/definitions/ConsumerLendingAccountSchema"
        }
      }
    },
    "ConsumerLendingAccountSchema": {
      "title": "ConsumerLendingAccountSchema",
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "holdAmount": {
          "example": 4320.75,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsumerLendingVehicleSchema": {
      "title": "ConsumerLendingVehicleSchema",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/Condition"
        },
        "purchaseLocation": {
          "$ref": "#/definitions/PurchaseLocation"
        },
        "category": {
          "$ref": "#/definitions/Category1"
        },
        "type": {
          "$ref": "#/definitions/Type34"
        },
        "year": {
          "example": 2002,
          "type": "number",
          "format": "double"
        },
        "make": {
          "example": "Honda",
          "type": "string"
        },
        "model": {
          "example": "Civic",
          "type": "string"
        },
        "trim": {
          "example": "EX",
          "type": "string"
        },
        "mileage": {
          "example": 125000,
          "type": "number",
          "format": "double"
        },
        "valuation": {
          "description": "The property's value in dollars and cents",
          "example": 3400.75,
          "type": "number",
          "format": "double"
        },
        "identificationNumber": {
          "type": "string"
        },
        "salesPrice": {
          "description": "Sales price for the loan",
          "example": 14500,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsumerLendingApplicationDecisionSchema": {
      "title": "ConsumerLendingApplicationDecisionSchema",
      "description": "Application decision",
      "type": "object",
      "properties": {
        "updatedDate": {
          "example": "2021-05-11T10:45:23.456Z",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/Status24"
        },
        "amount": {
          "example": 100000.5,
          "type": "number",
          "format": "double"
        },
        "apr": {
          "example": 4.75,
          "type": "number",
          "format": "double"
        },
        "monthlyPayment": {
          "example": 2530.75,
          "type": "number",
          "format": "double"
        },
        "termMonths": {
          "example": 120,
          "type": "number",
          "format": "double"
        },
        "productOffering": {
          "type": "string"
        },
        "policySnapshot": {
          "type": "object"
        },
        "attributes": {
          "type": "object"
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "updatedDate",
        "status"
      ]
    },
    "ConsumerLendingApplicationSchema": {
      "title": "ConsumerLendingApplicationSchema",
      "description": "A consumer lending application",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "productId": {
          "description": "Only applicable if the consumer lending loan type is CREDIT_CARD",
          "example": "b2006a70-a19b-4b7f-973d-3a561e159060",
          "type": "string"
        },
        "loanIdentifiers": {
          "$ref": "#/definitions/ConsumerLendingLoanIdentifiersSchema"
        },
        "loanType": {
          "$ref": "#/definitions/ConsumerLendingLoanType"
        },
        "loanPurposeType": {
          "$ref": "#/definitions/ConsumerLendingLoanPurposeType"
        },
        "refinanceType": {
          "$ref": "#/definitions/ConsumerLendingRefinanceType"
        },
        "borrowers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingBorrowerSchema"
          }
        },
        "loanAmount": {
          "description": "The amount of money (dollars and cents) for which the applicant is applying",
          "example": 95001.75,
          "type": "number",
          "format": "double"
        },
        "loanTermMonths": {
          "description": "The term of the loan in months",
          "example": 36,
          "type": "number",
          "format": "double"
        },
        "isFlexibleLoanTerms": {
          "description": "Whether the applicant is flexible in their loan amount and terms",
          "example": false,
          "type": "boolean"
        },
        "lender": {
          "type": "string"
        },
        "collaterals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerLendingCollateralSchema"
          }
        },
        "primaryAssignedLoanOfficer": {
          "$ref": "#/definitions/PrimaryAssignedLoanOfficer"
        },
        "decision": {
          "$ref": "#/definitions/ConsumerLendingApplicationDecisionSchema"
        },
        "promoCode": {
          "type": "string"
        },
        "appSource": {
          "description": "The tag corresponding to a marketing campaign. This identifier can be used to gauge which links are most effective within certain campaigns.",
          "example": "ORGANIC_LEAD",
          "type": "string"
        }
      },
      "required": [
        "id",
        "loanType",
        "borrowers"
      ]
    },
    "AccessLimit": {
      "title": "AccessLimit",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type21"
        },
        "display": {
          "description": "access limit display shown to applicants",
          "example": "ATM withdrawal limit per day",
          "type": "string"
        },
        "value": {
          "description": "limit amount (in dollars)",
          "example": 500,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "type",
        "display",
        "value"
      ]
    },
    "AnnualIncome": {
      "title": "AnnualIncome",
      "description": "Annual income range for given employment",
      "example": "BELOW_50K",
      "type": "string",
      "enum": [
        "BELOW_10K",
        "BELOW_25K",
        "BELOW_50K",
        "BELOW_100K",
        "BELOW_150K",
        "BELOW_200K",
        "ABOVE_200K"
      ]
    },
    "AppLeadSource": {
      "title": "AppLeadSource",
      "description": "Specifies how an app was created.",
      "example": "PUBLIC_API",
      "type": "string",
      "enum": [
        "LENDER",
        "BORROWER",
        "PUBLIC_API",
        "INGEST",
        "OTHER"
      ]
    },
    "appLeadSource1": {
      "title": "appLeadSource1",
      "example": "LENDER",
      "type": "string",
      "enum": [
        "LENDER",
        "BORROWER",
        "PUBLIC_API",
        "INGEST",
        "OTHER"
      ]
    },
    "ApplicationApprovalStatus": {
      "title": "ApplicationApprovalStatus",
      "description": "Approval status of the application, either \"APPROVED\", \"REFERRED\", or \"REJECTED\" if the application has reached a decisioning point, or null if not.",
      "example": "APPROVED",
      "type": "string",
      "enum": [
        "APPROVED",
        "REFERRED",
        "REJECTED"
      ]
    },
    "ApplicationBookingStatus": {
      "title": "ApplicationBookingStatus",
      "description": "Supplementary status indicator that may be able to confirm that the newly opened account(s) was successfully booked even in the case of a lapse in the event tracking that produces accountBookedToCoreDatetime; either \"BOOKED\" or null.",
      "example": "BOOKED",
      "type": "string",
      "enum": [
        "BOOKED"
      ]
    },
    "ApplicationFundingStatus": {
      "title": "ApplicationFundingStatus",
      "description": "Funding status of the application. This field will be \"FUNDED VIA BLEND\" if an opening deposit for at least one newly opened account was submitted through the \"Opening Deposit\" workflow (i.e. if firstOpeningDepositTransactionSubmittedDatetime exists), and null otherwise.",
      "example": "FUNDED VIA BLEND",
      "type": "string",
      "enum": [
        "FUNDED VIA BLEND"
      ]
    },
    "ApplicationStatus": {
      "title": "ApplicationStatus",
      "description": "An ENUM for the status of the application. This field and Party.status replaces status.",
      "example": "SUBMITTED",
      "type": "string",
      "enum": [
        "LENDER_SETUP",
        "IN_PROGRESS",
        "SUBMITTED",
        "FOLLOW_UP_ONLY",
        "TAKEN_OVER",
        "CLOSED",
        "DENIED"
      ]
    },
    "ApplicationStatusOverall": {
      "title": "ApplicationStatusOverall",
      "description": "Overall latest status of the application (i.e. the most down-funnel status reached to date), either \"NOT SUBMITTED\", \"SUBMITTED\", \"REFERRED\", \"APPROVED\", \"REJECTED\", \"BOOKED\", or \"FUNDED VIA BLEND\".",
      "example": "FUNDED VIA BLEND",
      "type": "string",
      "enum": [
        "NOT SUBMITTED",
        "SUBMITTED",
        "APPROVED",
        "REFERRED",
        "REJECTED",
        "BOOKED",
        "FUNDED VIA BLEND"
      ]
    },
    "ApplicationSubmissionStatus": {
      "title": "ApplicationSubmissionStatus",
      "description": "Supplementary status indicator that may be able to confirm application submission even in the case of a lapse in the event tracking that produces applicationSubmittedDatetime; either \"SUBMITTED\" or \"NOT SUBMITTED\".",
      "example": "SUBMITTED",
      "type": "string",
      "enum": [
        "SUBMITTED",
        "NOT SUBMITTED"
      ]
    },
    "ApprovalStatus": {
      "title": "ApprovalStatus",
      "description": "Status of the application approval process.",
      "example": "APPROVED",
      "type": "string",
      "enum": [
        "APPROVED",
        "REFER",
        "REJECTED"
      ]
    },
    "ApprovalStatus1": {
      "title": "ApprovalStatus1",
      "description": "Decision regarding opening the account",
      "example": "APPROVED",
      "type": "string",
      "enum": [
        "APPROVED",
        "REFER",
        "REJECTED"
      ]
    },
    "ApproveTab2": {
      "title": "ApproveTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "buttonText": {
          "type": "string"
        },
        "font": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "Attributes": {
      "title": "Attributes",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "scaleValue": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "required": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Attributes1": {
      "title": "Attributes1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "height": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "width": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "buttonText": {
          "type": "string"
        }
      }
    },
    "Attributes2": {
      "title": "Attributes2",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Attributes3": {
      "title": "Attributes3",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "selected": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Attributes4": {
      "title": "Attributes4",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "required": {
          "example": false,
          "type": "boolean"
        },
        "height": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "width": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "maxLength": {
          "example": 0,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Attributes5": {
      "title": "Attributes5",
      "type": "object",
      "properties": {
        "radios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Radio1"
          }
        }
      }
    },
    "Attributes7": {
      "title": "Attributes7",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "required": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Attributes8": {
      "title": "Attributes8",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "height": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "width": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "value": {
          "example": 0,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Attributes9": {
      "title": "Attributes9",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "scaleValue": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "required": {
          "example": false,
          "type": "boolean"
        },
        "xPosition": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "width": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "buttonText": {
          "type": "string"
        },
        "selected": {
          "example": false,
          "type": "boolean"
        },
        "maxLength": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "radios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Radio1"
          }
        },
        "value": {
          "example": 0,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "Attributes10": {
      "title": "Attributes10",
      "type": "object",
      "properties": {
        "xPosition": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "AusProduct": {
      "title": "AusProduct",
      "description": "The AUS system that was used to run the result.",
      "example": "DesktopUnderwriter",
      "type": "string",
      "enum": [
        "LoanProspector",
        "DesktopUnderwriter"
      ]
    },
    "AuthenticationStatusResponse": {
      "title": "AuthenticationStatusResponse",
      "type": "object",
      "properties": {
        "isAuthenticated": {
          "type": "boolean"
        }
      }
    },
    "Category": {
      "title": "Category",
      "description": "Document's hierarchical category",
      "example": "Supporting Docs for Large Deposits",
      "type": "string",
      "enum": [
        "Assets",
        "Borrower Info",
        "Credit",
        "Disclosures",
        "Income",
        "Letters of explanations",
        "Miscellaneous",
        "Property",
        "Supporting Docs for Large Deposits"
      ]
    },
    "Category1": {
      "title": "Category1",
      "example": "POWERSPORT",
      "type": "string",
      "enum": [
        "BOAT",
        "RV",
        "POWERSPORT"
      ]
    },
    "CheckboxTab2": {
      "title": "CheckboxTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "CitizenshipStatus": {
      "title": "CitizenshipStatus",
      "description": "Applicant citizenship status",
      "example": "US_CITIZEN",
      "type": "string",
      "enum": [
        "US_CITIZEN",
        "PERMANENT_RESIDENT_ALIEN",
        "NON_PERMANENT_RESIDENT_ALIEN"
      ]
    },
    "CitizenshipStatus2": {
      "title": "CitizenshipStatus2",
      "example": "US_CITIZEN",
      "type": "string",
      "enum": [
        "US_CITIZEN",
        "PERMANENT_RESIDENT_ALIEN",
        "NON_PERMANENT_RESIDENT_ALIEN"
      ]
    },
    "ClosingStatus": {
      "title": "ClosingStatus",
      "description": "The closing status",
      "example": "COMPLETED",
      "type": "string",
      "enum": [
        "DRAFT",
        "SENT",
        "SENT_DAY_OF",
        "COMPLETED"
      ]
    },
    "Code": {
      "title": "Code",
      "example": 404,
      "type": "integer",
      "format": "int32",
      "enum": [
        "404",
        "409"
      ]
    },
    "Condition": {
      "title": "Condition",
      "example": "NEW",
      "type": "string",
      "enum": [
        "NEW",
        "USED"
      ]
    },
    "ConformingYearType": {
      "title": "ConformingYearType",
      "example": "Pre2010",
      "type": "string",
      "enum": [
        "Pre2010",
        "January2010",
        "Other"
      ]
    },
    "ConsumerLendingApplicationsDecisionRequest": {
      "title": "ConsumerLendingApplicationsDecisionRequest",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status24"
        },
        "amount": {
          "example": 120000,
          "type": "number",
          "format": "double"
        },
        "apr": {
          "example": 4.75,
          "type": "number",
          "format": "double"
        },
        "monthlyPayment": {
          "example": 1243,
          "type": "number",
          "format": "double"
        },
        "termMonths": {
          "example": 120,
          "type": "number",
          "format": "double"
        },
        "productOffering": {
          "example": "Standard HELOC",
          "type": "string"
        }
      }
    },
    "ConsumerLendingApplicationsDocumentsResponse": {
      "title": "ConsumerLendingApplicationsDocumentsResponse",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSchema"
          }
        }
      }
    },
    "Contact": {
      "title": "Contact",
      "type": "object",
      "properties": {
        "email": {
          "description": "Realtor's email",
          "example": "realtor@email.com",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Realtor's phone number",
          "example": "2225557878",
          "type": "string"
        }
      }
    },
    "Context": {
      "title": "Context",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "CreditPullType": {
      "title": "CreditPullType",
      "description": "Pull Type of the active credit report for this party.",
      "example": "Hard",
      "type": "string",
      "enum": [
        "Hard",
        "Soft"
      ]
    },
    "DateSignedTab2": {
      "title": "DateSignedTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "font": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "DateTab2": {
      "title": "DateTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "font": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "DispositionType": {
      "title": "DispositionType",
      "description": "Disposition type",
      "example": "PENDING_SALE",
      "type": "string",
      "enum": [
        "RETAIN_FOR_PRIMARY_OR_SECONDARY_RESIDENCE",
        "RETAIN_FOR_RENTAL",
        "PENDING_SALE",
        "SOLD"
      ]
    },
    "DocDeliveryType": {
      "title": "DocDeliveryType",
      "example": "WET_SIGN",
      "type": "string",
      "enum": [
        "WET_SIGN",
        "VIEW_ONLY",
        "ESIGN",
        "EMBEDDED_FIELDS"
      ]
    },
    "DocDeliveryType1": {
      "title": "DocDeliveryType1",
      "example": "VIEW_ONLY'",
      "type": "string",
      "enum": [
        "VIEW_ONLY'",
        "ESIGN",
        "EMBEDDED_FIELDS"
      ]
    },
    "DocDeliveryType2": {
      "title": "DocDeliveryType2",
      "example": "ESIGN",
      "type": "string",
      "enum": [
        "ESIGN",
        "EMBEDDED_FIELDS"
      ]
    },
    "Document": {
      "title": "Document",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/PostDocumentType"
        },
        "title": {
          "description": "Document follow-up display title. Required when type is 'OTHER'.",
          "example": "Custom title",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "Document1": {
      "title": "Document1",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "description": "Document signature follow-up display title.",
          "example": "Sign custom document",
          "type": "string"
        },
        "signers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signer"
          }
        }
      },
      "required": [
        "id",
        "signers"
      ]
    },
    "Document2": {
      "title": "Document2",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "Document3": {
      "title": "Document3",
      "type": "object",
      "properties": {
        "title": {
          "description": "Document follow-up display title.",
          "example": "Custom title",
          "type": "string"
        }
      }
    },
    "Document4": {
      "title": "Document4",
      "type": "object",
      "properties": {
        "title": {
          "description": "Document signature follow-up display title.",
          "example": "Custom title",
          "type": "string"
        }
      }
    },
    "Document5": {
      "title": "Document5",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/DocumentType"
        },
        "title": {
          "description": "Document follow-up display title. Required when type is 'OTHER'.",
          "example": "Custom title",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "Document6": {
      "title": "Document6",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "description": "Document signature follow-up display title.",
          "example": "Sign custom document",
          "type": "string"
        },
        "signers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signer1"
          }
        }
      },
      "required": [
        "id",
        "signers"
      ]
    },
    "Document7": {
      "title": "Document7",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The Blend UUID returned when uploading a document",
          "example": "b2996a70-a19b-4b7f-973d-3a561e159067",
          "type": "string"
        },
        "signersRequired": {
          "$ref": "#/definitions/SignersRequired"
        },
        "tabs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tab"
          }
        },
        "tabExtractionMethod": {
          "$ref": "#/definitions/TabExtractionMethod"
        },
        "extractTabs": {
          "description": "If additional information is required for tab extraction (which it is for EXPERE_ACROFORM documents), include it in extractTabs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EsignExtractTabExpereAcroformSchema"
          }
        }
      },
      "required": [
        "documentId",
        "tabs"
      ]
    },
    "Document8": {
      "title": "Document8",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The Blend UUID returned when uploading a document",
          "example": "b2996a70-a19b-4b7f-973d-3a561e159067",
          "type": "string"
        }
      },
      "required": [
        "documentId"
      ]
    },
    "DocumentFollowUpSubContext": {
      "title": "DocumentFollowUpSubContext",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DocumentsExportStatusesResponse": {
      "title": "DocumentsExportStatusesResponse",
      "type": "object",
      "properties": {
        "exportStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentExportStatusSchema"
          }
        }
      }
    },
    "DocumentsRequest": {
      "title": "DocumentsRequest",
      "type": "object",
      "properties": {
        "exportedTime": {
          "description": "Document export time (UTC ISO Timestamp)",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "losId": {
          "description": "Identifier of indicated document in the LOS",
          "example": "11111",
          "type": "string"
        }
      }
    },
    "DocumentsResponse": {
      "title": "DocumentsResponse",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSchema"
          }
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of documents",
          "type": "string"
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of documents",
          "type": "string"
        }
      }
    },
    "Employer": {
      "title": "Employer",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "name": {
          "description": "The employer's name.",
          "example": "Blend",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "address": {
          "$ref": "#/definitions/AddressSchema"
        },
        "phoneNumber": {
          "description": "Employer phone number",
          "example": 1112223333,
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "description": "UTC Timestamp of the start of employment",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "UTC Timestamp of the end of employment",
          "example": "2018-11-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "incomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IncomeSchema"
          }
        },
        "id": {
          "description": "The UUID of the Employer in Blend's system. The static identifier that should be used to connect the employer's identity across Blend and external integrations.",
          "example": "338f3da4-9251-4c49-b97d-f503f7f179a2",
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "EmploymentStatus": {
      "title": "EmploymentStatus",
      "description": "current listed employment status",
      "example": "SELF_EMPLOYED",
      "type": "string",
      "enum": [
        "EMPLOYED",
        "SELF_EMPLOYED",
        "RETIRED",
        "UNEMPLOYED",
        "NEVER_EMPLOYED"
      ]
    },
    "Envelope": {
      "title": "Envelope",
      "type": "object",
      "properties": {
        "providerType": {
          "$ref": "#/definitions/ProviderType"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESignEnvelopesRecipientPostSchema1"
          }
        }
      }
    },
    "EOriginal": {
      "title": "EOriginal",
      "type": "object",
      "properties": {
        "transactionId": {
          "description": "The transactionId for the externally managed EOriginal Vault where the ENote is stored.",
          "example": "11180467",
          "type": "string"
        }
      },
      "required": [
        "transactionId"
      ]
    },
    "Error": {
      "title": "Error",
      "description": "Only used if an error occurs when processing an event",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error that occured",
          "example": "Unable to process event",
          "type": "string"
        },
        "reason": {
          "description": "Error reason",
          "example": "LOS is down",
          "type": "string"
        }
      }
    },
    "Error1": {
      "title": "Error1",
      "description": "Information about the error for the AUS run.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of error for the AUS run.",
          "type": "string"
        },
        "message": {
          "description": "Error message for the AUS run.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "message"
      ]
    },
    "Error2": {
      "title": "Error2",
      "type": "object",
      "properties": {
        "email": {
          "example": "bademail",
          "type": "string"
        },
        "code": {
          "example": 400,
          "type": "number",
          "format": "double"
        },
        "reason": {
          "example": "Invalid lender params.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "reason"
      ]
    },
    "ESignEnvelopesRecipientPostSchema1": {
      "title": "ESignEnvelopesRecipientPostSchema1",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/EsignMetadataSchema1"
        },
        "partyId": {
          "description": "The Blend party UUID",
          "example": "c2006a70-a19c-4b9f-973d-3a561e159063",
          "type": "string"
        }
      },
      "required": [
        "metadata",
        "partyId"
      ]
    },
    "EsignMetadataSchema1": {
      "title": "EsignMetadataSchema1",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document7"
          }
        },
        "documentIds": {
          "description": "List of Blend document UUIDs provided when uploading a document",
          "example": [
            "9250f84b-c2a1-4cab-b265-bd720485c361"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "documents",
        "documentIds"
      ]
    },
    "EventType": {
      "title": "EventType",
      "description": "Event type",
      "example": "documentEvent.AVAILABLE",
      "type": "string",
      "enum": [
        "applicantEvent.ADDED",
        "applicationEvent.READY_TO_FUND",
        "applicationEvent.SUBMITTED",
        "applicationEvent.EXPORTED",
        "applicationEvent.TRID_TRIGGERED",
        "applicationEvent.ARCHIVED",
        "applicationEvent.BROKER_EXPORT",
        "documentEvent.AVAILABLE",
        "documentEvent.EXPORTED",
        "eConsentStatus.UPDATE",
        "workflowEvent.COMPLETED"
      ]
    },
    "FailureCode": {
      "title": "FailureCode",
      "description": "Corresponding reason for integration event failure",
      "example": "CORE_DOWN_FOR_MAINTENANCE",
      "type": "string",
      "enum": [
        "CORE_DOWN_FOR_MAINTENANCE",
        "PARTIAL_CREATION",
        "EXISTING_USER"
      ]
    },
    "FamilyMemberName": {
      "title": "FamilyMemberName",
      "description": "Required if qualification is based on family or household member.",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Family or household member's first name.",
          "example": "Bob",
          "type": "string"
        },
        "lastName": {
          "description": "Family or household member's last name.",
          "example": "Smith",
          "type": "string"
        }
      }
    },
    "Fannie": {
      "title": "Fannie",
      "type": "object",
      "properties": {
        "href": {
          "description": "File export URL",
          "example": "https://api.blendlabs.com/home-lending/applications/58d20dba-9dca-44b7-b72b-15debfd23301/file-export?format=fannie",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "FilingStatus": {
      "title": "FilingStatus",
      "description": "Filing status",
      "example": "SINGLE",
      "type": "string",
      "enum": [
        "SINGLE",
        "JOINT_CO_APPLICANT",
        "JOINT_NON_APPLICANT"
      ]
    },
    "FollowUpsResponse": {
      "title": "FollowUpsResponse",
      "type": "object",
      "properties": {
        "followUps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FollowUpSchema"
          }
        }
      }
    },
    "format": {
      "title": "format",
      "example": "fannie",
      "type": "string",
      "enum": [
        "fannie",
        "mismo"
      ]
    },
    "GivenMethod": {
      "title": "GivenMethod",
      "description": "The method used to provide Intent to Proceed. This is 'ELECTRONICALLY_IN_BLEND' only if it was provided by a borrower completing a borrower workflow in Blend. If it is marked completed by a lender in Blend on behalf of a borrower, or via API actions, it will be set as 'OUTSIDE_OF_BLEND'.",
      "example": "ELECTRONICALLY_IN_BLEND",
      "type": "string",
      "enum": [
        "ELECTRONICALLY_IN_BLEND",
        "OUTSIDE_OF_BLEND"
      ]
    },
    "HomeLendingApplicationsBorrowerPositionsRequest": {
      "title": "HomeLendingApplicationsBorrowerPositionsRequest",
      "type": "object",
      "properties": {
        "borrowerPairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BorrowerPairSchema"
          }
        }
      }
    },
    "HomeLendingApplicationsBorrowerPositionsResponse": {
      "title": "HomeLendingApplicationsBorrowerPositionsResponse",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Application UUID",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "borrowerPairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BorrowerPairSchema"
          }
        }
      }
    },
    "HomeLendingApplicationsDocumentsResponse": {
      "title": "HomeLendingApplicationsDocumentsResponse",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSchema"
          }
        }
      }
    },
    "HomeLendingApplicationsExportStatusesResponse": {
      "title": "HomeLendingApplicationsExportStatusesResponse",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportStatusSchema"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },
    "HomeLendingApplicationsExportStatusesResponse1": {
      "title": "HomeLendingApplicationsExportStatusesResponse1",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportStatusSchema"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkRequestErrorSchema"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "HomeLendingApplicationsItpRequest": {
      "title": "HomeLendingApplicationsItpRequest",
      "type": "object",
      "properties": {
        "borrowerId": {
          "description": "Party ID of borrower to either add ITP workflow for, or if `givenAt` is supplied, mark ITP as given by.",
          "example": "52843951-c41f-44b7-a33c-2e499ce75029",
          "type": "string"
        },
        "givenAt": {
          "description": "The ISO 8601 datetime when the specified `borrowerId` confirmed their Intent to Proceed.",
          "example": "2020-05-03T12:06:21.789Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "borrowerId"
      ]
    },
    "HomeLendingApplicationsLosMilestonesRequest": {
      "title": "HomeLendingApplicationsLosMilestonesRequest",
      "type": "object",
      "properties": {
        "losMilestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LosMilestoneSchema"
          }
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "HomeLendingApplicationsLosMilestonesResponse": {
      "title": "HomeLendingApplicationsLosMilestonesResponse",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LosMilestoneSchema"
          }
        }
      },
      "required": [
        "success"
      ]
    },
    "HomeLendingApplicationsLosMilestonesResponse1": {
      "title": "HomeLendingApplicationsLosMilestonesResponse1",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LosMilestoneSchema"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LosMilestoneErrorSchema"
          }
        }
      },
      "required": [
        "error"
      ]
    },
    "HomeLendingApplicationsLosMilestonesResponse2": {
      "title": "HomeLendingApplicationsLosMilestonesResponse2",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the los milestone",
          "example": "SUBMITTED",
          "type": "string"
        },
        "lastUpdated": {
          "description": "UTC Timestamp of when the LOS Milstone was last updated",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "lastUpdated"
      ]
    },
    "HomeLendingApplicationsPartiesResponse": {
      "title": "HomeLendingApplicationsPartiesResponse",
      "type": "object",
      "properties": {
        "parties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartySchema"
          }
        }
      }
    },
    "HomeLendingApplicationsRequest": {
      "title": "HomeLendingApplicationsRequest",
      "type": "object",
      "properties": {
        "losId": {
          "description": "The UUID or GUID of the current resource in the LOS AFTER initial export to the LOS. For loans this may match the loan reference number depending on the LOS and if the customer has selected to use only GUIDs instead of UUIDs in their LOS settings. For all other resources, it is the static identifier of this resource in the LOS.",
          "example": "Loan-12391",
          "type": "string"
        },
        "tridTriggeredDate": {
          "description": "UTC timestamp of when that all six elements required to trigger TRID were deemed to exist on the application",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "crmId": {
          "description": "The unique identifier of the application in a lender's Customer Relationship Management (CRM) system (e.g. Salesforce, Velocify, etc.). This value should not change over time and should be used to connect the application's identity between Blend and the CRM.",
          "example": "crmLead1",
          "type": "string"
        },
        "referenceNumber": {
          "description": "A mutable identifier of the application. Not safe to use to connect the application's identity across Blend and external systems because it can and (for most implementations) will change. Default value is an incremented ID set by Blend. Other Values could be LOS GUID after export of the loan to LOS (may be the same as the losID field or different), Can be manually set to anything by lenders in the UI or programmatically via the API.",
          "example": "124123",
          "type": "string"
        },
        "property": {
          "$ref": "#/definitions/Property"
        },
        "loanAmount": {
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The purchase price for the subject property of the loan. This field is only supported for new URLA mortgage applications.",
          "example": 120000,
          "type": "number",
          "format": "double"
        },
        "estimatedClosingDate": {
          "description": "UTC timestamp of the estimated date to close on the subject property",
          "example": "2019-06-02T00:00:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "communityId": {
          "description": "Unique identifier to determine assignment in construction or branch banking scenarios",
          "type": "string"
        },
        "archivedStatus": {
          "description": "True if the application has been archived",
          "example": false,
          "type": "boolean"
        },
        "realEstateAgentNotificationConsentGiven": {
          "description": "If set to true, real estate agents assigned to the application will receive application update notifications",
          "example": false,
          "type": "boolean"
        },
        "interestRate": {
          "description": "The interest rate in percentage points",
          "example": 4.25,
          "type": "number",
          "format": "double"
        },
        "mortgageType": {
          "$ref": "#/definitions/MortgageType"
        },
        "appSource": {
          "description": "The tag corresponding to a marketing campaign. This identifier can be used to gauge which links are most effective within certain campaigns.",
          "example": "ORGANIC_LEAD",
          "type": "string"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        }
      }
    },
    "HomeLendingApplicationsResponse": {
      "title": "HomeLendingApplicationsResponse",
      "type": "object",
      "properties": {
        "id": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "solutionSubType": {
          "example": "MORTGAGE",
          "type": "string"
        },
        "parties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "redirectUrl": {
          "description": "redirected URL that allows consumers to be automatically redirected to the application that was just created for them",
          "example": "apply.lender.com/signup?=abc123&activationKey=321abc",
          "type": "string"
        },
        "customFields": {
          "type": "object"
        },
        "customMetadata": {
          "type": "object"
        }
      }
    },
    "HomeLendingApplicationsResponse1": {
      "title": "HomeLendingApplicationsResponse1",
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of applications",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of applications",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "InitialHereTab2": {
      "title": "InitialHereTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "scaleValue": {
          "type": "number",
          "format": "double"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "LastRefresh": {
      "title": "LastRefresh",
      "description": "Summary of last Assets refresh attempt for this account. This will be omitted from accounts we have not completed a refresh for. If a refresh is in progress, this will be omitted until the refresh has completed.",
      "type": "object",
      "properties": {
        "time": {
          "description": "UTC timestamp of the last refresh attempt",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/AccountRefreshStatusType"
        }
      },
      "required": [
        "time",
        "status"
      ]
    },
    "LendersRequest": {
      "title": "LendersRequest",
      "type": "object",
      "properties": {
        "lenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderCreationRequestSchema"
          }
        }
      }
    },
    "LendersRequest1": {
      "title": "LendersRequest1",
      "type": "object",
      "properties": {
        "lenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderUpdateRequestSchema"
          }
        }
      }
    },
    "LendersResponse": {
      "title": "LendersResponse",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderRecordSchema"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "maxItems": 0
        }
      }
    },
    "LendersResponse1": {
      "title": "LendersResponse1",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderRecordSchema"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error2"
          }
        }
      }
    },
    "LendersResponse2": {
      "title": "LendersResponse2",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderRecordSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of Users",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of Users",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "maxItems": 0
        }
      }
    },
    "LendersResponse3": {
      "title": "LendersResponse3",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LenderRecordSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of lenders",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of lenders",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkRequestErrorSchema"
          }
        }
      }
    },
    "LendersResponse4": {
      "title": "LendersResponse4",
      "type": "object",
      "properties": {
        "success": {
          "description": "Lender user UUIDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "LendersResponse5": {
      "title": "LendersResponse5",
      "type": "object",
      "properties": {
        "success": {
          "description": "Lender user UUIDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkRequestErrorSchema"
          }
        }
      }
    },
    "LendersResponse6": {
      "title": "LendersResponse6",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "LendersResponse7": {
      "title": "LendersResponse7",
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkRequestErrorSchema"
          }
        }
      }
    },
    "LienPriorityType": {
      "title": "LienPriorityType",
      "description": "Specifies the priority of the lien against the subject property.",
      "example": "FirstLien",
      "type": "string",
      "enum": [
        "FirstLien",
        "SecondLien",
        "Other"
      ]
    },
    "LienType": {
      "title": "LienType",
      "description": "Lien Type ENUM",
      "example": "FIRST",
      "type": "string",
      "enum": [
        "FIRST",
        "SUBORDINATE"
      ]
    },
    "ListTab": {
      "title": "ListTab",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "LoanPurposeType": {
      "title": "LoanPurposeType",
      "description": "An ENUM describing the purpose of the application",
      "example": "REFINANCE",
      "type": "string",
      "enum": [
        "PURCHASE",
        "REFINANCE",
        "CONSTRUCTION",
        "CONSTRUCTION_PERM",
        "MORTGAGE_MODIFICATION'",
        "OTHER"
      ]
    },
    "LoanPurposeType1": {
      "title": "LoanPurposeType1",
      "description": "ENUM describing the reason for this home loan application",
      "example": "PURCHASE",
      "type": "string",
      "enum": [
        "PURCHASE",
        "REFINANCE"
      ]
    },
    "LoanPurposeType2": {
      "title": "LoanPurposeType2",
      "description": "The purpose of the loan application.",
      "example": "PURCHASE",
      "type": "string",
      "enum": [
        "REFINANCE",
        "CONSTRUCTION_PERM",
        "CONSTRUCTION",
        "PURCHASE",
        "OTHER"
      ]
    },
    "LoanType": {
      "title": "LoanType",
      "description": "The subtype of the loan application.",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "MORTGAGE",
        "HELOC",
        "HELOAN",
        "CANADA_MORTGAGE",
        "ACCOUNT_OPENING",
        "AUTO",
        "MORTGAGE_MODIFICATION",
        "PERSONAL_LOC",
        "PERSONAL_LOAN",
        "SPECIALTY_VEHICLE",
        "ALL"
      ]
    },
    "loanType1": {
      "title": "loanType1",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "MORTGAGE",
        "HELOC",
        "HELOAN",
        "CANADA_MORTGAGE",
        "ACCOUNT_OPENING",
        "AUTO",
        "MORTGAGE_MODIFICATION",
        "PERSONAL_LOC",
        "PERSONAL_LOAN",
        "SPECIALTY_VEHICLE",
        "ALL"
      ]
    },
    "loanType4": {
      "title": "loanType4",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "MORTGAGE",
        "HELOC",
        "HELOAN",
        "AUTO",
        "ACCOUNT_OPENING"
      ]
    },
    "LoginMethod": {
      "title": "LoginMethod",
      "description": "Login Method",
      "example": "email",
      "type": "string",
      "enum": [
        "email",
        "SSO",
        "borrowerSAML",
        "anonymousBorrower"
      ]
    },
    "LoginMethod3": {
      "title": "LoginMethod3",
      "description": "The method the user used to login",
      "example": "email",
      "type": "string",
      "enum": [
        "email",
        "SSO",
        "borrowerSAML",
        "anonymousBorrower",
        "shortForm"
      ]
    },
    "MaritalStatus": {
      "title": "MaritalStatus",
      "description": "Marital Status",
      "example": "MARRIED",
      "type": "string",
      "enum": [
        "MARRIED",
        "NOT_PROVIDED",
        "SEPARATED",
        "UNKNOWN",
        "UNMARRIED"
      ]
    },
    "MaritalStatus1": {
      "title": "MaritalStatus1",
      "description": "Applicant marital status",
      "example": "MARRIED",
      "type": "string",
      "enum": [
        "MARRIED",
        "SEPARATED",
        "UNMARRIED",
        "DOMESTIC_PARTNER"
      ]
    },
    "MaritalStatus4": {
      "title": "MaritalStatus4",
      "description": "ENUM describing the marital status of Party",
      "example": "MARRIED",
      "type": "string",
      "enum": [
        "MARRIED",
        "NOT_PROVIDED",
        "SEPARATED",
        "UNKNOWN",
        "UNMARRIED"
      ]
    },
    "MembershipQualification": {
      "title": "MembershipQualification",
      "type": "object",
      "properties": {
        "type": {
          "description": "Method of qualification for membership",
          "example": "AFFILIATION",
          "type": "string"
        },
        "employerId": {
          "description": "Blend ID of employer object in applicant's employers array. Required if qualification is based on employer's address or select employee group.",
          "example": "3f345acb-6ac4-4bd0-b04a-dc0b9ad76e70",
          "type": "string"
        },
        "accountNumber": {
          "description": "Required if qualification is based on current membership.",
          "example": "111000222",
          "type": "string"
        },
        "familyMemberName": {
          "$ref": "#/definitions/FamilyMemberName"
        },
        "answers": {
          "description": "additional info about membership eligibility",
          "example": {
            "affiliatedOrganization": "REI"
          },
          "type": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "Meta": {
      "title": "Meta",
      "type": "object",
      "properties": {
        "version": {
          "description": "File export version",
          "example": "3.3.1",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "title": "Metadata",
      "description": "additional info about the application",
      "type": "object",
      "properties": {
        "primaryAssignedReviewer": {
          "$ref": "#/definitions/AOReviewerSchema"
        },
        "decisioningReviewer": {
          "$ref": "#/definitions/AOReviewerSchema"
        },
        "appSource": {
          "description": "Identifier of where the application originally came from. Used to trace which system programmatically created an application in Blend when it wasn't initiated by a banker or an applicant via Blend's web application",
          "example": "Velocify",
          "type": "string"
        }
      }
    },
    "Mismo": {
      "title": "Mismo",
      "type": "object",
      "properties": {
        "href": {
          "description": "File export URL",
          "example": "https://api.blendlabs.com/home-lending/applications/58d20dba-9dca-44b7-b72b-15debfd23301/file-export?format=mismo",
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "MortgageType": {
      "title": "MortgageType",
      "description": "ENUM describing the type of the mortgage",
      "example": "CONVENTIONAL",
      "type": "string",
      "enum": [
        "CONVENTIONAL",
        "FHA",
        "LOCAL_AGENCY",
        "OTHER",
        "PUBLIC_AND_INDIAN_HOUSING",
        "STATE_AGENCY",
        "USDARURAL_DEVELOPMENT",
        "VA"
      ]
    },
    "NoteTab2": {
      "title": "NoteTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "value": {
          "type": "string"
        },
        "font": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "orderBy": {
      "title": "orderBy",
      "example": "createdDatetime",
      "type": "string",
      "enum": [
        "createdDatetime",
        "borrowerStartedDatetime",
        "borrowerSubmittedDatetime",
        "estExportedDatetime",
        "estDeletedDatetime",
        "estArchivedDatetime",
        "estPurgedDatetime",
        "estLastUpdatedDatetime"
      ]
    },
    "orderBy1": {
      "title": "orderBy1",
      "example": "activationDatetime",
      "type": "string",
      "enum": [
        "activationDatetime",
        "invitedDatetime"
      ]
    },
    "orderBy2": {
      "title": "orderBy2",
      "example": "activationDatetime",
      "type": "string",
      "enum": [
        "activationDatetime",
        "invitedDatetime",
        "lastBorrowerSubmitDatetime",
        "lastLoginDatetime"
      ]
    },
    "orderBy3": {
      "title": "orderBy3",
      "example": "startedDatetime",
      "type": "string",
      "enum": [
        "startedDatetime",
        "completedDatetime"
      ]
    },
    "orderBy4": {
      "title": "orderBy4",
      "example": "followUpCreatedDatetime",
      "type": "string",
      "enum": [
        "followUpCreatedDatetime",
        "requestedDatetime",
        "completedDatetime",
        "reviewedDatetime",
        "cancelledDatetime"
      ]
    },
    "orderBy5": {
      "title": "orderBy5",
      "example": "applicationCreatedDatetime",
      "type": "string",
      "enum": [
        "applicationCreatedDatetime",
        "applicationSubmittedDatetime",
        "firstAutomatedReferralDatetime",
        "firstAutomatedApprovalDatetime",
        "firstManualApprovalDatetime",
        "firstAutomatedRejectionDatetime",
        "firstManualRejectionDatetime",
        "accountBookedToCoreDatetime",
        "firstOpeningDepositTransactionSubmittedDatetime",
        "applicationLastUpdatedDatetime",
        "applicationArchivedDatetime",
        "applicationDeletedDatetime",
        "applicationPurgedDatetime"
      ]
    },
    "Outcome": {
      "title": "Outcome",
      "description": "Identity evaluation outcome",
      "example": "DENIED",
      "type": "string",
      "enum": [
        "APPROVED",
        "DENIED",
        "MANUAL_REVIEW",
        "MANUAL_REVIEW_NO_STEP_UP"
      ]
    },
    "OwnershipType": {
      "title": "OwnershipType",
      "description": "Ownership type",
      "example": "LLC",
      "type": "string",
      "enum": [
        "Sole Proprietor",
        "LLC",
        "S-Corp",
        "C-Corp",
        "Partnership"
      ]
    },
    "Packages400Error1": {
      "title": "Packages400Error1",
      "type": "object",
      "properties": {
        "error": {
          "example": "All recipient party IDs must be present on loan b2006a70-a19c-4b9f-973d-3a561e159061. Please check party IDs: d1d33889-475-4a6e-8e45-6346f33631b7.",
          "type": "string"
        },
        "trackingId": {
          "example": "1530f84b-c2a1-4cab-b225-vd720687d244",
          "type": "string"
        },
        "display": {
          "example": "Invalid request",
          "type": "string"
        }
      }
    },
    "PackagesRequest": {
      "title": "PackagesRequest",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status26"
        },
        "dueDate": {
          "description": "The ISO timestamp of when the lender has indicated a package is due",
          "example": "2020-04-19T02:35:00.789Z",
          "type": "string"
        },
        "paperedAt": {
          "description": "The ISO timestamp of when the lender decides to mail a package and not pursue electronic delivery",
          "example": "2020-04-19T21:04:08.859Z",
          "type": "string"
        }
      }
    },
    "PackagesResponse": {
      "title": "PackagesResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": "1530f84b-c2a1-4cab-b225-vd720687d243",
          "type": "string"
        }
      }
    },
    "PackagesResponse1": {
      "title": "PackagesResponse1",
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageResponseSchema"
          }
        }
      }
    },
    "ParsedStreetAddress": {
      "title": "ParsedStreetAddress",
      "type": "object",
      "properties": {
        "streetPrimaryNumberText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "streetPreDirectionalText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "streetName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "streetSuffixText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "streetPostDirectionalText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "addressUnitDesignatorType": {
          "$ref": "#/definitions/SmartDocAddressUnitDesignatorType"
        },
        "addressUnitIdentifier": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        }
      },
      "required": [
        "streetName"
      ]
    },
    "PartiesEmployersResponse": {
      "title": "PartiesEmployersResponse",
      "type": "object",
      "properties": {
        "employers": {
          "example": [
            "c33452bf-6eff-4b6d-adc7-a89eaa24013a"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PartiesRequest": {
      "title": "PartiesRequest",
      "type": "object",
      "properties": {
        "applicationId": {
          "description": "The UUID of the application in Blend's system. The static identifier that should be used to connect the application's identity across Blend and external integrations.",
          "example": "aa9fdaa2-7bf3-4411-a836-c2a46117f5c3",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "email": {
          "example": "spouse@mail.com",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type36"
        },
        "verificationData": {
          "$ref": "#/definitions/VerificationDataSchema"
        },
        "taxpayerIdentifier": {
          "$ref": "#/definitions/TaxpayerIdentifierSchema"
        },
        "dateOfBirth": {
          "description": "UTC Timestamp of Date of Birth",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "homePhone": {
          "description": "Nine-digit home phone number",
          "example": "1112223333",
          "type": "string"
        },
        "currentAddress": {
          "$ref": "#/definitions/CurrentAddressSchema"
        },
        "econsent": {
          "$ref": "#/definitions/PostEconsentSchema"
        },
        "losPartyId": {
          "description": "Party ID in LOS",
          "example": "Party1",
          "type": "string"
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus4"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFields"
        },
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        },
        "veteranStatus": {
          "$ref": "#/definitions/VeteranStatusSchema"
        }
      },
      "required": [
        "applicationId",
        "name",
        "email",
        "type"
      ]
    },
    "PartiesRequest1": {
      "title": "PartiesRequest1",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "email": {
          "example": "johnhernandez@mail.com",
          "type": "string"
        },
        "verificationData": {
          "$ref": "#/definitions/VerificationDataSchema"
        },
        "taxpayerIdentifier": {
          "$ref": "#/definitions/TaxpayerIdentifierSchema"
        },
        "dateOfBirth": {
          "description": "UTC Timestamp of Date of Birth",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "homePhone": {
          "description": "Nine-digit home phone number",
          "example": "1112223333",
          "type": "string"
        },
        "currentAddress": {
          "$ref": "#/definitions/CurrentAddressSchema"
        },
        "econsent": {
          "$ref": "#/definitions/PostEconsentSchema"
        },
        "losPartyId": {
          "description": "Party ID in LOS",
          "example": "Party1",
          "type": "string"
        },
        "maritalStatus": {
          "$ref": "#/definitions/MaritalStatus4"
        },
        "customFields": {
          "description": "field name of the custom field",
          "type": "string"
        },
        "customMetadata": {
          "description": "field name of the custom metadata",
          "type": "string"
        },
        "veteranStatus": {
          "$ref": "#/definitions/VeteranStatusSchema"
        }
      }
    },
    "Party": {
      "title": "Party",
      "type": "object",
      "properties": {
        "id": {
          "description": "UUID of the party",
          "example": "18c3e52a-c7e7-4c6d-a36f-d5bca568613a",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/NameSchema"
        },
        "type": {
          "$ref": "#/definitions/Type35"
        }
      }
    },
    "PartyType": {
      "title": "PartyType",
      "example": "BORROWER",
      "type": "string",
      "enum": [
        "OTHER",
        "BORROWER",
        "LENDER",
        "SETTLOR",
        "SPOUSE",
        "TITLE_HOLDER",
        "NON_APPLICANT_USER"
      ]
    },
    "PermittedSolutionSubType": {
      "title": "PermittedSolutionSubType",
      "description": "Valid solutions",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "HELOAN",
        "HELOC",
        "MORTGAGE"
      ]
    },
    "PermittedSolutionSubTypes": {
      "title": "PermittedSolutionSubTypes",
      "description": "Allowable solution type",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "HELOAN",
        "HELOC",
        "MORTGAGE"
      ]
    },
    "PermittedSolutionSubTypes1": {
      "title": "PermittedSolutionSubTypes1",
      "description": "Loan Type",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "HELOAN",
        "HELOC",
        "MORTGAGE"
      ]
    },
    "Phone": {
      "title": "Phone",
      "type": "object",
      "properties": {
        "number": {
          "description": "Phone Number",
          "example": "1112223333",
          "type": "string"
        },
        "extension": {
          "description": "Phone Extension",
          "example": "1234",
          "type": "string"
        }
      }
    },
    "PhoneNumberType": {
      "title": "PhoneNumberType",
      "description": "Type of phone number",
      "example": "HOME",
      "type": "string",
      "enum": [
        "HOME",
        "WORK",
        "MOBILE",
        "OTHER"
      ]
    },
    "Presence": {
      "title": "Presence",
      "description": "A string flag that denotes whether the described parent is required, optional, or conditionally allowed.",
      "example": "required",
      "type": "string",
      "enum": [
        "required",
        "optional"
      ]
    },
    "PrimaryAssignedLoanOfficer": {
      "title": "PrimaryAssignedLoanOfficer",
      "type": "object",
      "properties": {
        "fullName": {
          "example": "Michael Henry",
          "type": "string"
        },
        "branchId": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        }
      }
    },
    "Property": {
      "title": "Property",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/PartialAddressSchema"
        },
        "usageType": {
          "$ref": "#/definitions/PropertyUsageType"
        },
        "otherMortgages": {
          "description": "Other mortgages on the subject property (only relevant for refinances)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherMortgageSchema"
          }
        }
      }
    },
    "PropertyAddress": {
      "title": "PropertyAddress",
      "description": "The property address will be pulled from Blend if not specified.",
      "type": "object",
      "properties": {
        "city": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "state": {
          "$ref": "#/definitions/SmartDocStateType"
        },
        "postalCode": {
          "description": "The postal code (ZIP Code in the US) for the address. ZIP Code may be either 5 or 9 digits.",
          "example": "10036",
          "type": "string",
          "pattern": "^\\d{5}(\\d{4})?$"
        },
        "unparsedStreetAddress": {
          "$ref": "#/definitions/UnparsedStreetAddress"
        },
        "county": {
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 35
        },
        "parsedStreetAddress": {
          "$ref": "#/definitions/ParsedStreetAddress"
        }
      }
    },
    "Provider": {
      "title": "Provider",
      "description": "Provider metadata object",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Internal _id of the provider",
          "example": "ALLOY",
          "type": "string"
        },
        "references": {
          "$ref": "#/definitions/References"
        }
      },
      "required": [
        "_id"
      ]
    },
    "ProviderType": {
      "title": "ProviderType",
      "example": "ESIGN",
      "type": "string",
      "enum": [
        "ESIGN"
      ]
    },
    "ProviderType1": {
      "title": "ProviderType1",
      "description": "Different signing strategies:\n* ESIGN: A Docusign integration\n* WETSIGN: The recipient downloads the package as a PDF and uploads signed PDFs into Blend\n* REVIEW: The recipient views the documents in Blend's document viewer.",
      "example": "SSO_SAML",
      "type": "string",
      "enum": [
        "SSO_SAML",
        "DIRECT_LINK",
        "ESIGN",
        "WETSIGN"
      ]
    },
    "PullType": {
      "title": "PullType",
      "description": "Pull type",
      "example": "Hard",
      "type": "string",
      "enum": [
        "Hard",
        "Soft"
      ]
    },
    "PurchaseLocation": {
      "title": "PurchaseLocation",
      "example": "DEALERSHIP",
      "type": "string",
      "enum": [
        "DEALERSHIP",
        "PRIVATE_PARTY"
      ]
    },
    "Radio": {
      "title": "Radio",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "selected": {
          "description": "Only one in this array may be set to true",
          "type": "boolean"
        },
        "required": {
          "example": false,
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber",
        "tabId"
      ]
    },
    "Radio1": {
      "title": "Radio1",
      "type": "object",
      "properties": {
        "xPosition": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "yPosition": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "pageNumber": {
          "example": 0,
          "type": "number",
          "format": "double"
        },
        "value": {
          "type": "string"
        },
        "selected": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "RadioGroupTab2": {
      "title": "RadioGroupTab2",
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "radios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Radio"
          }
        }
      }
    },
    "RealtorsResponse": {
      "title": "RealtorsResponse",
      "type": "object",
      "properties": {
        "id": {
          "example": "4ab61cfd-e4f0-47af-bdfa-06901e2bf180",
          "type": "string"
        }
      }
    },
    "Recipient": {
      "title": "Recipient",
      "type": "object",
      "properties": {
        "id": {
          "description": "If recipient is borrower or third party, then this is the party id. Otherwise, it is the string LENDER.",
          "example": "c6dabfb0-8753-4a89-b8f0-af059ef869f7",
          "type": "string"
        },
        "receivedDate": {
          "description": "UTC Timestamp of recipient received date",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "receivedIP": {
          "description": "IP address of recipient upon receival of package",
          "type": "string"
        },
        "signedDate": {
          "description": "UTC Timestamp of recipient signed date",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "signedIP": {
          "description": "IP address of recipient upon signing of package",
          "type": "string"
        },
        "declinedToSignDate": {
          "description": "UTC Timestamp of recipient declined to sign date",
          "example": "2018-10-03T20:07:27+00:00",
          "type": "string",
          "format": "date-time"
        },
        "declinedToSignIP": {
          "description": "IP address of recipient upon signing of package",
          "type": "string"
        },
        "wetsignComplete": {
          "description": "Whether or not the recipient has completed their wet-sign documents",
          "type": "boolean"
        },
        "recipientStatus": {
          "$ref": "#/definitions/RecipientStatus"
        },
        "recipientType": {
          "$ref": "#/definitions/RecipientType"
        }
      },
      "required": [
        "id"
      ]
    },
    "RecipientStatus": {
      "title": "RecipientStatus",
      "example": "SIGNED",
      "type": "string",
      "enum": [
        "PENDING_ECONSENT",
        "ELECTRONICALLY_DELIVERED",
        "ELECTRONICALLY_VIEWED",
        "DECLINED",
        "SIGNED",
        "CANCELLED",
        "EXPIRED"
      ]
    },
    "RecipientType": {
      "title": "RecipientType",
      "example": "BORROWER",
      "type": "string",
      "enum": [
        "BORROWER",
        "COBORROWER",
        "LENDER",
        "OTHER",
        "SETTLOR",
        "SPOUSE",
        "TITLE_HOLDER"
      ]
    },
    "Recommendation": {
      "title": "Recommendation",
      "description": "The returned recommendation from the AUS.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The recommendation code provided by the AUS.",
          "example": "3",
          "type": "string"
        },
        "referredIndicator": {
          "description": "The referred indicator provided by the AUS.",
          "example": "0",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "The eligibility indicator provided by the AUS.",
          "example": "1",
          "type": "string"
        },
        "recommendationDescription": {
          "description": "The description of the recommendation for this AUS run.",
          "example": "Approve/Eligible",
          "type": "string"
        }
      },
      "required": [
        "code",
        "eligibilityIndicator",
        "recommendationDescription"
      ]
    },
    "References": {
      "title": "References",
      "description": "References to external provider",
      "type": "object",
      "properties": {
        "latestEvaluationURL": {
          "description": "URL for latest evaluation",
          "type": "string"
        },
        "latestEvaluationDetails": {
          "description": "additional information regarding the latest identity verification evaluation",
          "example": {
            "evaluationTimestamp": 1602874133242
          },
          "type": "object"
        }
      }
    },
    "ReportingActivitiesResponse": {
      "title": "ReportingActivitiesResponse",
      "type": "object",
      "properties": {
        "activities": {
          "description": "An array of activities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingActivitySchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of activities",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of activities",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingBorrowersResponse": {
      "title": "ReportingBorrowersResponse",
      "type": "object",
      "properties": {
        "users": {
          "description": "An array of borrowers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingBorrowerSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of borrower",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of borrower",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingDataVerificationUsageResponse": {
      "title": "ReportingDataVerificationUsageResponse",
      "type": "object",
      "properties": {
        "dataVerificationUsage": {
          "description": "An array of connectivity metrics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingDataVerificationUsageSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of connectivity metrics",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of connectivity metrics",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingDepositAccountApplicationsResponse": {
      "title": "ReportingDepositAccountApplicationsResponse",
      "type": "object",
      "properties": {
        "depositAccountApplications": {
          "description": "An array of deposit account data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingDepositAccountApplicationsSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of deposit account application data",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of deposit account data",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingDocumentsResponse": {
      "title": "ReportingDocumentsResponse",
      "type": "object",
      "properties": {
        "documents": {
          "description": "An array of documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingDocumentSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of documents",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of documents",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingFollowUpsResponse": {
      "title": "ReportingFollowUpsResponse",
      "type": "object",
      "properties": {
        "followups": {
          "description": "An array of followups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingFollowupsSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of followups",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of followups",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingLenderPabActivitiesResponse": {
      "title": "ReportingLenderPabActivitiesResponse",
      "type": "object",
      "properties": {
        "pabActivities": {
          "description": "An array of PAB Activities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingLenderPabActivitiesSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set activities",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of activities",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingLendersResponse": {
      "title": "ReportingLendersResponse",
      "type": "object",
      "properties": {
        "lenders": {
          "description": "An array of lenders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingLenderSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of lenders",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of lenders",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingLoansResponse": {
      "title": "ReportingLoansResponse",
      "type": "object",
      "properties": {
        "loans": {
          "description": "An array of loans",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingLoanSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of loans",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of loans",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ReportingNpsResponse": {
      "title": "ReportingNpsResponse",
      "type": "object",
      "properties": {
        "nps": {
          "description": "An array of nps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportingNPSSchema"
          }
        },
        "nextCursor": {
          "description": "Cursor to use to get to the next set of NPS",
          "example": "biwxNTIzOTk4Njg1NTc5LGRkYWYwNDY5LTdlNTYtNDRjZS05MDE3LTZkM2VhNjk1Mzc2OA",
          "type": "string"
        },
        "prevCursor": {
          "description": "Cursor to use to get to the previous set of NPS",
          "example": "cCwxNTIzOTk4NTQ4MTU5LGEwYWNkZTZjLWY1M2MtNGM5NC1iYmM1LWE0M2MyYTY5YjM3Mg",
          "type": "string"
        }
      }
    },
    "ResidencyType": {
      "title": "ResidencyType",
      "description": "Residency type",
      "example": "RENT",
      "type": "string",
      "enum": [
        "OWN",
        "RENT",
        "LIVING_RENT_FREE"
      ]
    },
    "ReviewTracking": {
      "title": "ReviewTracking",
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "timestamp": {
          "description": "unix timestamp",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "ip",
        "timestamp"
      ]
    },
    "Role": {
      "title": "Role",
      "description": "Assignment role (defaults to ASSIGNEE)",
      "example": "PRIMARY_ASSIGNEE",
      "type": "string",
      "enum": [
        "PRIMARY_ASSIGNEE",
        "ASSIGNEE"
      ]
    },
    "Role1": {
      "title": "Role1",
      "description": "The role of the user",
      "example": "BORROWER",
      "type": "string",
      "enum": [
        "BORROWER",
        "COBORROWER"
      ]
    },
    "Rule": {
      "title": "Rule",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the regex or parsing rule applied to the key's value for processing.",
          "example": "guid",
          "type": "string"
        }
      }
    },
    "RunData": {
      "title": "RunData",
      "description": "A collection of information about a specific AUS run in Blend.",
      "type": "object",
      "properties": {
        "caseFileIdentifier": {
          "description": "The case file ID of the AUS run.",
          "example": "1995629615",
          "type": "string"
        },
        "runDate": {
          "description": "The date and time of the AUS run.",
          "example": "2018-07-24 00:42:00+00:00",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/Status16"
        }
      },
      "required": [
        "runDate",
        "status"
      ]
    },
    "RunParameters": {
      "title": "RunParameters",
      "description": "The loan attributes used for this AUS run, such as debt-to-income ratio.",
      "type": "object",
      "properties": {
        "dti": {
          "description": "The debt-to-income ratio for this loan.",
          "example": "14.164",
          "type": "string"
        },
        "reserves": {
          "description": "The dollar amount of reserves for this loan.",
          "example": "0",
          "type": "string"
        },
        "ltvPercent": {
          "description": "The loan-to-value percent for this loan.",
          "example": "67",
          "type": "string"
        },
        "cltvPercent": {
          "description": "The cumulative loan-to-value percent for this loan.",
          "example": "67",
          "type": "string"
        },
        "assetsToVerifyAmount": {
          "description": "The dollar amount of assets to verify.",
          "example": "100000",
          "type": "string"
        },
        "interestRatePercent": {
          "description": "The interest rate percent for this loan.",
          "example": "4.5",
          "type": "string"
        },
        "loanAmount": {
          "description": "The dollar amount for the loan.",
          "example": 200000,
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The purchase price for the subject property of this loan.",
          "example": 300000,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "loanAmount"
      ]
    },
    "SearchType": {
      "title": "SearchType",
      "description": "ENUM describing the applicant's search stage",
      "example": "NOT_STARTED",
      "type": "string",
      "enum": [
        "NOT_STARTED",
        "STILL_LOOKING",
        "FOUND",
        "NOT_IN_CONTRACT"
      ]
    },
    "Sex": {
      "title": "Sex",
      "description": "Applicant sex",
      "example": "FEMALE",
      "type": "string",
      "enum": [
        "FEMALE",
        "MALE",
        "OTHER",
        "DO_NOT_WISH_TO_PROVIDE"
      ]
    },
    "Signer": {
      "title": "Signer",
      "type": "object",
      "properties": {
        "partyId": {
          "type": "string"
        },
        "tabs": {
          "$ref": "#/definitions/TabSchema"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "Signer1": {
      "title": "Signer1",
      "type": "object",
      "properties": {
        "partyId": {
          "type": "string"
        }
      },
      "required": [
        "partyId"
      ]
    },
    "SignersRequired": {
      "title": "SignersRequired",
      "description": "The signers required for this document",
      "example": "ALL",
      "type": "string",
      "enum": [
        "ALL",
        "ANY"
      ]
    },
    "SignersRequired1": {
      "title": "SignersRequired1",
      "description": "The signers required for this document. If provided, you must also provide `recipients`.",
      "example": "ALL",
      "type": "string",
      "enum": [
        "ALL",
        "ANY"
      ]
    },
    "SignHereTab2": {
      "title": "SignHereTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "scaleValue": {
          "example": 1,
          "type": "number",
          "default": 1.0,
          "minimum": 0.5,
          "maximum": 1.0,
          "format": "double"
        },
        "optional": {
          "description": "If true, then the tab is optional for the recipient to act on.",
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "SmartDocClosingDocumentInfo": {
      "title": "SmartDocClosingDocumentInfo",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/SmartDocAgent"
        },
        "lender": {
          "$ref": "#/definitions/SmartDocLender"
        },
        "loanOriginator": {
          "$ref": "#/definitions/SmartDocLoanParty"
        },
        "executionDate": {
          "example": "2018-03-14",
          "type": "string",
          "format": "date"
        },
        "executionCity": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "executionState": {
          "$ref": "#/definitions/SmartDocStateType"
        }
      },
      "required": [
        "lender",
        "loanOriginator",
        "executionDate",
        "executionCity",
        "executionState"
      ]
    },
    "SmartDocClosingDocumentInfo1": {
      "title": "SmartDocClosingDocumentInfo1",
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/SmartDocAgent"
        },
        "lender": {
          "$ref": "#/definitions/SmartDocLender"
        },
        "loanOriginator": {
          "$ref": "#/definitions/SmartDocLoanParty"
        },
        "companyMortgageBroker": {
          "$ref": "#/definitions/SmartDocLoanParty"
        },
        "individualMortgageBroker": {
          "$ref": "#/definitions/SmartDocLoanParty"
        },
        "executionDate": {
          "example": "2018-03-14",
          "type": "string",
          "format": "date"
        },
        "executionCity": {
          "description": "The name of the city.",
          "example": "New York",
          "type": "string",
          "minLength": 1,
          "maxLength": 26
        },
        "executionState": {
          "$ref": "#/definitions/SmartDocStateType"
        }
      },
      "required": [
        "lender",
        "loanOriginator",
        "companyMortgageBroker",
        "individualMortgageBroker",
        "executionDate",
        "executionCity",
        "executionState"
      ]
    },
    "SolutionSubType": {
      "title": "SolutionSubType",
      "description": "An ENUM for the type of solution to which the application corresponds",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "MORTGAGE",
        "HELOAN",
        "HELOC",
        "CANADA_MORTGAGE",
        "ACCOUNT_OPENING'",
        "AUTO",
        "OTHER"
      ]
    },
    "SolutionSubType1": {
      "title": "SolutionSubType1",
      "description": "ENUM for the subtype of home loan application being created",
      "example": "MORTGAGE",
      "type": "string",
      "enum": [
        "MORTGAGE",
        "HELOC",
        "HELOAN"
      ]
    },
    "Source": {
      "title": "Source",
      "description": "The source of where the document came from. Can be 'connectivity' for documents pulled through Blend's connectivity, or 'user' for all other documents",
      "example": "user",
      "type": "string",
      "enum": [
        "user",
        "connectivity"
      ]
    },
    "Status": {
      "title": "Status",
      "description": "Signing status",
      "example": "SIGNED",
      "type": "string",
      "enum": [
        "SIGNED",
        "DECLINED"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "ENUM describing whether this employer is current or previous",
      "example": "PREVIOUS",
      "type": "string",
      "enum": [
        "PREVIOUS",
        "CURRENT"
      ]
    },
    "Status2": {
      "title": "Status2",
      "description": "An ENUM for the status of the party in the application.",
      "example": "INVITED",
      "type": "string",
      "enum": [
        "CREATED",
        "INVITED",
        "IN_APPLICATION",
        "SUBMITTED"
      ]
    },
    "Status3": {
      "title": "Status3",
      "description": "State of econsent",
      "example": "Accepted",
      "type": "string",
      "enum": [
        "Accepted",
        "Declined",
        "Pending"
      ]
    },
    "Status4": {
      "title": "Status4",
      "description": "Veteran Status",
      "example": "ActiveDuty",
      "type": "string",
      "enum": [
        "NotEligible",
        "ActiveDuty",
        "NationalGuard",
        "Reserves",
        "Veteran",
        "RetiredDischarged",
        "SurvivingSpouse",
        "ReserveMemberNeverActivated",
        "ReserveNationalGuardNeverActivated",
        "None"
      ]
    },
    "Status5": {
      "title": "Status5",
      "description": "State of econsent",
      "example": "Accepted",
      "type": "string",
      "enum": [
        "Accepted",
        "Declined"
      ]
    },
    "Status6": {
      "title": "Status6",
      "description": "ENUM describing the Document Status",
      "example": "SIGNATURE_REQUESTED",
      "type": "string",
      "enum": [
        "SIGNATURE_REQUESTED",
        "READY"
      ]
    },
    "Status7": {
      "title": "Status7",
      "description": "An ENUM for the status of the application. This field is being deprecated but still controls lender UI and TRID",
      "example": "Application Completed",
      "type": "string",
      "enum": [
        "Pending Email Invitation",
        "Email Invitation Sent",
        "Email Invitations Sent",
        "Application Ready to Start",
        "Application in Progress'",
        "Application Completed",
        "Underwriting",
        "1/2 in Progress",
        "2/2 in Progress",
        "1/2 Submitted",
        "Closing",
        "Closed"
      ]
    },
    "Status8": {
      "title": "Status8",
      "description": "ENUM describing the status of the package",
      "example": "PENDING_ECONSENT",
      "type": "string",
      "enum": [
        "PENDING_ECONSENT",
        "ELECTRONICALLY_DELIVERED",
        "ELECTRONICALLY_VIEWED",
        "ALL_SIGNATURES_COMPLETE",
        "SENT_TO_PRINT",
        "PHYSICALLY_MAILED",
        "PHYSICALLY_DELIVERED",
        "DECLINED",
        "EXPIRED",
        "RETRIEVED",
        "NOT_ISSUED",
        "ISSUING",
        "FAILED_TO_ISSUE"
      ]
    },
    "Status9": {
      "title": "Status9",
      "description": "ENUM describing the Lender User's status in Blend",
      "example": "ACTIVE",
      "type": "string",
      "enum": [
        "ACTIVE",
        "ACTIVATION_REQUIRED",
        "DORMANT",
        "DELETED",
        "PROVISIONAL",
        "LOCKED_OUT"
      ]
    },
    "Status10": {
      "title": "Status10",
      "description": "The final status of the integration event which is being completed",
      "example": "SUCCEEDED",
      "type": "string",
      "enum": [
        "SUCCEEDED",
        "FAILED_NON_RETRYABLE",
        "FAILED_RETRYABLE"
      ]
    },
    "Status11": {
      "title": "Status11",
      "description": "ENUM describing the status of this application's export to an external system",
      "example": "IN_PROGRESS",
      "type": "string",
      "enum": [
        "IN_PROGRESS",
        "FAILED",
        "SUCCESS"
      ]
    },
    "Status13": {
      "title": "Status13",
      "description": "The latest status of the event, updated by the API",
      "example": "FAILED",
      "type": "string",
      "enum": [
        "EMITTED",
        "ACKNOWLEDGED",
        "PROCESSING",
        "SUCCEEDED",
        "FAILED",
        "NO_ACTION"
      ]
    },
    "Status15": {
      "title": "Status15",
      "description": "The status of the event",
      "example": "FAILED",
      "type": "string",
      "enum": [
        "PROCESSING",
        "SUCCEEDED",
        "FAILED",
        "NO_ACTION"
      ]
    },
    "Status16": {
      "title": "Status16",
      "description": "A collection of information about the status of an AUS run in Blend.",
      "type": "object",
      "properties": {
        "condition": {
          "description": "Whether the run succeeded or failed.",
          "example": "SUCCESS, FAILURE",
          "type": "string"
        },
        "name": {
          "description": "Name of the status.",
          "example": "SBAWF1.3",
          "type": "string"
        },
        "description": {
          "description": "The recommendation that came from the AUS run.",
          "example": "Successful Completion, Recommendation Available",
          "type": "string"
        },
        "code": {
          "description": "The error code for the AUS run. 0 if success.",
          "example": "0",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Error1"
        },
        "success": {
          "$ref": "#/definitions/Success"
        }
      },
      "required": [
        "condition",
        "name",
        "description"
      ]
    },
    "Status17": {
      "title": "Status17",
      "example": "COMPLETED_EXTERNALLY",
      "type": "string",
      "enum": [
        "COMPLETED_EXTERNALLY"
      ]
    },
    "Status18": {
      "title": "Status18",
      "example": "VIEWED",
      "type": "string",
      "enum": [
        "VIEWED",
        "SIGNED",
        "COMPLETED",
        "DECLINED",
        "HAS_NOT_VIEWED"
      ]
    },
    "Status21": {
      "title": "Status21",
      "description": "Outcome of the employer verification.",
      "example": "DATA_RECEIVED",
      "type": "string",
      "enum": [
        "NOT_STARTED",
        "UNABLE_TO_PROCESS",
        "REQUESTING",
        "AWAITING_DATA",
        "AWAITING_MANUAL_VERIFICATION",
        "DATA_RECEIVED",
        "FAILED_VERIFICATION"
      ]
    },
    "Status22": {
      "title": "Status22",
      "description": "Identity evaluation status",
      "example": "KBA",
      "type": "string",
      "enum": [
        "COMPLETED",
        "INCOMPLETE",
        "KBA"
      ]
    },
    "Status23": {
      "title": "Status23",
      "example": "CURRENT",
      "type": "string",
      "enum": [
        "CURRENT",
        "PREVIOUS"
      ]
    },
    "Status24": {
      "title": "Status24",
      "example": "APPROVE",
      "type": "string",
      "enum": [
        "APPROVE",
        "IN_REVIEW",
        "DECLINE"
      ]
    },
    "status25": {
      "title": "status25",
      "example": "CREATED",
      "type": "string",
      "enum": [
        "CREATED",
        "DELIVERED",
        "VIEWED",
        "SIGNED",
        "COMPLETED",
        "DECLINED",
        "FAILED_TO_CREATE",
        "CANCELLED"
      ]
    },
    "Status26": {
      "title": "Status26",
      "example": "CANCELLED",
      "type": "string",
      "enum": [
        "CANCELLED"
      ]
    },
    "status27": {
      "title": "status27",
      "example": "EMITTED",
      "type": "string",
      "enum": [
        "EMITTED",
        "ACKNOWLEDGED",
        "PROCESSING",
        "SUCCEEDED",
        "FAILED",
        "NO_ACTION"
      ]
    },
    "statusIncludes": {
      "title": "statusIncludes",
      "example": "READY",
      "type": "string",
      "enum": [
        "READY",
        "SIGNATURE_REQUESTED",
        "VOIDED"
      ]
    },
    "StatusType": {
      "title": "StatusType",
      "description": "Result of identity verification process",
      "example": "VERIFIED",
      "type": "string",
      "enum": [
        "VERIFIED",
        "REJECT",
        "SERVICE_UNAVAILABLE"
      ]
    },
    "SubType": {
      "title": "SubType",
      "description": "Beneficiary sub-type, INDIVIDUAL, TRUST, CHARITY, CHURCH, or FOUNDATION",
      "example": "INDIVIDUAL",
      "type": "string",
      "enum": [
        "INDIVIDUAL",
        "TRUST",
        "CHARITY",
        "CHURCH",
        "FOUNDATION"
      ]
    },
    "Success": {
      "title": "Success",
      "description": "Information about a successful AUS run.",
      "type": "object",
      "properties": {
        "state": {
          "description": "What kind of success it was, e.g. success or success-with-conditions.",
          "example": "success",
          "type": "string"
        }
      },
      "required": [
        "state"
      ]
    },
    "System2": {
      "title": "System2",
      "description": "The system producing or receiving the event.",
      "example": "BONS",
      "type": "string",
      "enum": [
        "Blend Webhooks",
        "BONS"
      ]
    },
    "Tab": {
      "title": "Tab",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type24"
        },
        "attributes": {
          "$ref": "#/definitions/Attributes9"
        }
      }
    },
    "TabExtractionMethod": {
      "title": "TabExtractionMethod",
      "description": "If tabs must be extracted from embedded fields, specify the extraction method to use.",
      "example": "EXPERE_ACROFORM",
      "type": "string",
      "enum": [
        "EXPERE_ACROFORM",
        "ENCOMPASS"
      ]
    },
    "TabExtractionMethod1": {
      "title": "TabExtractionMethod1",
      "description": "If omitted, the document is considered view-only for this party. For eSign documents where tabs are expected to be added manually, use value `MANUAL` for `tabExtractionMethod`.",
      "example": "EXPERE_ACROFORM",
      "type": "string",
      "enum": [
        "EXPERE_ACROFORM",
        "ENCOMPASS",
        "MANUAL"
      ]
    },
    "TextTab2": {
      "title": "TextTab2",
      "type": "object",
      "properties": {
        "xPosition": {
          "type": "integer",
          "format": "int32"
        },
        "yPosition": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "tabLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "conditionalParentLabel": {
          "type": "string"
        },
        "conditionalParentValue": {
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "maxLength": {
          "type": "number",
          "format": "double"
        },
        "required": {
          "example": false,
          "type": "boolean",
          "default": false
        },
        "font": {
          "type": "string"
        },
        "fontColor": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "bold": {
          "type": "boolean"
        }
      },
      "required": [
        "xPosition",
        "yPosition",
        "pageNumber"
      ]
    },
    "Type": {
      "title": "Type",
      "description": "ENUM describing the type of identifier being used.",
      "example": "EMPLOYER_IDENTIFICATION_NUMBER",
      "type": "string",
      "enum": [
        "EMPLOYER_IDENTIFICATION_NUMBER",
        "INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER",
        "PREPARER_TAXPAYER_IDENTIFICATION_NUMBER",
        "SOCIAL_SECURITY_NUMBER",
        "TAXPAYER_IDENTIFICATION_NUMBER_FOR_PENDING_USADOPTIONS"
      ]
    },
    "Type1": {
      "title": "Type1",
      "description": "ENUM describing what type of income this is",
      "example": "ALIMONY",
      "type": "string",
      "enum": [
        "ALIMONY",
        "ANNUITY",
        "AUTOMOBILE_ALLOWANCE",
        "AUTOMOBILE_EXPENSE_ACCOUNT",
        "BASE",
        "BOARDER_INCOME",
        "BONUS",
        "BORROWER_ESTIMATED_TOTAL_MONTHLY_INCOME",
        "CAPITAL_GAINS",
        "CAR_ALLOWANCE",
        "CHILD_SUPPORT",
        "COMMISSIONS",
        "CONTRACT_BASIS",
        "DEFERRED_COMPENSATION",
        "DEFINED_CONTRIBUTION_PLAN",
        "DISABILITY",
        "DIVIDENDS_INTEREST",
        "EMPLOYMENT_RELATED_ASSETS",
        "FOREIGN_INCOME",
        "FOSTER_CARE",
        "HOUSING_ALLOWANCE",
        "HOUSING_OR_PARSONAGE",
        "MILITARY_BASE_PAY",
        "MILITARY_CLOTHES_ALLOWANCE",
        "MILITARY_COMBAT_PAY",
        "MILITARY_ENTITLEMENTS",
        "MILITARY_FLIGHT_PAY",
        "MILITARY_HAZARD_PAY",
        "MILITARY_OVERSEAS_PAY",
        "MILITARY_PROP_PAY",
        "MILITARY_QUARTERS_ALLOWANCE",
        "MILITARY_RATIONS_ALLOWANCE",
        "MILITARY_VARIABLE_HOUSING_ALLOWANCE",
        "MISCELLANEOUS_INCOME",
        "MORTGAGE_CREDIT_CERTIFICATE",
        "MORTGAGE_DIFFERENTIAL_PAYMENTS",
        "NET_RENTAL_INCOME",
        "NON_BORROWER_CONTRIBUTION",
        "NOTES_RECEIVABLE",
        "OTHER",
        "OVERTIME",
        "PENSION",
        "PROPOSED_GROSS_RENT_FOR_SUBJECT_PROPERTY",
        "PUBLIC_ASSISTANCE",
        "REAL_ESTATE_OWNED_GROSS_RENTAL_INCOME",
        "RETIREMENT",
        "ROYALTY_PAYMENT",
        "SEASONAL_INCOME",
        "SEPARATE_MAINTENANCE",
        "SOCIAL_SECURITY",
        "SUBJECT_PROPERTY_NET_CASH_FLOW",
        "TEMPORARY_LEAVE",
        "TIP_INCOME",
        "TRAILING_CO_BORROWER_INCOME",
        "TRUSTS",
        "UNEMPLOYMENT_BENEFITS",
        "VABENEFITS_NON_EDUCATIONAL",
        "VA_COMPENSATION",
        "WORKERS_COMPENSATION"
      ]
    },
    "Type2": {
      "title": "Type2",
      "description": "Employment type",
      "example": "GENERAL_EMPLOYMENT",
      "type": "string",
      "enum": [
        "GENERAL_EMPLOYMENT",
        "MILITARY",
        "SELF_EMPLOYED",
        "INDEPENDENT_CONTRACTOR"
      ]
    },
    "Type3": {
      "title": "Type3",
      "description": "Type of address",
      "example": "CURRENT",
      "type": "string",
      "enum": [
        "CURRENT",
        "FORMER",
        "MAILING",
        "OTHER"
      ]
    },
    "Type5": {
      "title": "Type5",
      "description": "Identifying type of party to the application",
      "example": "SPOUSE",
      "type": "string",
      "enum": [
        "BORROWER",
        "COBORROWER",
        "OTHER",
        "REAL_ESTATE_AGENT",
        "SETTLOR",
        "SPOUSE",
        "TITLE_HOLDER",
        "NON_APPLICANT_USER"
      ]
    },
    "Type6": {
      "title": "Type6",
      "description": "Mortgage Type",
      "example": "CONVENTIONAL",
      "type": "string",
      "enum": [
        "CONVENTIONAL",
        "FHA",
        "OTHER",
        "USDARURAL_DEVELOPMENT",
        "VA"
      ]
    },
    "Type7": {
      "title": "Type7",
      "example": "SPOUSE",
      "type": "string",
      "enum": [
        "OTHER",
        "SETTLOR",
        "SPOUSE",
        "TITLE_HOLDER",
        "NON_APPLICANT_USER"
      ]
    },
    "Type8": {
      "title": "Type8",
      "description": "ENUM describing the type of property to which the application pertains",
      "example": "SINGLE_FAMILY",
      "type": "string",
      "enum": [
        "SINGLE_FAMILY",
        "CONDOMINIUM",
        "TOWNHOUSE",
        "TWO_TO_FOUR_UNIT_PROPERTY",
        "COOPERATIVE",
        "MANUFACTURED_OR_MOBILE_HOME"
      ]
    },
    "Type9": {
      "title": "Type9",
      "example": "ADMIN",
      "type": "string",
      "enum": [
        "ADMIN",
        "AUTHENTICATED",
        "BORROWER",
        "EXTERNAL_API",
        "INSURANCE_QC_AGENT",
        "INTERNAL_API",
        "LENDER",
        "SETTLEMENT_AGENT",
        "SYSTEM"
      ]
    },
    "Type10": {
      "title": "Type10",
      "description": "Type of system the application came from. If set to Other, it is recommended to also set a name.",
      "example": "LOS",
      "type": "string",
      "enum": [
        "LOS",
        "CRM",
        "Other"
      ]
    },
    "Type11": {
      "title": "Type11",
      "description": "Applicant type, primary, secondary or minor",
      "example": "PRIMARY",
      "type": "string",
      "enum": [
        "PRIMARY",
        "SECONDARY",
        "MINOR"
      ]
    },
    "Type12": {
      "title": "Type12",
      "description": "Address type, current or mailing",
      "example": "CURRENT",
      "type": "string",
      "enum": [
        "CURRENT",
        "MAILING"
      ]
    },
    "Type13": {
      "title": "Type13",
      "description": "Type of phone number",
      "example": "CELL",
      "type": "string",
      "enum": [
        "CELL",
        "HOME",
        "WORK"
      ]
    },
    "Type14": {
      "title": "Type14",
      "description": "Type of identity verification",
      "example": "IDV",
      "type": "string",
      "enum": [
        "IDV",
        "STEP_UP"
      ]
    },
    "Type15": {
      "title": "Type15",
      "description": "Type of ID document provided by applicant",
      "example": "US_PASSPORT",
      "type": "string",
      "enum": [
        "DRIVERS_LICENSE",
        "DRIVERS_PRIVILEGE_CARD",
        "CANADIAN_DRIVERS_LICENSE",
        "STATE_ID",
        "CANADIAN_STATE_ID",
        "US_PASSPORT",
        "US_PASSPORT_CARD",
        "FOREIGN_PASSPORT",
        "MILITARY_ID",
        "CONSULAR_ID",
        "TRIBAL_ID"
      ]
    },
    "Type16": {
      "title": "Type16",
      "description": "Type of employment.",
      "example": "CURRENT",
      "type": "string",
      "enum": [
        "CURRENT",
        "FORMER"
      ]
    },
    "Type18": {
      "title": "Type18",
      "description": "Account type",
      "example": "CHECKING",
      "type": "string",
      "enum": [
        "CHECKING",
        "SAVINGS",
        "CERTIFICATE_OF_DEPOSIT",
        "HSA"
      ]
    },
    "Type19": {
      "title": "Type19",
      "description": "Beneficiary type, primary or contingent",
      "example": "PRIMARY",
      "type": "string",
      "enum": [
        "PRIMARY",
        "CONTINGENT"
      ]
    },
    "Type21": {
      "title": "Type21",
      "description": "type of access limit",
      "example": "ATM",
      "type": "string",
      "enum": [
        "ATM",
        "DEBIT_CARD",
        "PROVISIONAL_CREDIT"
      ]
    },
    "Type22": {
      "title": "Type22",
      "description": "The type of integration event which is being completed",
      "example": "applicationSubmitted",
      "type": "string",
      "enum": [
        "applicationSubmitted",
        "applicationRejected",
        "accountReadyToFund",
        "applicantRejected",
        "applicantReadyForDecisioning"
      ]
    },
    "Type23": {
      "title": "Type23",
      "description": "The readable name of the event type relative to the system relevant to the described path.",
      "example": "applicationCompleted",
      "type": "string",
      "enum": [
        "applicationCompleted",
        "applicationExport",
        "applicationExported",
        "applicationTRIDTriggered",
        "applicationArchived",
        "applicationUnarchived",
        "eConsent",
        "applicationFileAvailable",
        "documentExported",
        "brokerExport",
        "partyCreated",
        "processCompleted",
        "applicationSubmitted",
        "applicationRejected",
        "accountReadyToFund",
        "applicantRejected",
        "applicantReadyForDecisioning",
        "disclosuresViewed",
        "disclosuresSigned",
        "disclosuresExpired",
        "disclosuresDeclined",
        "disclosuresStatusUpdated",
        "intentToProceed",
        "unknownEvent",
        "applicantEvent.ADDED",
        "applicationEvent.ADDED",
        "applicationEvent.READY_TO_FUND",
        "applicationEvent.SUBMITTED",
        "applicationEvent.EXPORTED",
        "applicationEvent.TRID_TRIGGERED",
        "applicationEvent.ARCHIVED",
        "applicationEvent.BROKER_EXPORT",
        "applicationEvent.INTENT_TO_PROCEED",
        "documentEvent.AVAILABLE",
        "documentEvent.EXPORTED",
        "eConsentStatus.UPDATE",
        "applicationEvent.APPLICATION_SUBMITTED",
        "applicationEvent.APPLICATION_EXPORTED",
        "applicationEvent.APPLICATION_ARCHIVED",
        "workflowEvent.COMPLETED",
        "disclosuresEvent.DISCLOSURES_VIEWED",
        "disclosuresEvent.DISCLOSURES_SIGNED",
        "disclosuresEvent.DISCLOSURES_DECLINED",
        "disclosuresEvent.DISCLOSURES_EXPIRED",
        "disclosuresEvent.DISCLOSURES_STATUS_CHANGE"
      ]
    },
    "Type24": {
      "title": "Type24",
      "example": "signHere",
      "type": "string",
      "enum": [
        "signHere"
      ]
    },
    "Type26": {
      "title": "Type26",
      "description": "Type of phone number",
      "example": "HOME",
      "type": "string",
      "enum": [
        "HOME",
        "WORK",
        "MOBILE"
      ]
    },
    "Type27": {
      "title": "Type27",
      "example": "CURRENT",
      "type": "string",
      "enum": [
        "CURRENT",
        "MAILING",
        "FORMER",
        "OTHER"
      ]
    },
    "Type28": {
      "title": "Type28",
      "example": "SINGLE_FAMILY",
      "type": "string",
      "enum": [
        "SINGLE_FAMILY",
        "CONDOMINIUM",
        "TOWNHOUSE",
        "TWO_TO_FOUR_UNIT_PROPERTY",
        "COOPERATIVE",
        "MULTIFAMILY",
        "MANUFACTURED_OR_MOBILE_HOME",
        "COMMERCIAL_NON_RESIDENTIAL",
        "MIXED_USE_RESIDENTIAL",
        "FARM",
        "HOME_AND_BUSINESS_COMBINED",
        "LAND"
      ]
    },
    "Type29": {
      "title": "Type29",
      "example": "BASE",
      "type": "string",
      "enum": [
        "BASE",
        "BONUS",
        "OVERTIME",
        "COMMISSIONS",
        "SOCIAL_SECURITY",
        "PENSION",
        "ALIMONY",
        "ANNUITY",
        "DEFERRED_COMPENSATION",
        "DIVIDENDS_INTEREST",
        "OTHER"
      ]
    },
    "Type30": {
      "title": "Type30",
      "example": "GENERAL_EMPLOYMENT",
      "type": "string",
      "enum": [
        "GENERAL_EMPLOYMENT",
        "MILITARY",
        "SELF_EMPLOYED",
        "INDEPENDENT_CONTRACTOR"
      ]
    },
    "Type31": {
      "title": "Type31",
      "example": "CHILD_SUPPORT",
      "type": "string",
      "enum": [
        "ALIMONY",
        "CHILD_SUPPORT",
        "SEPARATE_MAINTENANCE_PAYMENT"
      ]
    },
    "Type32": {
      "title": "Type32",
      "description": "Borrower type",
      "example": "BORROWER",
      "type": "string",
      "enum": [
        "BORROWER",
        "COBORROWER"
      ]
    },
    "Type33": {
      "title": "Type33",
      "example": "AUTO",
      "type": "string",
      "enum": [
        "CD",
        "SAVINGS",
        "AUTO",
        "SPECIALTY_VEHICLE",
        "STOCK"
      ]
    },
    "Type34": {
      "title": "Type34",
      "example": "ATV",
      "type": "string",
      "enum": [
        "MOTORHOME",
        "TRAVEL_TRAILER",
        "CAMPING_TRAILER",
        "TRUCK_CAMPER",
        "PARK_MODEL",
        "UTILITY_SPECIALTY_TRAILER",
        "BOAT",
        "PERSONAL_WATERCRAFT",
        "OUTBOARD_MOTOR",
        "BOAT_TRAILER",
        "MOTORCYCLE",
        "ATV",
        "MOTORCYCLE_SIDE_CAR",
        "SNOWMOBILE",
        "MOTORCYCLE_TRAILER",
        "SCOOTER",
        "UTV"
      ]
    },
    "Type35": {
      "title": "Type35",
      "description": "ENUM describing whether this party is the primary borrower or a coborrower",
      "example": "BORROWER",
      "type": "string",
      "enum": [
        "BORROWER",
        "COBORROWER"
      ]
    },
    "Type36": {
      "title": "Type36",
      "description": "ENUM describing the type of party",
      "example": "SPOUSE",
      "type": "string",
      "enum": [
        "OTHER",
        "SETTLOR",
        "SPOUSE",
        "TITLE_HOLDER",
        "COBORROWER",
        "NON_APPLICANT_USER"
      ]
    },
    "UnparsedStreetAddress": {
      "title": "UnparsedStreetAddress",
      "type": "object",
      "properties": {
        "addressLineText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        },
        "addressAdditionalLineText": {
          "type": "string",
          "minLength": 1,
          "maxLength": 240
        }
      },
      "required": [
        "addressLineText"
      ]
    },
    "UsageType": {
      "title": "UsageType",
      "description": "Usage type",
      "example": "PRIMARY_RESIDENCE",
      "type": "string",
      "enum": [
        "PRIMARY_RESIDENCE",
        "SECOND_HOME",
        "PRIMARY_AND_INVESTMENT",
        "INVESTMENT"
      ]
    },
    "ValidDecorator": {
      "title": "ValidDecorator",
      "example": "losPrimaryKey",
      "type": "string",
      "enum": [
        "losPrimaryKey",
        "crmPrimaryKey",
        "originationType",
        "metadata.documentYear",
        "referenceLoanNumber",
        "metadata.memberEntityIdentifier",
        "borrower.econsentMetadata",
        "metadata.assetIdentifier"
      ]
    },
    "Version": {
      "title": "Version",
      "description": "The version of the system producing or receiving the events. May be null for systems with no versioning.",
      "example": "v1",
      "type": "string",
      "enum": [
        "v1",
        "v2"
      ]
    },
    "version1": {
      "title": "version1",
      "example": "v1",
      "type": "string",
      "enum": [
        "v1",
        "v2"
      ]
    },
    "YearlyIncome": {
      "title": "YearlyIncome",
      "type": "object",
      "properties": {
        "code": {
          "description": "ISO code of the currency.",
          "example": "USD",
          "type": "string"
        },
        "amount": {
          "description": "Amount of the currency.",
          "example": 1234,
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "code",
        "amount"
      ]
    }
  },
  "security": [
    {
      "auth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": ""
    },
    {
      "name": "Home Lending - Applications",
      "description": ""
    },
    {
      "name": "Documents",
      "description": ""
    },
    {
      "name": "Tax transcripts",
      "description": ""
    },
    {
      "name": "Packages",
      "description": ""
    },
    {
      "name": "Parties",
      "description": ""
    },
    {
      "name": "Follow-Ups",
      "description": ""
    },
    {
      "name": "Lenders",
      "description": ""
    },
    {
      "name": "Realtors",
      "description": ""
    },
    {
      "name": "Account Opening",
      "description": ""
    },
    {
      "name": "Reporting",
      "description": ""
    },
    {
      "name": "Events",
      "description": ""
    },
    {
      "name": "Assets",
      "description": ""
    },
    {
      "name": "Close",
      "description": ""
    },
    {
      "name": "Consumer Lending - Applications",
      "description": ""
    }
  ]
}